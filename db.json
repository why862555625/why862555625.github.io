{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/people.ico","path":"people.ico","modified":0,"renderable":1},{"_id":"themes/butterfly/source/people.png","path":"people.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/gengxing.css","path":"css/gengxing.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/glb.css","path":"css/glb.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/guanyu.css","path":"css/guanyu.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/link.css","path":"css/link.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/liuyanban.css","path":"css/liuyanban.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/mouse.css","path":"css/mouse.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/mycss.css","path":"css/mycss.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/nav_menu.css","path":"css/nav_menu.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/notice.css","path":"css/notice.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/people.css","path":"css/people.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/progress_bar.css","path":"css/progress_bar.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/xiazai.css","path":"css/xiazai.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/example/try.html","path":"example/try.html","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/20115853_380680b35f.jpeg","path":"img/20115853_380680b35f.jpeg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.webp","path":"img/404.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/JgNrST23690481619450556342.gif!cover","path":"img/JgNrST23690481619450556342.gif!cover","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/alipay.webp","path":"img/alipay.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/bj.webp","path":"img/bj.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/bt.webp","path":"img/bt.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/cover.png","path":"img/cover.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/default_top_img.webp","path":"img/default_top_img.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/dzbp.webp","path":"img/dzbp.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.webp","path":"img/favicon.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/hx.webp","path":"img/hx.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/lightning1.png","path":"img/lightning1.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/lightning2.png","path":"img/lightning2.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/ljz.webp","path":"img/ljz.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/logo.ico","path":"img/logo.ico","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/xka.webp","path":"img/xka.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/categoryBar.js","path":"js/categoryBar.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/copy.js","path":"js/copy.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/countup.js","path":"js/countup.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/dmyx.js","path":"js/dmyx.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/hygl.js","path":"js/hygl.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/index.js","path":"js/index.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/nav_menu.js","path":"js/nav_menu.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/people.js","path":"js/people.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/ripples.js","path":"js/ripples.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/shangshengqipao.js","path":"js/shangshengqipao.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/snowflake.js","path":"js/snowflake.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/sun_moon.js","path":"js/sun_moon.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/twikookstx.js","path":"js/twikookstx.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/watchWorker.js","path":"js/watchWorker.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/xh1.js","path":"js/xh1.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/xh2.js","path":"js/xh2.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/xiazai.js","path":"js/xiazai.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/music.html","path":"music/music.html","modified":0,"renderable":1},{"_id":"themes/butterfly/source/xz/index.html","path":"xz/index.html","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/css/bootstrap.min.css","path":"dmyx/css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/css/love.css","path":"dmyx/css/love.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/css/try.css","path":"dmyx/css/try.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/fonts/glyphicons-halflings-regular.woff2","path":"dmyx/fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/images/bg-body.jpg","path":"dmyx/images/bg-body.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/images/cream.png","path":"dmyx/images/cream.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/images/device_ico.png","path":"dmyx/images/device_ico.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/images/shouji.png","path":"dmyx/images/shouji.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/js/bootstrap.min.js","path":"dmyx/js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/example/try/index.html","path":"example/try/index.html","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/1.png","path":"img/app/1.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/10.png","path":"img/app/10.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/11.png","path":"img/app/11.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/12.png","path":"img/app/12.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/13.png","path":"img/app/13.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/14.png","path":"img/app/14.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/15.png","path":"img/app/15.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/16.png","path":"img/app/16.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/17.png","path":"img/app/17.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/18.png","path":"img/app/18.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/19.png","path":"img/app/19.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/2.png","path":"img/app/2.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/20.png","path":"img/app/20.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/21.png","path":"img/app/21.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/22.png","path":"img/app/22.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/23.png","path":"img/app/23.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/24.png","path":"img/app/24.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/25.png","path":"img/app/25.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/26.png","path":"img/app/26.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/27.png","path":"img/app/27.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/3.png","path":"img/app/3.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/4.png","path":"img/app/4.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/5.png","path":"img/app/5.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/6.png","path":"img/app/6.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/7.png","path":"img/app/7.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/8.png","path":"img/app/8.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/app/9.png","path":"img/app/9.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/tz/1.webp","path":"img/tz/1.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/tz/2.webp","path":"img/tz/2.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/tz/3.webp","path":"img/tz/3.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/custom/swiper_init.js","path":"js/custom/swiper_init.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/wz/fishes.js","path":"js/wz/fishes.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/wz/siche.js","path":"js/wz/siche.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/css/lights.css","path":"music/css/lights.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/js/Config.js","path":"music/js/Config.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/js/Lights.js","path":"music/js/Lights.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/js/Three.js","path":"music/js/Three.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/xz/css/login.css","path":"xz/css/login.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/xz/img/login_background.png","path":"xz/img/login_background.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/xz/js/app.js","path":"xz/js/app.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/xz/js/jquery.params.js","path":"xz/js/jquery.params.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/xz/js/particles.js","path":"xz/js/particles.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/js/one/one.min.js","path":"dmyx/js/one/one.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/blue.png","path":"music/images/avatars/blue.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/cherrytree.png","path":"music/images/avatars/cherrytree.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/ellie.jpeg","path":"music/images/avatars/ellie.jpeg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/green.png","path":"music/images/avatars/green.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/interscope.png","path":"music/images/avatars/interscope.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/magenta.png","path":"music/images/avatars/magenta.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/orange.png","path":"music/images/avatars/orange.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/polydor.png","path":"music/images/avatars/polydor.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/red.png","path":"music/images/avatars/red.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/data/spectrumData.png","path":"music/images/data/spectrumData.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/envmap/envMapBottom.png","path":"music/images/envmap/envMapBottom.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/envmap/envMapFrontBack.png","path":"music/images/envmap/envMapFrontBack.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/envmap/envMapLeftRight.png","path":"music/images/envmap/envMapLeftRight.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/envmap/envMapTop.png","path":"music/images/envmap/envMapTop.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/bengalSeq.png","path":"music/images/experience/bengalSeq.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/bengalShadow.png","path":"music/images/experience/bengalShadow.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/circle.png","path":"music/images/experience/circle.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/dot.png","path":"music/images/experience/dot.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/glow.png","path":"music/images/experience/glow.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/particle.png","path":"music/images/experience/particle.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaBlue.png","path":"music/images/experience/plasmaBlue.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaCyan.png","path":"music/images/experience/plasmaCyan.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaGreen.png","path":"music/images/experience/plasmaGreen.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaMagenta.png","path":"music/images/experience/plasmaMagenta.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaRed.png","path":"music/images/experience/plasmaRed.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaWhite.png","path":"music/images/experience/plasmaWhite.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/plasmaYellow.png","path":"music/images/experience/plasmaYellow.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/skybox.png","path":"music/images/experience/skybox.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/spot.png","path":"music/images/experience/spot.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/spotLine.png","path":"music/images/experience/spotLine.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/spotLineAlpha.png","path":"music/images/experience/spotLineAlpha.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/experience/terrain66.png","path":"music/images/experience/terrain66.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/fonts/standard_07_55.png","path":"music/images/fonts/standard_07_55.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/fonts/standard_07_55.txt","path":"music/images/fonts/standard_07_55.txt","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/home/bokeh.png","path":"music/images/home/bokeh.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/home/loadingButton.png","path":"music/images/home/loadingButton.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/home/logo.png","path":"music/images/home/logo.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/home/playButton.png","path":"music/images/home/playButton.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/home/replayButton.png","path":"music/images/home/replayButton.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/home/tweetButton.png","path":"music/images/home/tweetButton.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/js/codemirror/lib/codemirror_all.min.css","path":"dmyx/js/codemirror/lib/codemirror_all.min.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/js/codemirror/lib/codemirror_all.min.js","path":"dmyx/js/codemirror/lib/codemirror_all.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar0.png","path":"music/images/avatars/ellie/ellieAvatar0.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar1.png","path":"music/images/avatars/ellie/ellieAvatar1.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar2.png","path":"music/images/avatars/ellie/ellieAvatar2.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar3.png","path":"music/images/avatars/ellie/ellieAvatar3.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar4.png","path":"music/images/avatars/ellie/ellieAvatar4.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/dmyx/js/codemirror/addon/hint/jsAll.json","path":"dmyx/js/codemirror/addon/hint/jsAll.json","modified":0,"renderable":1},{"_id":"themes/butterfly/source/example/try/code/1/bd/rono.html","path":"example/try/code/1/bd/rono.html","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/new-article.md","hash":"8ee261a2592c12d0d7b87bf3a10d7d0ab77f5fbd","modified":1685012669891},{"_id":"source/_data/creativity.yml","hash":"c2c299472f44c32f4f41437627b08905a94b105b","modified":1684980976430},{"_id":"source/_data/indexwz.yml","hash":"e01735727e98bc94040ce1743d5cf203ea92efda","modified":1684980976430},{"_id":"source/_data/link.yml","hash":"eff66d13c67e4a562d57a5a68905250e4e889f96","modified":1684980976430},{"_id":"source/_data/notice.yml","hash":"ad36abe5ec95ac950180b30b09ad49476731c618","modified":1684980976430},{"_id":"source/_data/reward.yml","hash":"812ed3ac1a1838fda0bb0e83646d81c3e209c35e","modified":1684980976430},{"_id":"source/_data/shuanbian.yml","hash":"c39b4b0622bc90231391a51a9517f66d12e9a6f8","modified":1684980976430},{"_id":"source/_data/video.yml","hash":"a8ec79a98d36be174104a51f7ccda754977d1374","modified":1684980976430},{"_id":"source/_data/widget.yml","hash":"7d2cb808f7ffa15e283191351f59af4966250900","modified":1684980976430},{"_id":"source/about/index.md","hash":"50e4f7bd6cfc6700c13b30360c3e44e3be96a677","modified":1684980976430},{"_id":"source/categories/index.md","hash":"9bb060c42c10f23a36592c5939c5f839e24f6049","modified":1684980976430},{"_id":"source/link/index.md","hash":"320ceb4b12a4e6b0e6c3b5f7b2d4531749005649","modified":1684980976430},{"_id":"source/messageboard/index.md","hash":"038a8499d8b491aaa183f72e2460bf5305bab4e5","modified":1684980976430},{"_id":"source/music/index.md","hash":"5e5ed647c87b506d874e6c653f1c0c9d8fc5484f","modified":1684980976430},{"_id":"source/myself/index.md","hash":"3ee68f92f29a2d35cc14350c1e2a02cb8e4664fb","modified":1684980976430},{"_id":"source/notice/index.md","hash":"9f60411acce0f747b75401a6cd0f17fea2fd5709","modified":1684980976430},{"_id":"source/selfjs/localsearch.js","hash":"5bd7f3a3db98258311f98a543b3bcace7e30aa76","modified":1684980976430},{"_id":"source/selfjs/tw_cn.js","hash":"ed646e9fb14b1179d8cfb9d89db299cf6c341193","modified":1684980976430},{"_id":"source/tags/index.md","hash":"40106c5ca6b310d5da88309846821a054740f676","modified":1684980976430},{"_id":"source/talking/index.md","hash":"3dfa0d71dcd3aaf7f56e8fa56e0fddff86788510","modified":1684980976430},{"_id":"source/timeline/index.md","hash":"56bd1e56272329eaed9869c3e8ee411b3b7fb7df","modified":1684980976430},{"_id":"source/tuku/index.md","hash":"d1a9e77d8af65caf73b89f47c0d31deb0b3b9a53","modified":1684980976430},{"_id":"source/video/index.md","hash":"f1cd6e14376edc1af62e627db3b2d0cd3443e5df","modified":1684980976430},{"_id":"source/xiance/index.md","hash":"9f5e41f519461d0cba98768b52db5504b4cb1301","modified":1684980976430},{"_id":"source/_posts/c/quickjs调试器.md","hash":"5af69cf1f986f1f211f636c2417ba74bd6ae2a74","modified":1685011082319},{"_id":"source/_posts/c/vela快应用框架.md","hash":"72e210868e0a9105bdd3216f6ef61221114f06cb","modified":1684980976430},{"_id":"source/_posts/js/HTML&css复习.md","hash":"322f3dc5ed9a608563b430a7181091321c083800","modified":1684980976430},{"_id":"source/_posts/js/JS复习.md","hash":"d5dd2f05dba8360b2399fac01c33ba8e5fdb566a","modified":1685011061632},{"_id":"source/xiance/marvel/index.md","hash":"5c968615e068a0676d0254b18fe7fbfbd8494773","modified":1684980976430},{"_id":"source/xiance/ohmygirl/index.md","hash":"c19fb431937beed0eecbd01227defcf5d2b6c4fc","modified":1684980976430},{"_id":"themes/butterfly/source/css/gengxing.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1684980976438},{"_id":"themes/butterfly/source/css/notice.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1684980976438},{"_id":"themes/butterfly/package.json","hash":"253d24223168c9c05272381e9b82f818493a8b9d","modified":1684980976434},{"_id":"themes/butterfly/plugins.yml","hash":"ee8d1240372fc90e2666759088ad0c5375666d74","modified":1684980976434},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"28b6f0c39155651d747eb595e0a283bc97be2e09","modified":1684980976430},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1684980976430},{"_id":"themes/butterfly/languages/default.yml","hash":"1e37a3695d50e3e61d7c36e58a6dac872a4a56cd","modified":1684980976430},{"_id":"themes/butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1684980976430},{"_id":"themes/butterfly/layout/index.pug","hash":"eab10b8d1f339103a9cf47aee7624dd22b6d0936","modified":1684980976434},{"_id":"themes/butterfly/layout/category.pug","hash":"ea73327d962964c35f2a45281db5715fe9e6ff4a","modified":1684980976430},{"_id":"themes/butterfly/_config.yml","hash":"22709487210fd4df8a502a8df765b9ca02f814d8","modified":1685012525811},{"_id":"themes/butterfly/layout/post.pug","hash":"b5ef1ae4b23345608edb9d148e52ea078bf1c411","modified":1684980976434},{"_id":"themes/butterfly/layout/page.pug","hash":"2de6c8854e372c2c5745120329c1fc868c6f4f83","modified":1684980976434},{"_id":"themes/butterfly/layout/tag.pug","hash":"db8d8810ec536c134caefe51441593b2fcb356c1","modified":1684980976434},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"a671c30aa6c233dcdc0b379550ed75cf2591ea71","modified":1684980976430},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1684980976430},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml.bak","hash":"67e4f5a66d4b8cabadbaad0410628364ee75e0ae","modified":1684980976430},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1684980976430},{"_id":"themes/butterfly/source/people.ico","hash":"791c16e638c9035943d524e96b7b2d996c39e711","modified":1684980976458},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1684980976430},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"346b6b650b9dee4844f3be7865886002f82da24c","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/categoryBar.pug","hash":"aa2e637ae92523a5fb519f241bdf1f15887acdd8","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/appxiazai.pug","hash":"980c862fb342550b5e528425560bb35a234b9894","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/footer2.pug","hash":"0877f52c361c0df449deef9cf3650178fb098b2e","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"7f06a73233caf95724c2aad5a52d442fe3ea2f43","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"8b4329bddced18678c4724b56b7e6b9a448520f9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/recommend.pug","hash":"0e6bf4de2ceb41e36a9c037bba67f35fcd1c9afb","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/index1.pug","hash":"5d012c3a1c552aeba77b6751faef4280f8346fa3","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"2454640401fdaf44246ecb638c80b3d35293eba3","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"8d39473ed112d113674a0f689f63fae06c72abd2","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/sysliderbar.pug","hash":"7fb3f7a3638aa8def05a13606d1ba4a719cce067","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/tagBar.pug","hash":"e52ef55e416ffbd0e4d82e5337cbdbdf4f6a8f53","modified":1684980976434},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1684980976434},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"acfe765fb2c607bff7198630dbfa53a888c36357","modified":1684980976434},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"a3d1f417965ca20253c36f9e93429f3df6268856","modified":1684980976434},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b4940a5c73d3a5cd8bb5883e3041ecdd905a74e0","modified":1684980976434},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"1d2b76a0aa7a12dd673cea3e9228646af8c4414a","modified":1684980976434},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1684980976434},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1684980976434},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"21379ed2dccb69c43b893895c9d56238c11e5f43","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/cybericon.js","hash":"3cc314f0a3d694862fecbc1f17f72f285f466548","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"ee3e70098eb0849497d50b75e18cf4a27c397d52","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/get_arrays.js","hash":"70aa404d3799c3417308dcdf5fd12abfbf1b131e","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"b4cd617c619d1a0df93603721a6fa1317526174b","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"d368a8830e506c8b5eb6512b709ec8db354d5ea1","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"763dab5c83f50c1c62fffc9a9dfedea29bb4e629","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/suijiwenzhang.js","hash":"64c9f34bf681513a89d24b39ab2aeec51978cd1b","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/random.js","hash":"3f0fae833424e22b1f669fcf0ac7078ac7b00cef","modified":1684980976434},{"_id":"themes/butterfly/scripts/helpers/swiperbar.js","hash":"b641991f5d2b9344ad31c03e3377b148e41697b3","modified":1684980976434},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/bubble.js","hash":"75726e636d319aa6097f096be68fb20d1fdd60cd","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/checkbox.js","hash":"fa93b169fe74bced502b0d16fe3d6bd17434b8f3","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/folding.js","hash":"dc4e409eabebf5769b50c12c9e8c66b749d0ae85","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/card.js","hash":"bb40ec930ca63dcb74407b6afc95ed7fc4ac1006","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"f79c99f6c5b626c272dc2bed2b0250d6b91bb28a","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/dmyx.js","hash":"8b5e50221b334c97d003ebcf140e10f91482927f","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/inline-labels.js","hash":"08fbdc0ea622270e1236a28778f875c8ad2e5516","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/mima.js","hash":"8ab6322d40ad6855952f0797f9c9cb402d6c1e87","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/link.js","hash":"cf0867ac8bfbec571fa6820818ed14f749cc188c","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/notation.js","hash":"c80a0122616f35ecb1ea29da637e8d7fd7b4d39f","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/poem.js","hash":"d2885d788cdccee2de982a60bce70851c9da8be7","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/msgbox.js","hash":"365a9423fbde8308984a764da5a33d48ef7d08a8","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/progress.js","hash":"a881319a1a83bbfc954180faeab1cf4115abccab","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/video.js","hash":"b180024ca09e913470e38d618e98966ea727b614","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/xiazai.js","hash":"4305e3940f2f1565ed198def311f00767840f274","modified":1684980976438},{"_id":"themes/butterfly/scripts/tag/wblj.js","hash":"78b217f9ddddc8d7469989418fa4cff007270cc2","modified":1684980976438},{"_id":"themes/butterfly/source/css/index.styl","hash":"da55b27d533aae7dfa5ed6d2d63afd57e9cdab5d","modified":1684980976438},{"_id":"themes/butterfly/source/css/link.css","hash":"0fbb8034c33b6e3592a38f84e32a7f4ca6de570d","modified":1684980976438},{"_id":"themes/butterfly/source/css/liuyanban.css","hash":"ea7b2c41de33c33ce8cf68badbc3cc57d4d2c28f","modified":1684980976438},{"_id":"themes/butterfly/source/css/mouse.css","hash":"9ba069efa357f82d208dbc88357bf278f99fc875","modified":1684980976438},{"_id":"themes/butterfly/source/css/glb.css","hash":"70465d17d3110d33d6a5c3c4ee199cefe7e8895e","modified":1684980976438},{"_id":"themes/butterfly/source/css/people.css","hash":"8f8a9272d512f871d2773031af1d7a271acabb0b","modified":1684980976438},{"_id":"themes/butterfly/source/css/mycss.css","hash":"95af0a254b18287f09ed8297233a5d005da40778","modified":1684980976438},{"_id":"themes/butterfly/source/css/guanyu.css","hash":"3e292547dbf8f48892214cf961767faaa340682c","modified":1684980976438},{"_id":"themes/butterfly/source/css/nav_menu.css","hash":"d2b20dc763c4240b4401907c1771e3e37a1ebe22","modified":1684980976438},{"_id":"themes/butterfly/source/css/progress_bar.css","hash":"ce1a2c7b71129aa204ea9cf4115277a0b28f8a8d","modified":1684980976438},{"_id":"themes/butterfly/source/example/try.html","hash":"3dc615ebae03a4f7c101f9158738b9afb35222c9","modified":1684980976442},{"_id":"themes/butterfly/source/css/xiazai.css","hash":"4b6068622b4788f1d4933bc2c4bd17b14ff61931","modified":1684980976438},{"_id":"themes/butterfly/source/css/var.styl","hash":"d52571465e4b282f6c643fc917b6914f653fa4ee","modified":1684980976438},{"_id":"themes/butterfly/source/img/alipay.webp","hash":"b7310124dcd14f351d224f17863dfbab6a0f701c","modified":1684980976446},{"_id":"themes/butterfly/source/img/404.webp","hash":"bd0dc3ec1a22a1a72ee179d6b42434b1d763ec69","modified":1684980976442},{"_id":"themes/butterfly/source/img/cover.png","hash":"f9edf7939e4bb129392396a83aa637b36e09499e","modified":1684980976446},{"_id":"themes/butterfly/source/img/favicon.webp","hash":"60412802902f538637b45db3bf64afea208a5fe8","modified":1684980976446},{"_id":"themes/butterfly/source/img/default_top_img.webp","hash":"4ab272a986bb628ad6061e82322665a1eeabb438","modified":1684980976446},{"_id":"themes/butterfly/source/img/hx.webp","hash":"a5574851e056f58c8330d4ba6d6c6348112ba3ef","modified":1684980976446},{"_id":"themes/butterfly/source/img/lightning1.png","hash":"8dbaa433850eee48afe82e5bf178991e181ac981","modified":1684980976446},{"_id":"themes/butterfly/source/img/ljz.webp","hash":"e63976f72c82e9813c4c138d53a859a7d0251a6d","modified":1684980976446},{"_id":"themes/butterfly/source/img/lightning2.png","hash":"83f02621657fa555369c680d154255dabbf712ff","modified":1684980976446},{"_id":"themes/butterfly/source/img/xka.webp","hash":"607e06c04e255207f26f896de772ace855e21357","modified":1684980976446},{"_id":"themes/butterfly/source/js/categoryBar.js","hash":"19a3b570b471951d5ab67f1607d5f7f43ef380be","modified":1684980976446},{"_id":"themes/butterfly/source/js/copy.js","hash":"40965ead3aee64c38a0ef944f54fe6b6b184ee21","modified":1684980976446},{"_id":"themes/butterfly/source/img/logo.ico","hash":"791c16e638c9035943d524e96b7b2d996c39e711","modified":1684980976446},{"_id":"themes/butterfly/source/js/countup.js","hash":"89388b8b14405b13257da96356312a5f37f94841","modified":1684980976446},{"_id":"themes/butterfly/source/js/hygl.js","hash":"0dab40071de2b58aac27d55428eaca257cea8087","modified":1684980976446},{"_id":"themes/butterfly/source/js/dmyx.js","hash":"339ad47c0aa929ac3f9e8a59e7622c07a2d7e125","modified":1684980976446},{"_id":"themes/butterfly/source/js/index.js","hash":"fcde0a1ec6cd0a48c0a59611284ef6aa55fc87a8","modified":1684980976446},{"_id":"themes/butterfly/source/js/people.js","hash":"4bf541c0ae1394dae5e7a823202fc89b18afe73b","modified":1684980976446},{"_id":"themes/butterfly/source/js/nav_menu.js","hash":"05b332a80a6d8e1f490159ea286930cc042c4f6e","modified":1684980976446},{"_id":"themes/butterfly/source/js/ripples.js","hash":"a60e67666d8385d928f11f61236a5c57fd0fbc77","modified":1684980976446},{"_id":"themes/butterfly/source/img/dzbp.webp","hash":"48e680ccfe156c25b9cf6c0a63cd8e135dc2d633","modified":1684980976446},{"_id":"themes/butterfly/source/js/snowflake.js","hash":"a5b020f3bbb9a2c06e8a8dd25cd99513d10476ba","modified":1684980976450},{"_id":"themes/butterfly/source/js/main.js","hash":"60110cdc320450483b13c4a4961bd6c56ec3c436","modified":1684980976446},{"_id":"themes/butterfly/source/js/sun_moon.js","hash":"6d811c3e017116f0b79d756c15d54aad0ea3f5df","modified":1684980976450},{"_id":"themes/butterfly/source/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1684980976450},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"5c1391c9e96950833641f178b5f23c58422fb659","modified":1684980976450},{"_id":"themes/butterfly/source/js/watchWorker.js","hash":"9ee3c98dc197c09e38b41b5ffca5970cd0e579e3","modified":1684980976450},{"_id":"themes/butterfly/source/js/xh2.js","hash":"5e7707221da3e904bce94f7342b7fbf273802681","modified":1684980976450},{"_id":"themes/butterfly/source/js/xiazai.js","hash":"810c3317e57d7b951e686815b0bb557e6eeb2c7f","modified":1684980976450},{"_id":"themes/butterfly/source/js/twikookstx.js","hash":"1e21e562f0f8c3fbfacac60ac6c039be5c97a27a","modified":1684980976450},{"_id":"themes/butterfly/source/music/music.html","hash":"861943a6551ac46743ee5118073643d0e8a5be1c","modified":1684980976458},{"_id":"themes/butterfly/source/xz/index.html","hash":"2cbf295492bbf568bfbe8e303dad9e5982db77d6","modified":1684980976458},{"_id":"themes/butterfly/layout/includes/custom/cyber_swiperBar.pug","hash":"f93de5b7dd054bbfcdd1e0892275376f2295202e","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/custom/sun_moon.pug","hash":"1e8cd2cea3115322523f752e3146e4cabe598409","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/custom/businesscard.pug","hash":"90d8b05581e083ab0791b414f2865ace6d7d4944","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"fe4d847177b824e09c75e9c7b723184c708c569a","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"15530d9ac59c576d79af75dd687efe71e8d261b0","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"2df5a033104775ee9c8715925bb32c3ec5b75da0","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"65a23b5170204e55b813ce13a79d799b66b7382c","modified":1684980976430},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1684980976430},{"_id":"themes/butterfly/source/js/xh1.js","hash":"4449ed117bb01a0f457a09a636548e5bcd65ac26","modified":1684980976450},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"d713833db73d652f36d6027c4dc5d7e43c972cd2","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"719b09824436a6af1b4c284c3850c049546562d9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"238c568e3b3fab1aa60d21078867a8539d0d9850","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"f86b0c45874ae1335ab575c29d4f9c8ea09ab92a","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"cba1de28edbbc5186ff5e4ae88942173e2eb8f96","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"28a07595a25d9cb875103bc64b403ad3a6ac2b04","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"278855fe4399489bdef0393697bb87420e671fe9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"5e5c8a773f933a92fe57202fd652ab2d86e8aace","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"b342f429e3ac9797ff80d5588b2e638631705fd6","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"6311eda08e4515281c51bd49f43902a51832383c","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/page/video.pug","hash":"61420f1e835aa05eaa4d83b0dbb456f9a91eeef3","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/page/about.pug","hash":"18fa3f8cef9a8d7bad2d6db98f85b37f428e67e9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"4332a43643b931c60d344b742cc490ccdecd27fe","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"7a7d97032bfeecce5529f2729b2602d31280e9a1","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"91e8b2f72529effeed6bca86d40d8975825bf2df","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"142621f70bedcb5033ee99a988f7bb6c5eea3493","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"6d93564a8bd13cb9b52ee5e178db3bcbf18b1bc6","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"7fb096656c8a6c21a4b6a5100885b1081d6021ed","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1684980976434},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"11d70912c3100bd0c165535c1648948381b1b7b8","modified":1684980976438},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"d55c95f5528a6784e2f85d7a9ce5cb727edb015c","modified":1684980976438},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1684980976438},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"2f95e99b8351fbecd9037a1bbdc3fee9d6ea8a77","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"f9c5d4716b949757355b5254f363984e197d6973","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"26be2afa9d4e7016cf3c42a6cd166f01e8e4ad5c","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"26b44494a7cea4f4d2c8a6b2b12d8451243aca61","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"b9739557bcfaa06a5a691fdf83490e913a9a532e","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/cyber_swiper_bar.styl","hash":"b8952fb77aeb96f766d2c5a60c7c37713e5c24b6","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"4dfa81f87122a568505b29185d5c4107ce821a1c","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"23db4e3cab68fed78601fc8a9c39ff5753bcc716","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bd88ee30ebf8ca2e7b4d3a034c317fd61733921f","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/sun_moon.styl","hash":"df082b7c17d9307ed4e994511f0cd8ec16bbbe83","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"4bad5402c8b0d79f792b3b3ae9b3c86c878d68e8","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/web-bg.styl","hash":"8f82fe59009d948469fe17fb49a28d5694960231","modified":1684980976438},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"bb42dbeafa35f02d1b7e0eccb3753c3ed4820fb6","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/businesscard.styl","hash":"cd7fa23e00faabc0ca28823f61521ecc6a2052f8","modified":1684980976438},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"69f8e9414526dfda3af9a71c8e528fdd0ecbbfe5","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6f4b4ede52305bce9b22c8c897dcbde8af6e2ce4","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"2ec3258f4272d37431af1fa93930e355b8d555d6","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"d66f13ea2c65679bd65dcda597b38910d6973691","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1684980976438},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"51e45625929d57c9df3ba9090af99b9b7bb9a15b","modified":1684980976438},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"39d61cbe0c1e937f83ba3b147afaa29b4de2f87d","modified":1684980976438},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"25e58a7a8bda4b73d0a0e551643ca01b09ccd7e5","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/bubble.styl","hash":"e9ffd36065ade26db431923ea4b39d31b04e60da","modified":1684980976438},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"cca78821df24cd81d789ab275469c96fc01fecff","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/card.styl","hash":"fffc495d3ec1368ae2eee9487a0239a36eb8447c","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"a310e48f826a4cacc55d8e68f43806e5085554f6","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/folding.styl","hash":"04fe87c5718dc8ec0800fd00e77d85dda83f1bac","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/checkbox.styl","hash":"d59fdd4a79bb0d533d2bac60b4b604a3d22dc906","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/inline-labels.styl","hash":"61c3641ce36b272367b2d1c01904517dd226864e","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/link.styl","hash":"bd3a68ef1d8a2f284f3e409025aa1a75a3b57275","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/notation.styl","hash":"a1eead0fde952c03ef08e6547598d2dcf2e04f41","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1684980976438},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/msgbox.styl","hash":"ed58cd96f19e71c9f576eb35caab72c9a99faa91","modified":1684980976438},{"_id":"themes/butterfly/source/dmyx/css/bootstrap.min.css","hash":"cd3314fe8a9f15c40636ba25892e0c43970dedad","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/poem.styl","hash":"e7734df4656f0f95e8951b6fc8327bbbff1fc172","modified":1684980976438},{"_id":"themes/butterfly/source/css/_tags/progress.styl","hash":"beb3f733e4e3acd5663685564e86c9fc23d7abc8","modified":1684980976438},{"_id":"themes/butterfly/source/css/_layout/notice.styl","hash":"c2eb11bf638c7e9262011277b3a5dd9c2254ca04","modified":1684980976438},{"_id":"themes/butterfly/source/dmyx/fonts/glyphicons-halflings-regular.woff2","hash":"1ac0ad2111e7a33efccf7c61677ed52c81580845","modified":1684980976442},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1684980976438},{"_id":"themes/butterfly/source/dmyx/images/cream.png","hash":"eef38c387db75e461f07f1c3578942d8907e4f5a","modified":1684980976442},{"_id":"themes/butterfly/source/dmyx/css/try.css","hash":"777637f3feafc2b47785ecbb199dfde91b0b5810","modified":1684980976442},{"_id":"themes/butterfly/source/dmyx/images/bg-body.jpg","hash":"a12bdff40ec6772a6b1b4a4b2af95324bf0f7c4a","modified":1684980976442},{"_id":"themes/butterfly/source/dmyx/images/device_ico.png","hash":"7ffe5a758cd5437a5b65d0c0331158d637573bf2","modified":1684980976442},{"_id":"themes/butterfly/source/example/try/index.html","hash":"f964ed0a6eab288ab7acc21cbe8bc62df93d8832","modified":1684980976442},{"_id":"themes/butterfly/source/dmyx/css/love.css","hash":"55540f76540a1fedf82c234c26c12f9c25f470c2","modified":1684980976442},{"_id":"themes/butterfly/source/dmyx/js/bootstrap.min.js","hash":"791aa054a026bddc0de92bad6cf7a1c6e73713d5","modified":1684980976442},{"_id":"themes/butterfly/source/img/app/1.png","hash":"384551ecc5bd11f4b780f0ab785788e874e1b9a9","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/10.png","hash":"47c88b91ba0894084e550b0253c5feffacf1a453","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/11.png","hash":"355d9b84a9423a2e8f58c46d6b551a445e683e30","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/12.png","hash":"6640ac8a1812fc2dd42830b8a9cdac9ec8ec48a2","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/13.png","hash":"4cc90d31f9d6b0f3b515d2722dc4d024920ec9f2","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/14.png","hash":"362eb15aa006f3ee1276e882fb54623e207b0b7f","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/15.png","hash":"77a4f4abd81f6747ec0b8941a7e11885a613355f","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/16.png","hash":"a7815d07dabf5bfc7b98fdd8c1052f9d76bbca10","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/18.png","hash":"0d140ba61db9706879c4dfcfd64ce03988974a61","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/17.png","hash":"2d39f73536f0b2f13e855547e9fb2212203029b7","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/19.png","hash":"38397dc1b44748b5e4c53e9cbab024a851db5065","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/20.png","hash":"c4523336533bb6f6ac07794f8c3c45f0a42653b6","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/2.png","hash":"2a0b3928246949624a9b3a54512fd9e53aae7d05","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/21.png","hash":"f008110f88a5a5ef560f4c573dd86393ccd26d40","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/22.png","hash":"9f2c5d27277fa548979272283c24678d94b07d6c","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/23.png","hash":"b6aa5a5142fb286120442e00d9e383b872a6dca3","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/24.png","hash":"8d9e2e7d9ed8fd3fbf404f73b9dc429fa4b3bbf7","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/25.png","hash":"48ceef0aee04b51e6712f4594d4f902cd67eee3d","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/26.png","hash":"240a3ec16dbaa1bec9f9a2ee0e9f4760dba004bb","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/3.png","hash":"201d04b358b5cf38a0a51de34c17056631cec2a4","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/27.png","hash":"d0247de008905f827a5ba1c6a38fca84446b8500","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/4.png","hash":"61737a687f8f999913ee8c503f3c77c0982bb515","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/5.png","hash":"69660eb6846ba34675088d6ea2298a6aa5675889","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/6.png","hash":"c8db691d7e91871360d0a797ede693f086eaa38e","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/7.png","hash":"a5a6fc07ab65cf4f1f9fc8e8f4d933bf3ad915e7","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/8.png","hash":"adaed050a0f1e443f79e413ffbf713f1953e84c1","modified":1684980976446},{"_id":"themes/butterfly/source/img/app/9.png","hash":"246eb14bb574c9cd3a6f5ab594aabd69b8f682db","modified":1684980976446},{"_id":"themes/butterfly/source/img/tz/1.webp","hash":"ae0f03e61da9880904751ca80a0e88b5180aab1a","modified":1684980976446},{"_id":"themes/butterfly/source/img/tz/2.webp","hash":"e039cc56a0bdd41be429bbb416c0be83c2f9d3b5","modified":1684980976446},{"_id":"themes/butterfly/source/img/tz/3.webp","hash":"a80d31e3a5d9a7973ba2362a7bfe0ff244343d7f","modified":1684980976446},{"_id":"themes/butterfly/source/js/custom/swiper_init.js","hash":"b1565743838aff2214fd03d1cef7d571f1ebbfd1","modified":1684980976446},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1684980976446},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1684980976446},{"_id":"themes/butterfly/source/js/wz/fishes.js","hash":"215e26df2611e30866ce3fe9a3fc1b2f9c8911c5","modified":1684980976450},{"_id":"themes/butterfly/source/js/wz/siche.js","hash":"fbfae529794c9da8f9e9ad45d1f2796f0c2ba1ac","modified":1684980976450},{"_id":"themes/butterfly/source/music/css/lights.css","hash":"aad43a26ce66e8ee59a3a95df4f4a44eca68a99b","modified":1684980976450},{"_id":"themes/butterfly/source/music/js/Config.js","hash":"b0a44ccfb452ae50b1042b1f18bab5bb9d1cfd47","modified":1684980976454},{"_id":"themes/butterfly/source/xz/css/login.css","hash":"91eb8a2a8a5739644ff0d42f9c290d03e19214f5","modified":1684980976458},{"_id":"themes/butterfly/source/xz/js/app.js","hash":"f4692619f43e430885eeb3147b8461345f178d05","modified":1684980976458},{"_id":"themes/butterfly/source/xz/js/jquery.params.js","hash":"9d51f091f6eb2264af0da5161924f7b7fd2d55fe","modified":1684980976458},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"99d9b17668260b242749c16851d9ec1024d31899","modified":1684980976434},{"_id":"themes/butterfly/source/xz/js/particles.js","hash":"6d41b2dfd94b9b8e8b96b95d1258f57efb11aada","modified":1684980976458},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"b2aadea7351fae8382b8c2a3b9de810d922b0ec1","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"58406a7a3bf45815769f652bf3ef81e57dcd07eb","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"5f648086a33a32d169a2f8d8c549c08aa02f67db","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"0611d9216f4c128ebdea4cc21454c3dc4a6398d5","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"ccb7d8ce3ded7364f9a15334b68ad73869fca757","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"49dcc23815e1d5264bb65c91e7dc67b1a723d1ea","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"8ec24c1939895ac0db2b2e8700bc9307b4ceb53c","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"98ef20f8a3b10c1692f9b2b3c06033d2da8a8eae","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"eefdaa94956adc7a3ca90dd8edcd70a7574b439c","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"591ef23c583690bd74af0cafb09af64ba5bd8151","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"22e2ef30fe5eb1db7566e89943c74ece029b2a8e","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"351fe25fbf02635b1f9e86e5e244c7d61f69baa7","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"e9bdf80d6796afc04eb809dbbe780d97f22c7fcd","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"a737046e730eb7264606ba0536218964044492f9","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"e18fbd88d8942e53e771f29b26209ab735c5c567","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"15462d1ed04651ad3b430c682842ac400f6f9b47","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"1c846c8d51649b8554d91536323eaeb20c8fc236","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"8e33aca36a4d3ae9e041ba05ced8eff56ae38f77","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"c12c898b35dd014780c1f3220ddbe12e7270983c","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"04b2a5882e789a988e41d45abe606f0617b08e38","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e846ddfe4a63b15d1416f6055f5756af5e3da7c6","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"ab167c00da4506f591b96f0591bf5bd214a26d4b","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"233907dd7f5b5f33412701d2ccffbc0bbae8707b","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d19e1c2c0a50f0e4547d71a17b9be88e8152f17c","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"dd0bc119029b62dce5dc965d5de7377e438fa29a","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"e8245d0b4933129bb1c485d8de11a9e52e676348","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"178c9cdcc4ce5a006885b24ce4a3d624e4734899","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1684980976434},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"f61d63724ea5c5f352568b3a16bde023affefbe5","modified":1684980976434},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1684980976438},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1684980976438},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1684980976438},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1684980976438},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1684980976438},{"_id":"themes/butterfly/source/dmyx/js/one/one.min.js","hash":"1ebe889635a11a556aab592ca909833f7207d75f","modified":1684980976442},{"_id":"themes/butterfly/source/music/images/avatars/blue.png","hash":"19089e90eab98eb0da4612f8742ad306f7652a92","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/cherrytree.png","hash":"d5fb1b5314f76dae7c39e816f32601fccd9240ff","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/ellie.jpeg","hash":"3d5148a95ff2a1c993879374162265f34777b710","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/interscope.png","hash":"09b2f9c2cc7af5bee4bb47d97e86ed0c2a42b768","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/green.png","hash":"6b467f115390c5c703452c0b5b7038404b09c9f7","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/magenta.png","hash":"7e215e4786d125764bea414273f7e9d254155f69","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/polydor.png","hash":"2775079ac49d4546dbe014e8148e67c856db2c7c","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/orange.png","hash":"909d859c556a6c1110b6fc7a3ad070ee0c647e93","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/red.png","hash":"2f93445f19812b5a5e04fc39ca7625e9e18da268","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/envmap/envMapBottom.png","hash":"e2be0544d9baaf180c30b5ab9c81a17c638d06ed","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/envmap/envMapLeftRight.png","hash":"fe594ace284262d1e95f40aef9d6efd1fd00cc78","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/envmap/envMapFrontBack.png","hash":"85febdea45ee07dbccb26ab97ac05c512632ea26","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/envmap/envMapTop.png","hash":"1879f9596f7d14c31a578cd4357682ef356f9e78","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/experience/bengalShadow.png","hash":"320fe31973727ba6fb142d5ae612b95a5bd42738","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/circle.png","hash":"df98a89d0dd5d8635407b8ddaf846c0aafe8a15d","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/dot.png","hash":"e7197d81a9abe031306a9b8b2eef5f23e0e9239e","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/glow.png","hash":"dc7e5cb971c22f3b2cc7260cde48d3ad063d240f","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/particle.png","hash":"1b89697043ad44e47fd82e39c673a3f8d376cc58","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaBlue.png","hash":"72d1cda4448f275d45bf03fdbc0e77ac851f3013","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaGreen.png","hash":"65b07e4fa23a8e2ff9f7759cbf59313e4fb75a07","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaCyan.png","hash":"b4b7254707dc20f40a0cc952d8886bec95b3a84f","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaRed.png","hash":"4964398681e581e8cb7687e485ba428fd37e5615","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaMagenta.png","hash":"b20827d73754d4dc10053525263752b8ff5dd9d8","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaWhite.png","hash":"97bc0ff1030918a08e8463f82da03dd22c56df9a","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/plasmaYellow.png","hash":"88d5d4ba3fd83dec236e2ec2763818d4549d4285","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/skybox.png","hash":"a027caf9adf2cf4c6bd5b2b139142b68589a2b1b","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/spotLine.png","hash":"6e48d9b31c8116f7b4cc1715e18ebe039e4fb498","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/spot.png","hash":"42292d6b34d34d3e10a64257605f3b3ddead29b3","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/spotLineAlpha.png","hash":"d5ea95bc36007ab2f92697d0b7fa81bbc5de5c43","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/experience/terrain66.png","hash":"bf563eb3b7e5c877f10e0d0b63b9033d0ab36e56","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/fonts/standard_07_55.png","hash":"d346381f5559472003bd05dcd5202d0a7d6c7d30","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/fonts/standard_07_55.txt","hash":"196c206ca5487e92d5954f43a78a18140393fee4","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/home/bokeh.png","hash":"574eed75311e1cb0a4af2268edf6cf04e5e669e6","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/home/loadingButton.png","hash":"1829ec8893a39316e579e9d36b2827b79af2fc95","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/home/playButton.png","hash":"df49d11a73d3934bf9fa7287c4c795da0a56ac74","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/home/logo.png","hash":"789aa0a62fe5027acabd745da2471deaeb14e0fe","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/home/replayButton.png","hash":"b766899a8046a27e11799af9e24e614dd907dcc5","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/home/tweetButton.png","hash":"c34afe0b82eb4ba75890f70c766840e4676b95e7","modified":1684980976454},{"_id":"themes/butterfly/source/dmyx/js/codemirror/lib/codemirror_all.min.css","hash":"b84586e6826ac0767d8a33f27ec4a0fc8b812a97","modified":1684980976442},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar0.png","hash":"931497bcbf8553806170481d5a998650f28b689e","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar1.png","hash":"0d1db600de69e0f90a75c44331bb2c99d2469567","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar2.png","hash":"9a75dd2abc79b86377653b822e44f57a7a65d4fd","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar3.png","hash":"2b2c33da7d078ec13c438bf3157a2f1f6f681250","modified":1684980976450},{"_id":"themes/butterfly/source/music/images/avatars/ellie/ellieAvatar4.png","hash":"c649d09d9771d50afbb1d152b434a1f89857de99","modified":1684980976450},{"_id":"themes/butterfly/source/example/try/code/1/bd/rono.html","hash":"99c0af48d2fb825312fe37858f3be2b1f5dc2fbd","modified":1684980976442},{"_id":"themes/butterfly/source/dmyx/js/codemirror/addon/hint/jsAll.json","hash":"830d9ab1df83a7f97e24d546248afe7cc9bd834e","modified":1684980976442},{"_id":"themes/butterfly/source/people.png","hash":"fbf04a351853358578e6adbd5cd1744205cbfbb4","modified":1684980976458},{"_id":"themes/butterfly/source/img/avatar.png","hash":"fbf04a351853358578e6adbd5cd1744205cbfbb4","modified":1684980976446},{"_id":"themes/butterfly/source/img/bj.webp","hash":"a93feb37399ad9d8c2b88f80e0dafdcded8062f8","modified":1684980976446},{"_id":"themes/butterfly/source/img/wechat.jpg","hash":"7c31b3251068706cf7dd02d992a99a8ea1ffb91c","modified":1684980976446},{"_id":"themes/butterfly/source/js/shangshengqipao.js","hash":"80262c504da31df93cd57961ebb63321e382c22b","modified":1684980976450},{"_id":"themes/butterfly/source/dmyx/images/shouji.png","hash":"a3b9ad709e9398d66bc9352406831e1d5b1547cb","modified":1684980976442},{"_id":"themes/butterfly/source/img/JgNrST23690481619450556342.gif!cover","hash":"f78e9fa23d791b6fb1275c64b48656e01348d2f4","modified":1684980976446},{"_id":"themes/butterfly/source/music/js/Three.js","hash":"2c2075cbdf186dfa0aaf47980c040a9a7baf1cb5","modified":1684980976458},{"_id":"themes/butterfly/source/img/20115853_380680b35f.jpeg","hash":"0f2c52debbdb267620cd0a8898b390a8b44bd489","modified":1684980976442},{"_id":"themes/butterfly/source/music/images/experience/bengalSeq.png","hash":"2bd2e362f582b88287df6301b4da796694b2d729","modified":1684980976454},{"_id":"themes/butterfly/source/music/images/data/spectrumData.png","hash":"eef56debff5b90deb47c2fa18fe30fdffc0b3fe4","modified":1684980976450},{"_id":"themes/butterfly/source/music/js/Lights.js","hash":"fbc2a8f49131ddd37daeecd1aa7184ed7dd6f1dd","modified":1684980976454},{"_id":"themes/butterfly/source/img/bt.webp","hash":"1bf17ff87be2cdda060e115c02d92f413e6663a3","modified":1684980976446},{"_id":"themes/butterfly/source/xz/img/login_background.png","hash":"eddf28d185c0852dc37434ec4e73abeb81934b44","modified":1684980976458},{"_id":"themes/butterfly/source/dmyx/js/codemirror/lib/codemirror_all.min.js","hash":"e7c91175d5d88c39585cb5f0e091a74ac942509a","modified":1684980976442},{"_id":"public/selfjs/localsearch.js","hash":"5bd7f3a3db98258311f98a543b3bcace7e30aa76","modified":1685012691485},{"_id":"public/selfjs/tw_cn.js","hash":"ed646e9fb14b1179d8cfb9d89db299cf6c341193","modified":1685012691485},{"_id":"public/baidusitemap.xml","hash":"2b10c250e02707dc42a5d8be8fbf21d3caaad7d4","modified":1685012691485},{"_id":"public/atom.xml","hash":"13ac249d58782417a8e374463b36215b43a9a496","modified":1685012691485},{"_id":"public/rss2.xml","hash":"e75bbc2d28ec7356ac4a261cf4dca9ba3554bcc3","modified":1685012691485},{"_id":"public/search.xml","hash":"a477a5e5a2add1c1e1257d0a5e126f845418e7f7","modified":1685012691485},{"_id":"public/sitemap.xml","hash":"beb38d26dfc34c2c53aeb9af47e1bcbe038ea3e4","modified":1685012691485},{"_id":"public/zhheo/random.js","hash":"5d4c32530f357954d2d96f53fbc4b8e971d16d8b","modified":1685012691485},{"_id":"public/404.html","hash":"a9c278ee8569116ee55da56988a8b00cb0a18536","modified":1685012691485},{"_id":"public/about/index.html","hash":"76d7669fb4bd72510d33dd94b3370a98bd09cdca","modified":1685012691485},{"_id":"public/categories/index.html","hash":"ccec73dfdbecf75283193ea9e2e1fe1813c0b667","modified":1685012691485},{"_id":"public/link/index.html","hash":"f7e9d76456204665c77a3ed207f5444cc19b6e17","modified":1685012691485},{"_id":"public/messageboard/index.html","hash":"0e52e7592a4c0ff39da824d6bc7b767fc57458de","modified":1685012691485},{"_id":"public/music/index.html","hash":"be89b93d5e6a27655a00722bf15896856f30faea","modified":1685012691485},{"_id":"public/myself/index.html","hash":"e7034c5f3e030a3085c17b257c67d2424b49f5fc","modified":1685012691485},{"_id":"public/notice/index.html","hash":"daafd16662c2b6ac928377cae4cbcde32455009b","modified":1685012691485},{"_id":"public/tags/index.html","hash":"6be74fdf80e87be5056222203db79b62315cc6ac","modified":1685012691485},{"_id":"public/talking/index.html","hash":"a6a3467b5d4ffee312f3aace45e59125cfc9dd68","modified":1685012691485},{"_id":"public/timeline/index.html","hash":"c9fbc7cf237625262f265d3d6960c36a6dff5ff5","modified":1685012691485},{"_id":"public/tuku/index.html","hash":"d811ac8486ddf297588bd310c1c76f75ef512ebd","modified":1685012691485},{"_id":"public/video/index.html","hash":"7fb9fccc397699cd9733401307b36a7a5e7b4618","modified":1685012691485},{"_id":"public/xiance/index.html","hash":"05787f150f6b5905ad55a14d1a997065dceae32a","modified":1685012691485},{"_id":"public/xiance/marvel/index.html","hash":"7def3823b0ef3fb8a81f4e9897b9faea8676477c","modified":1685012691485},{"_id":"public/xiance/ohmygirl/index.html","hash":"efa9ad6b7923c950e045d740256cd9856e641ad6","modified":1685012691485},{"_id":"public/posts/d9795d88.html","hash":"1855552f3508125bb2f22fe4b8065b20c6b23699","modified":1685012691485},{"_id":"public/posts/d9795d10.html","hash":"c6db51ed981d135b4c8e6d6e479943514536b463","modified":1685012691485},{"_id":"public/posts/d9795d86.html","hash":"5a3f0ee6f48498add2b22e2b3fe696c3377c5694","modified":1685012691485},{"_id":"public/posts/d9795d89.html","hash":"4c7d4cea9449e3d35f0b2d55446590c7798b9313","modified":1685012691485},{"_id":"public/archives/index.html","hash":"f506841a34fa29278b37a52a07604aefdebda040","modified":1685012691485},{"_id":"public/archives/2023/index.html","hash":"d8b2858d719487875b2d5d8f96f5c7e182f31b60","modified":1685012691485},{"_id":"public/archives/2023/04/index.html","hash":"9697ef94e0a85fda41d5a43da160570ddcc5956e","modified":1685012691485},{"_id":"public/archives/2023/05/index.html","hash":"922b38bbcee2b1b374facb910ae652ed71faa61a","modified":1685012691485},{"_id":"public/categories/类别/index.html","hash":"4dadfaec9f6b1eaf7dcc3dce7cc46da89b4fccb6","modified":1685012691485},{"_id":"public/categories/C/index.html","hash":"b07d763d4ba7d1bf621cd18c0d343f3b63b9df24","modified":1685012691485},{"_id":"public/categories/c/index.html","hash":"931c2d419b6b06c66660acf2d91f765959601d57","modified":1685012691485},{"_id":"public/categories/HTML/index.html","hash":"b91c9389068ff19ba5139afb4a665d2193cf4d4a","modified":1685012691485},{"_id":"public/categories/JS/index.html","hash":"22e5e843d2bf8f95d66a31d64405c98a92f071e3","modified":1685012691485},{"_id":"public/index.html","hash":"5e0c0438cd342464b2515d6efa8310255980f74c","modified":1685012691485},{"_id":"public/tags/教程/index.html","hash":"015f470743caf9f0718c45f394f4b44bbda871cd","modified":1685012691485},{"_id":"public/tags/Hexo/index.html","hash":"471b1a644c246a3d762938b7a2bf54d296a1ebcc","modified":1685012691485},{"_id":"public/tags/主題/index.html","hash":"1c2d4ed34646438b948d7844ac7bbc283683336a","modified":1685012691485},{"_id":"public/tags/butterfly/index.html","hash":"e426ad49e33aa8f9c6e5a1d407eca54dc4a3a1af","modified":1685012691485},{"_id":"public/tags/前端/index.html","hash":"275ef0d30c55b476569d3760cb2e410edd78178a","modified":1685012691485},{"_id":"public/tags/C/index.html","hash":"f38eb8757124cb43e6dd81ab0c6e5f6b8d523f5b","modified":1685012691485},{"_id":"public/tags/quickjs/index.html","hash":"f5e7bcc148962d4030dadb3891ae8f16e134de0d","modified":1685012691485},{"_id":"public/tags/devtools/index.html","hash":"cc4c7beac0304e04f9ffebc883fcc6bd4a7ae094","modified":1685012691485},{"_id":"public/tags/HTML/index.html","hash":"dd9d71c76c4ab9c0916e44a872532754b2bdc0cc","modified":1685012691485},{"_id":"public/tags/JS/index.html","hash":"2ab61a41d378c92f4c603d063ffe80e55cfc93bd","modified":1685012691485},{"_id":"public/people.ico","hash":"791c16e638c9035943d524e96b7b2d996c39e711","modified":1685012691485},{"_id":"public/img/404.webp","hash":"bd0dc3ec1a22a1a72ee179d6b42434b1d763ec69","modified":1685012691485},{"_id":"public/img/alipay.webp","hash":"b7310124dcd14f351d224f17863dfbab6a0f701c","modified":1685012691485},{"_id":"public/img/favicon.webp","hash":"60412802902f538637b45db3bf64afea208a5fe8","modified":1685012691485},{"_id":"public/img/hx.webp","hash":"a5574851e056f58c8330d4ba6d6c6348112ba3ef","modified":1685012691485},{"_id":"public/img/default_top_img.webp","hash":"4ab272a986bb628ad6061e82322665a1eeabb438","modified":1685012691485},{"_id":"public/img/ljz.webp","hash":"e63976f72c82e9813c4c138d53a859a7d0251a6d","modified":1685012691485},{"_id":"public/img/lightning1.png","hash":"8dbaa433850eee48afe82e5bf178991e181ac981","modified":1685012691485},{"_id":"public/img/lightning2.png","hash":"83f02621657fa555369c680d154255dabbf712ff","modified":1685012691485},{"_id":"public/img/logo.ico","hash":"791c16e638c9035943d524e96b7b2d996c39e711","modified":1685012691485},{"_id":"public/img/xka.webp","hash":"607e06c04e255207f26f896de772ace855e21357","modified":1685012691485},{"_id":"public/img/dzbp.webp","hash":"48e680ccfe156c25b9cf6c0a63cd8e135dc2d633","modified":1685012691485},{"_id":"public/dmyx/fonts/glyphicons-halflings-regular.woff2","hash":"1ac0ad2111e7a33efccf7c61677ed52c81580845","modified":1685012691485},{"_id":"public/dmyx/images/bg-body.jpg","hash":"a12bdff40ec6772a6b1b4a4b2af95324bf0f7c4a","modified":1685012691485},{"_id":"public/dmyx/images/cream.png","hash":"eef38c387db75e461f07f1c3578942d8907e4f5a","modified":1685012691485},{"_id":"public/dmyx/images/device_ico.png","hash":"7ffe5a758cd5437a5b65d0c0331158d637573bf2","modified":1685012691485},{"_id":"public/img/app/1.png","hash":"384551ecc5bd11f4b780f0ab785788e874e1b9a9","modified":1685012691485},{"_id":"public/img/app/10.png","hash":"47c88b91ba0894084e550b0253c5feffacf1a453","modified":1685012691485},{"_id":"public/img/app/11.png","hash":"355d9b84a9423a2e8f58c46d6b551a445e683e30","modified":1685012691485},{"_id":"public/img/app/12.png","hash":"6640ac8a1812fc2dd42830b8a9cdac9ec8ec48a2","modified":1685012691485},{"_id":"public/img/app/13.png","hash":"4cc90d31f9d6b0f3b515d2722dc4d024920ec9f2","modified":1685012691485},{"_id":"public/img/app/14.png","hash":"362eb15aa006f3ee1276e882fb54623e207b0b7f","modified":1685012691485},{"_id":"public/img/app/15.png","hash":"77a4f4abd81f6747ec0b8941a7e11885a613355f","modified":1685012691485},{"_id":"public/img/app/16.png","hash":"a7815d07dabf5bfc7b98fdd8c1052f9d76bbca10","modified":1685012691485},{"_id":"public/img/app/18.png","hash":"0d140ba61db9706879c4dfcfd64ce03988974a61","modified":1685012691485},{"_id":"public/img/app/17.png","hash":"2d39f73536f0b2f13e855547e9fb2212203029b7","modified":1685012691485},{"_id":"public/img/app/19.png","hash":"38397dc1b44748b5e4c53e9cbab024a851db5065","modified":1685012691485},{"_id":"public/img/app/2.png","hash":"2a0b3928246949624a9b3a54512fd9e53aae7d05","modified":1685012691485},{"_id":"public/img/app/20.png","hash":"c4523336533bb6f6ac07794f8c3c45f0a42653b6","modified":1685012691485},{"_id":"public/img/app/21.png","hash":"f008110f88a5a5ef560f4c573dd86393ccd26d40","modified":1685012691485},{"_id":"public/img/app/22.png","hash":"9f2c5d27277fa548979272283c24678d94b07d6c","modified":1685012691485},{"_id":"public/img/app/23.png","hash":"b6aa5a5142fb286120442e00d9e383b872a6dca3","modified":1685012691485},{"_id":"public/img/app/24.png","hash":"8d9e2e7d9ed8fd3fbf404f73b9dc429fa4b3bbf7","modified":1685012691485},{"_id":"public/img/app/25.png","hash":"48ceef0aee04b51e6712f4594d4f902cd67eee3d","modified":1685012691485},{"_id":"public/img/app/26.png","hash":"240a3ec16dbaa1bec9f9a2ee0e9f4760dba004bb","modified":1685012691485},{"_id":"public/img/app/27.png","hash":"d0247de008905f827a5ba1c6a38fca84446b8500","modified":1685012691485},{"_id":"public/img/app/3.png","hash":"201d04b358b5cf38a0a51de34c17056631cec2a4","modified":1685012691485},{"_id":"public/img/app/4.png","hash":"61737a687f8f999913ee8c503f3c77c0982bb515","modified":1685012691485},{"_id":"public/img/app/5.png","hash":"69660eb6846ba34675088d6ea2298a6aa5675889","modified":1685012691485},{"_id":"public/img/app/6.png","hash":"c8db691d7e91871360d0a797ede693f086eaa38e","modified":1685012691485},{"_id":"public/img/app/7.png","hash":"a5a6fc07ab65cf4f1f9fc8e8f4d933bf3ad915e7","modified":1685012691485},{"_id":"public/img/app/8.png","hash":"adaed050a0f1e443f79e413ffbf713f1953e84c1","modified":1685012691485},{"_id":"public/img/app/9.png","hash":"246eb14bb574c9cd3a6f5ab594aabd69b8f682db","modified":1685012691485},{"_id":"public/img/tz/1.webp","hash":"ae0f03e61da9880904751ca80a0e88b5180aab1a","modified":1685012691485},{"_id":"public/img/tz/2.webp","hash":"e039cc56a0bdd41be429bbb416c0be83c2f9d3b5","modified":1685012691485},{"_id":"public/img/tz/3.webp","hash":"a80d31e3a5d9a7973ba2362a7bfe0ff244343d7f","modified":1685012691485},{"_id":"public/music/images/avatars/blue.png","hash":"19089e90eab98eb0da4612f8742ad306f7652a92","modified":1685012691485},{"_id":"public/music/images/avatars/cherrytree.png","hash":"d5fb1b5314f76dae7c39e816f32601fccd9240ff","modified":1685012691485},{"_id":"public/music/images/avatars/ellie.jpeg","hash":"3d5148a95ff2a1c993879374162265f34777b710","modified":1685012691485},{"_id":"public/music/images/avatars/green.png","hash":"6b467f115390c5c703452c0b5b7038404b09c9f7","modified":1685012691485},{"_id":"public/music/images/avatars/interscope.png","hash":"09b2f9c2cc7af5bee4bb47d97e86ed0c2a42b768","modified":1685012691485},{"_id":"public/music/images/avatars/magenta.png","hash":"7e215e4786d125764bea414273f7e9d254155f69","modified":1685012691485},{"_id":"public/music/images/avatars/orange.png","hash":"909d859c556a6c1110b6fc7a3ad070ee0c647e93","modified":1685012691485},{"_id":"public/music/images/avatars/polydor.png","hash":"2775079ac49d4546dbe014e8148e67c856db2c7c","modified":1685012691485},{"_id":"public/music/images/avatars/red.png","hash":"2f93445f19812b5a5e04fc39ca7625e9e18da268","modified":1685012691485},{"_id":"public/music/images/envmap/envMapFrontBack.png","hash":"85febdea45ee07dbccb26ab97ac05c512632ea26","modified":1685012691485},{"_id":"public/music/images/envmap/envMapLeftRight.png","hash":"fe594ace284262d1e95f40aef9d6efd1fd00cc78","modified":1685012691485},{"_id":"public/music/images/envmap/envMapBottom.png","hash":"e2be0544d9baaf180c30b5ab9c81a17c638d06ed","modified":1685012691485},{"_id":"public/music/images/experience/circle.png","hash":"df98a89d0dd5d8635407b8ddaf846c0aafe8a15d","modified":1685012691485},{"_id":"public/music/images/experience/bengalShadow.png","hash":"320fe31973727ba6fb142d5ae612b95a5bd42738","modified":1685012691485},{"_id":"public/music/images/experience/dot.png","hash":"e7197d81a9abe031306a9b8b2eef5f23e0e9239e","modified":1685012691485},{"_id":"public/music/images/envmap/envMapTop.png","hash":"1879f9596f7d14c31a578cd4357682ef356f9e78","modified":1685012691485},{"_id":"public/music/images/experience/glow.png","hash":"dc7e5cb971c22f3b2cc7260cde48d3ad063d240f","modified":1685012691485},{"_id":"public/music/images/experience/particle.png","hash":"1b89697043ad44e47fd82e39c673a3f8d376cc58","modified":1685012691485},{"_id":"public/music/images/experience/plasmaBlue.png","hash":"72d1cda4448f275d45bf03fdbc0e77ac851f3013","modified":1685012691485},{"_id":"public/music/images/experience/plasmaCyan.png","hash":"b4b7254707dc20f40a0cc952d8886bec95b3a84f","modified":1685012691485},{"_id":"public/music/images/experience/plasmaGreen.png","hash":"65b07e4fa23a8e2ff9f7759cbf59313e4fb75a07","modified":1685012691485},{"_id":"public/music/images/experience/plasmaMagenta.png","hash":"b20827d73754d4dc10053525263752b8ff5dd9d8","modified":1685012691485},{"_id":"public/music/images/experience/plasmaRed.png","hash":"4964398681e581e8cb7687e485ba428fd37e5615","modified":1685012691485},{"_id":"public/music/images/experience/plasmaWhite.png","hash":"97bc0ff1030918a08e8463f82da03dd22c56df9a","modified":1685012691485},{"_id":"public/music/images/experience/plasmaYellow.png","hash":"88d5d4ba3fd83dec236e2ec2763818d4549d4285","modified":1685012691485},{"_id":"public/music/images/experience/skybox.png","hash":"a027caf9adf2cf4c6bd5b2b139142b68589a2b1b","modified":1685012691485},{"_id":"public/music/images/experience/spot.png","hash":"42292d6b34d34d3e10a64257605f3b3ddead29b3","modified":1685012691485},{"_id":"public/music/images/experience/spotLine.png","hash":"6e48d9b31c8116f7b4cc1715e18ebe039e4fb498","modified":1685012691485},{"_id":"public/music/images/experience/spotLineAlpha.png","hash":"d5ea95bc36007ab2f92697d0b7fa81bbc5de5c43","modified":1685012691485},{"_id":"public/music/images/experience/terrain66.png","hash":"bf563eb3b7e5c877f10e0d0b63b9033d0ab36e56","modified":1685012691485},{"_id":"public/music/images/fonts/standard_07_55.png","hash":"d346381f5559472003bd05dcd5202d0a7d6c7d30","modified":1685012691485},{"_id":"public/music/images/fonts/standard_07_55.txt","hash":"196c206ca5487e92d5954f43a78a18140393fee4","modified":1685012691485},{"_id":"public/music/images/home/bokeh.png","hash":"574eed75311e1cb0a4af2268edf6cf04e5e669e6","modified":1685012691485},{"_id":"public/music/images/home/loadingButton.png","hash":"1829ec8893a39316e579e9d36b2827b79af2fc95","modified":1685012691485},{"_id":"public/music/images/home/logo.png","hash":"789aa0a62fe5027acabd745da2471deaeb14e0fe","modified":1685012691485},{"_id":"public/music/images/home/playButton.png","hash":"df49d11a73d3934bf9fa7287c4c795da0a56ac74","modified":1685012691485},{"_id":"public/music/images/home/replayButton.png","hash":"b766899a8046a27e11799af9e24e614dd907dcc5","modified":1685012691485},{"_id":"public/music/images/home/tweetButton.png","hash":"c34afe0b82eb4ba75890f70c766840e4676b95e7","modified":1685012691485},{"_id":"public/music/images/avatars/ellie/ellieAvatar0.png","hash":"931497bcbf8553806170481d5a998650f28b689e","modified":1685012691485},{"_id":"public/music/images/avatars/ellie/ellieAvatar1.png","hash":"0d1db600de69e0f90a75c44331bb2c99d2469567","modified":1685012691485},{"_id":"public/music/images/avatars/ellie/ellieAvatar2.png","hash":"9a75dd2abc79b86377653b822e44f57a7a65d4fd","modified":1685012691485},{"_id":"public/music/images/avatars/ellie/ellieAvatar3.png","hash":"2b2c33da7d078ec13c438bf3157a2f1f6f681250","modified":1685012691485},{"_id":"public/music/images/avatars/ellie/ellieAvatar4.png","hash":"c649d09d9771d50afbb1d152b434a1f89857de99","modified":1685012691485},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1685012691485},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1685012691485},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1685012691485},{"_id":"public/people.png","hash":"fbf04a351853358578e6adbd5cd1744205cbfbb4","modified":1685012691485},{"_id":"public/img/avatar.png","hash":"fbf04a351853358578e6adbd5cd1744205cbfbb4","modified":1685012691485},{"_id":"public/img/cover.png","hash":"f9edf7939e4bb129392396a83aa637b36e09499e","modified":1685012691485},{"_id":"public/img/wechat.jpg","hash":"7c31b3251068706cf7dd02d992a99a8ea1ffb91c","modified":1685012691485},{"_id":"public/dmyx/images/shouji.png","hash":"a3b9ad709e9398d66bc9352406831e1d5b1547cb","modified":1685012691485},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1685012691485},{"_id":"public/css/gengxing.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1685012691485},{"_id":"public/css/notice.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1685012691485},{"_id":"public/img/bj.webp","hash":"a93feb37399ad9d8c2b88f80e0dafdcded8062f8","modified":1685012691485},{"_id":"public/css/link.css","hash":"0fbb8034c33b6e3592a38f84e32a7f4ca6de570d","modified":1685012691485},{"_id":"public/css/liuyanban.css","hash":"ea7b2c41de33c33ce8cf68badbc3cc57d4d2c28f","modified":1685012691485},{"_id":"public/css/mouse.css","hash":"9ba069efa357f82d208dbc88357bf278f99fc875","modified":1685012691485},{"_id":"public/css/mycss.css","hash":"95af0a254b18287f09ed8297233a5d005da40778","modified":1685012691485},{"_id":"public/css/nav_menu.css","hash":"d2b20dc763c4240b4401907c1771e3e37a1ebe22","modified":1685012691485},{"_id":"public/css/people.css","hash":"8f8a9272d512f871d2773031af1d7a271acabb0b","modified":1685012691485},{"_id":"public/css/progress_bar.css","hash":"ce1a2c7b71129aa204ea9cf4115277a0b28f8a8d","modified":1685012691485},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1685012691485},{"_id":"public/css/xiazai.css","hash":"4b6068622b4788f1d4933bc2c4bd17b14ff61931","modified":1685012691485},{"_id":"public/example/try.html","hash":"3dc615ebae03a4f7c101f9158738b9afb35222c9","modified":1685012691485},{"_id":"public/js/categoryBar.js","hash":"19a3b570b471951d5ab67f1607d5f7f43ef380be","modified":1685012691485},{"_id":"public/js/copy.js","hash":"40965ead3aee64c38a0ef944f54fe6b6b184ee21","modified":1685012691485},{"_id":"public/js/countup.js","hash":"89388b8b14405b13257da96356312a5f37f94841","modified":1685012691485},{"_id":"public/js/dmyx.js","hash":"339ad47c0aa929ac3f9e8a59e7622c07a2d7e125","modified":1685012691485},{"_id":"public/js/hygl.js","hash":"0dab40071de2b58aac27d55428eaca257cea8087","modified":1685012691485},{"_id":"public/js/index.js","hash":"fcde0a1ec6cd0a48c0a59611284ef6aa55fc87a8","modified":1685012691485},{"_id":"public/js/nav_menu.js","hash":"05b332a80a6d8e1f490159ea286930cc042c4f6e","modified":1685012691485},{"_id":"public/js/people.js","hash":"4bf541c0ae1394dae5e7a823202fc89b18afe73b","modified":1685012691485},{"_id":"public/js/ripples.js","hash":"a60e67666d8385d928f11f61236a5c57fd0fbc77","modified":1685012691485},{"_id":"public/js/snowflake.js","hash":"a5b020f3bbb9a2c06e8a8dd25cd99513d10476ba","modified":1685012691485},{"_id":"public/js/sun_moon.js","hash":"6d811c3e017116f0b79d756c15d54aad0ea3f5df","modified":1685012691485},{"_id":"public/js/twikookstx.js","hash":"1e21e562f0f8c3fbfacac60ac6c039be5c97a27a","modified":1685012691485},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1685012691485},{"_id":"public/js/watchWorker.js","hash":"9ee3c98dc197c09e38b41b5ffca5970cd0e579e3","modified":1685012691485},{"_id":"public/js/xh2.js","hash":"5e7707221da3e904bce94f7342b7fbf273802681","modified":1685012691485},{"_id":"public/js/xiazai.js","hash":"810c3317e57d7b951e686815b0bb557e6eeb2c7f","modified":1685012691485},{"_id":"public/music/music.html","hash":"861943a6551ac46743ee5118073643d0e8a5be1c","modified":1685012691485},{"_id":"public/xz/index.html","hash":"2cbf295492bbf568bfbe8e303dad9e5982db77d6","modified":1685012691485},{"_id":"public/dmyx/css/bootstrap.min.css","hash":"cd3314fe8a9f15c40636ba25892e0c43970dedad","modified":1685012691485},{"_id":"public/dmyx/css/love.css","hash":"55540f76540a1fedf82c234c26c12f9c25f470c2","modified":1685012691485},{"_id":"public/dmyx/css/try.css","hash":"777637f3feafc2b47785ecbb199dfde91b0b5810","modified":1685012691485},{"_id":"public/example/try/index.html","hash":"f964ed0a6eab288ab7acc21cbe8bc62df93d8832","modified":1685012691485},{"_id":"public/js/custom/swiper_init.js","hash":"b1565743838aff2214fd03d1cef7d571f1ebbfd1","modified":1685012691485},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1685012691485},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1685012691485},{"_id":"public/js/wz/fishes.js","hash":"215e26df2611e30866ce3fe9a3fc1b2f9c8911c5","modified":1685012691485},{"_id":"public/js/wz/siche.js","hash":"fbfae529794c9da8f9e9ad45d1f2796f0c2ba1ac","modified":1685012691485},{"_id":"public/music/css/lights.css","hash":"aad43a26ce66e8ee59a3a95df4f4a44eca68a99b","modified":1685012691485},{"_id":"public/music/js/Config.js","hash":"b0a44ccfb452ae50b1042b1f18bab5bb9d1cfd47","modified":1685012691485},{"_id":"public/xz/css/login.css","hash":"91eb8a2a8a5739644ff0d42f9c290d03e19214f5","modified":1685012691485},{"_id":"public/xz/js/app.js","hash":"f4692619f43e430885eeb3147b8461345f178d05","modified":1685012691485},{"_id":"public/xz/js/jquery.params.js","hash":"9d51f091f6eb2264af0da5161924f7b7fd2d55fe","modified":1685012691485},{"_id":"public/dmyx/js/one/one.min.js","hash":"1ebe889635a11a556aab592ca909833f7207d75f","modified":1685012691485},{"_id":"public/example/try/code/1/bd/rono.html","hash":"99c0af48d2fb825312fe37858f3be2b1f5dc2fbd","modified":1685012691485},{"_id":"public/css/index.css","hash":"b6ea80e697f3137ec8b4780b84c82c4df50ec2e5","modified":1685012691485},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1685012691485},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1685012691485},{"_id":"public/css/glb.css","hash":"70465d17d3110d33d6a5c3c4ee199cefe7e8895e","modified":1685012691485},{"_id":"public/css/guanyu.css","hash":"3e292547dbf8f48892214cf961767faaa340682c","modified":1685012691485},{"_id":"public/js/main.js","hash":"60110cdc320450483b13c4a4961bd6c56ec3c436","modified":1685012691485},{"_id":"public/js/tw_cn.js","hash":"5c1391c9e96950833641f178b5f23c58422fb659","modified":1685012691485},{"_id":"public/js/xh1.js","hash":"4449ed117bb01a0f457a09a636548e5bcd65ac26","modified":1685012691485},{"_id":"public/dmyx/js/bootstrap.min.js","hash":"791aa054a026bddc0de92bad6cf7a1c6e73713d5","modified":1685012691485},{"_id":"public/xz/js/particles.js","hash":"6d41b2dfd94b9b8e8b96b95d1258f57efb11aada","modified":1685012691485},{"_id":"public/dmyx/js/codemirror/lib/codemirror_all.min.css","hash":"b84586e6826ac0767d8a33f27ec4a0fc8b812a97","modified":1685012691485},{"_id":"public/img/JgNrST23690481619450556342.gif!cover","hash":"f78e9fa23d791b6fb1275c64b48656e01348d2f4","modified":1685012691485},{"_id":"public/dmyx/js/codemirror/addon/hint/jsAll.json","hash":"ebd7876e04631ecd74c31539b84683c92bc47f42","modified":1685012691485},{"_id":"public/music/images/experience/bengalSeq.png","hash":"2bd2e362f582b88287df6301b4da796694b2d729","modified":1685012691485},{"_id":"public/img/20115853_380680b35f.jpeg","hash":"0f2c52debbdb267620cd0a8898b390a8b44bd489","modified":1685012691485},{"_id":"public/music/images/data/spectrumData.png","hash":"eef56debff5b90deb47c2fa18fe30fdffc0b3fe4","modified":1685012691485},{"_id":"public/js/shangshengqipao.js","hash":"80262c504da31df93cd57961ebb63321e382c22b","modified":1685012691485},{"_id":"public/xz/img/login_background.png","hash":"eddf28d185c0852dc37434ec4e73abeb81934b44","modified":1685012691485},{"_id":"public/img/bt.webp","hash":"1bf17ff87be2cdda060e115c02d92f413e6663a3","modified":1685012691485},{"_id":"public/music/js/Three.js","hash":"2c2075cbdf186dfa0aaf47980c040a9a7baf1cb5","modified":1685012691485},{"_id":"public/music/js/Lights.js","hash":"fbc2a8f49131ddd37daeecd1aa7184ed7dd6f1dd","modified":1685012691485},{"_id":"public/dmyx/js/codemirror/lib/codemirror_all.min.js","hash":"e7c91175d5d88c39585cb5f0e091a74ac942509a","modified":1685012691485},{"_id":"source/_posts/c/new-article.md","hash":"8a7ba1f63aa6d956ba155609beef367fc2d3ff0a","modified":1685012695443}],"Category":[{"name":"类别","_id":"cli311udv00046ojn3wk5hwq8"},{"name":"C","_id":"cli311udy000a6ojn3wpxh7i0"},{"name":"c","_id":"cli311ue0000f6ojnc3q8959a"},{"name":"HTML","_id":"cli311uea00186ojn52yz6vk1"},{"name":"JS","_id":"cli311uea001a6ojn0lu63mi7"}],"Data":[{"_id":"creativity","data":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}]},{"_id":"indexwz","data":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}]},{"_id":"link","data":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}]},{"_id":"notice","data":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]}},{"_id":"reward","data":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}]},{"_id":"shuanbian","data":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}]},{"_id":"video","data":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}]},{"_id":"widget","data":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}],"Page":[{"title":"关于","date":"2021-03-30T07:57:51.000Z","aside":false,"top_img":false,"background":"#f8f9fe","comments":1,"type":"about","_content":"\n\n<link rel=\"stylesheet\" href=\"/css/guanyu.css\"> ","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-03-30 15:57:51\naside: false\ntop_img: false\nbackground: \"#f8f9fe\"\ncomments: true\ntype: \"about\"\n---\n\n\n<link rel=\"stylesheet\" href=\"/css/guanyu.css\"> ","updated":"2023-05-25T02:16:16.430Z","path":"about/index.html","layout":"page","_id":"cli311udo00006ojnaqj8e40f","content":"<link rel=\"stylesheet\" href=\"/css/guanyu.css\"> ","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/Et3Yh7GslKX8FwA.webp","excerpt":"","more":"<link rel=\"stylesheet\" href=\"/css/guanyu.css\"> "},{"title":"分类","date":"2022-07-30T00:54:29.000Z","layout":"categories","type":"categories","top_img":"https://s2.loli.net/2022/11/04/opmhQGMbSktden5.jpg","comments":1,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-07-30 08:54:29\nlayout: \"categories\"\ntype: \"categories\"\ntop_img: https://s2.loli.net/2022/11/04/opmhQGMbSktden5.jpg\ncomments: true\n---\n","updated":"2023-05-25T02:16:16.430Z","path":"categories/index.html","_id":"cli311udt00026ojn95b06lxp","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/Et3Yh7GslKX8FwA.webp","excerpt":"","more":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","type":"link","top_img":"https://s2.loli.net/2022/11/04/GOKblJF1BMpWvYf.webp","aside":false,"_content":"\n***\n\n如果你想把自己的网页也新增到`我的博客`页面里\n\n\n>1. 博客名称：biubiu\n>2. 博客链接：https://why862555625.github.io/\n>3. logo地址：https://why862555625.github.io/img/favicon.webp\n>4. 博客介绍：千里之行，始于足下。\n\n邮箱：1400000222@qq.com\n\n~~~html\n    - name: biubiu\n      link: https://why862555625.github.io/\n      avatar: https://why862555625.github.io/img/favicon.webp\n      descr: 千里之行，始于足下。\n~~~\n\n\n<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n\n<script src=\"/js/twikookstx.js\"></script>\n\n<style>\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transtion: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 12px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: #4b7aff;\n    color: #fff;\n}\n</style>\n\n","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2018-06-07 22:17:49\ntype: \"link\"\ntop_img: https://s2.loli.net/2022/11/04/GOKblJF1BMpWvYf.webp\naside: false\n---\n\n***\n\n如果你想把自己的网页也新增到`我的博客`页面里\n\n\n>1. 博客名称：biubiu\n>2. 博客链接：https://why862555625.github.io/\n>3. logo地址：https://why862555625.github.io/img/favicon.webp\n>4. 博客介绍：千里之行，始于足下。\n\n邮箱：1400000222@qq.com\n\n~~~html\n    - name: biubiu\n      link: https://why862555625.github.io/\n      avatar: https://why862555625.github.io/img/favicon.webp\n      descr: 千里之行，始于足下。\n~~~\n\n\n<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n\n<script src=\"/js/twikookstx.js\"></script>\n\n<style>\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transtion: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 12px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: #4b7aff;\n    color: #fff;\n}\n</style>\n\n","updated":"2023-05-25T02:16:16.430Z","path":"link/index.html","comments":1,"layout":"page","_id":"cli311udw00066ojnf5921ot9","content":"<hr>\n<p>如果你想把自己的网页也新增到<code>我的博客</code>页面里</p>\n<blockquote>\n<ol>\n<li>博客名称：biubiu</li>\n<li>博客链接：<a href=\"https://why862555625.github.io/\">https://why862555625.github.io/</a></li>\n<li>logo地址：<a href=\"https://why862555625.github.io/img/favicon.webp\">https://why862555625.github.io/img/favicon.webp</a></li>\n<li>博客介绍：千里之行，始于足下。</li>\n</ol>\n</blockquote>\n<p>邮箱：<a href=\"mailto:&#49;&#x34;&#48;&#48;&#x30;&#x30;&#x30;&#50;&#50;&#x32;&#64;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;\">&#49;&#x34;&#48;&#48;&#x30;&#x30;&#x30;&#50;&#50;&#x32;&#64;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: biubiu</span><br><span class=\"line\">  link: https://why862555625.github.io/</span><br><span class=\"line\">  avatar: https://why862555625.github.io/img/favicon.webp</span><br><span class=\"line\">  descr: 千里之行，始于足下。</span><br></pre></td></tr></table></figure>\n\n\n<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n\n<script src=\"/js/twikookstx.js\"></script>\n\n<style>\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transtion: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 12px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: #4b7aff;\n    color: #fff;\n}\n</style>\n\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/SRi7l6jNZkD2Bmy.webp","excerpt":"","more":"<hr>\n<p>如果你想把自己的网页也新增到<code>我的博客</code>页面里</p>\n<blockquote>\n<ol>\n<li>博客名称：biubiu</li>\n<li>博客链接：<a href=\"https://why862555625.github.io/\">https://why862555625.github.io/</a></li>\n<li>logo地址：<a href=\"https://why862555625.github.io/img/favicon.webp\">https://why862555625.github.io/img/favicon.webp</a></li>\n<li>博客介绍：千里之行，始于足下。</li>\n</ol>\n</blockquote>\n<p>邮箱：<a href=\"mailto:&#49;&#x34;&#48;&#48;&#x30;&#x30;&#x30;&#50;&#50;&#x32;&#64;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;\">&#49;&#x34;&#48;&#48;&#x30;&#x30;&#x30;&#50;&#50;&#x32;&#64;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: biubiu</span><br><span class=\"line\">  link: https://why862555625.github.io/</span><br><span class=\"line\">  avatar: https://why862555625.github.io/img/favicon.webp</span><br><span class=\"line\">  descr: 千里之行，始于足下。</span><br></pre></td></tr></table></figure>\n\n\n<div class=\"addBtn\"><button onclick=\"leonus.linkCom()\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (默认样式)</button> <button onclick=\"leonus.linkCom(&quot;bf&quot;)\"><i class=\"fa-solid fa-circle-plus\"></i>快速申请 (Butterfly)</button></div>\n\n<script src=\"/js/twikookstx.js\"></script>\n\n<style>\n.addBtn {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n.addBtn button {\n    transtion: .2s;\n    display: flex;\n    margin: 5px auto;\n    color: var(--global-bg);\n    padding: 15px;\n    border-radius: 12px;\n    background: var(--search-result-title);\n    align-items: center;\n}\n\nbutton {\n    padding: 0;\n    outline: 0;\n    border: none;\n    background: 0 0;\n    cursor: pointer;\n    touch-action: manipulation;\n}\n.fa-solid, .fas {\n    font-family: \"Font Awesome 6 Free\";\n    font-weight: 900;\n}\n.addBtn i {\n    font-size: 1.3rem;\n    margin-right: 10px;\n}\n.addBtn button:hover {\n    background: #4b7aff;\n    color: #fff;\n}\n</style>\n\n"},{"title":"留言板","date":"2022-09-30T01:00:05.000Z","type":"messageboard","top_img":"https://s2.loli.net/2022/11/04/cJoWvz81e73ljp6.webp","_content":"\n<link href=\"/css/liuyanban.css\" rel=\"stylesheet\" type=\"text/css\"/>\n\n  <div id=\"computer\">\n    <div id=\"maincontent\"><br>\n      <div id=\"form-wrap\"><img src=\"https://drfs.ctcontents.com/file/14237530/741091857/688faf/img/xf/2.png\" id=\"beforeimg\"/>\n        <div id=\"envelope\">\n          <form>\n            <div class=\"formmain\">\n              <img class=\"headerimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090658/42ef53/img/xf/3.png\"/>\n              <div style=\"padding: 5px 20px;\">\n                <center>\n                  <h3 calss=\"title3\">太华  伽罗</h3>\n                </center>\n                <center class=\"comments\">\n                  有什么想问的？<br>\n                  有什么想说的？<br>\n                  有什么想吐槽的？<br>\n                  哪怕是有什么想吃的，都可以告诉我哦~<br>\n                </center>\n                <div class=\"bottomcontent\">\n                <img class=\"bottomimg\" src=\"https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png\"/>\n                </div>\n                <p class=\"bottomhr\">自动书记人偶竭诚为您服务！</p>\n              </div>\n            </div>\n          </form>\n        </div><img id=\"afterimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090660/ce3212/img/xf/1.png\"/>\n      </div>\n    </div>\n  </div>\n","source":"messageboard/index.md","raw":"\n---\n\ntitle: 留言板\n\ndate: 2022-09-30 09:00:05\n\ntype: messageboard\n\ntop_img: https://s2.loli.net/2022/11/04/cJoWvz81e73ljp6.webp\n\n---\n\n<link href=\"/css/liuyanban.css\" rel=\"stylesheet\" type=\"text/css\"/>\n\n  <div id=\"computer\">\n    <div id=\"maincontent\"><br>\n      <div id=\"form-wrap\"><img src=\"https://drfs.ctcontents.com/file/14237530/741091857/688faf/img/xf/2.png\" id=\"beforeimg\"/>\n        <div id=\"envelope\">\n          <form>\n            <div class=\"formmain\">\n              <img class=\"headerimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090658/42ef53/img/xf/3.png\"/>\n              <div style=\"padding: 5px 20px;\">\n                <center>\n                  <h3 calss=\"title3\">太华  伽罗</h3>\n                </center>\n                <center class=\"comments\">\n                  有什么想问的？<br>\n                  有什么想说的？<br>\n                  有什么想吐槽的？<br>\n                  哪怕是有什么想吃的，都可以告诉我哦~<br>\n                </center>\n                <div class=\"bottomcontent\">\n                <img class=\"bottomimg\" src=\"https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png\"/>\n                </div>\n                <p class=\"bottomhr\">自动书记人偶竭诚为您服务！</p>\n              </div>\n            </div>\n          </form>\n        </div><img id=\"afterimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090660/ce3212/img/xf/1.png\"/>\n      </div>\n    </div>\n  </div>\n","updated":"2023-05-25T02:16:16.430Z","path":"messageboard/index.html","comments":1,"layout":"page","_id":"cli311udx00086ojndyniecm5","content":"<link href=\"/css/liuyanban.css\" rel=\"stylesheet\" type=\"text/css\"/>\n\n  <div id=\"computer\">\n    <div id=\"maincontent\"><br>\n      <div id=\"form-wrap\"><img src=\"https://drfs.ctcontents.com/file/14237530/741091857/688faf/img/xf/2.png\" id=\"beforeimg\"/>\n        <div id=\"envelope\">\n          <form>\n            <div class=\"formmain\">\n              <img class=\"headerimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090658/42ef53/img/xf/3.png\"/>\n              <div style=\"padding: 5px 20px;\">\n                <center>\n                  <h3 calss=\"title3\">太华  伽罗</h3>\n                </center>\n                <center class=\"comments\">\n                  有什么想问的？<br>\n                  有什么想说的？<br>\n                  有什么想吐槽的？<br>\n                  哪怕是有什么想吃的，都可以告诉我哦~<br>\n                </center>\n                <div class=\"bottomcontent\">\n                <img class=\"bottomimg\" src=\"https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png\"/>\n                </div>\n                <p class=\"bottomhr\">自动书记人偶竭诚为您服务！</p>\n              </div>\n            </div>\n          </form>\n        </div><img id=\"afterimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090660/ce3212/img/xf/1.png\"/>\n      </div>\n    </div>\n  </div>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/9getUWqvxTjHcbl.webp","excerpt":"","more":"<link href=\"/css/liuyanban.css\" rel=\"stylesheet\" type=\"text/css\"/>\n\n  <div id=\"computer\">\n    <div id=\"maincontent\"><br>\n      <div id=\"form-wrap\"><img src=\"https://drfs.ctcontents.com/file/14237530/741091857/688faf/img/xf/2.png\" id=\"beforeimg\"/>\n        <div id=\"envelope\">\n          <form>\n            <div class=\"formmain\">\n              <img class=\"headerimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090658/42ef53/img/xf/3.png\"/>\n              <div style=\"padding: 5px 20px;\">\n                <center>\n                  <h3 calss=\"title3\">太华  伽罗</h3>\n                </center>\n                <center class=\"comments\">\n                  有什么想问的？<br>\n                  有什么想说的？<br>\n                  有什么想吐槽的？<br>\n                  哪怕是有什么想吃的，都可以告诉我哦~<br>\n                </center>\n                <div class=\"bottomcontent\">\n                <img class=\"bottomimg\" src=\"https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png\"/>\n                </div>\n                <p class=\"bottomhr\">自动书记人偶竭诚为您服务！</p>\n              </div>\n            </div>\n          </form>\n        </div><img id=\"afterimg\" src=\"https://drfs.ctcontents.com/file/14237530/741090660/ce3212/img/xf/1.png\"/>\n      </div>\n    </div>\n  </div>\n"},{"comments":1,"aside":false,"_content":"\n\n<style type=\"text/css\">#page{background:transparent;}</style> \n\n\n\n{% meting \"60198\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listfolded\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}","source":"music/index.md","raw":"---\ncomments: true\naside: false\n---\n\n\n<style type=\"text/css\">#page{background:transparent;}</style> \n\n\n\n{% meting \"60198\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listfolded\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}","date":"2023-05-25T02:16:16.430Z","updated":"2023-05-25T02:16:16.430Z","path":"music/index.html","title":"","layout":"page","_id":"cli311udy00096ojng7pz3phu","content":"<style type=\"text/css\">#page{background:transparent;}</style> \n\n\n\n\n    <div id=\"aplayer-uiuiJpDP\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"60198\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\" data-listfolded=\"true\"\n    ></div>","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/95LaCNrd8BKXeSt.webp","excerpt":"","more":"<style type=\"text/css\">#page{background:transparent;}</style> \n\n\n\n\n    <div id=\"aplayer-uiuiJpDP\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"60198\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\" data-listfolded=\"true\"\n    ></div>"},{"title":"This is me","date":"2022-07-30T01:04:02.000Z","type":"myself","_content":"","source":"myself/index.md","raw":"---\ntitle: This is me\ndate: 2022-07-30 09:04:02\ntype: myself\n---\n","updated":"2023-05-25T02:16:16.430Z","path":"myself/index.html","comments":1,"layout":"page","_id":"cli311udz000c6ojnfko00zrd","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/Et3Yh7GslKX8FwA.webp","excerpt":"","more":""},{"title":"notice","comments":0,"date":"2023-01-10T12:36:53.000Z","reward":null,"description":null,"top_img":null,"_content":"{% timeline 2022,blue %}\n<!-- timeline 01-02 -->\n主题开源自己研究\n开源地址：[plasx520/blog-butterfly: hexo静态博客butterfly魔改主题 (github.com)](https://github.com/plasx520/blog-butterfly)\n\n<!-- endtimeline -->\n{% endtimeline %}\n{% timeline 2022,blue %}\n<!-- timeline 01-02 -->\n這是測試頁面\n<!-- endtimeline -->\n{% endtimeline %}\n","source":"notice/index.md","raw":"---\ntitle: notice\ncomments: false\ndate: 2023-01-10 20:36:53\nreward:\ndescription:\ntop_img:\n---\n{% timeline 2022,blue %}\n<!-- timeline 01-02 -->\n主题开源自己研究\n开源地址：[plasx520/blog-butterfly: hexo静态博客butterfly魔改主题 (github.com)](https://github.com/plasx520/blog-butterfly)\n\n<!-- endtimeline -->\n{% endtimeline %}\n{% timeline 2022,blue %}\n<!-- timeline 01-02 -->\n這是測試頁面\n<!-- endtimeline -->\n{% endtimeline %}\n","updated":"2023-05-25T02:16:16.430Z","path":"notice/index.html","layout":"page","_id":"cli311udz000d6ojn351hajyw","content":"<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p>\n</div></div><div class='timeline-item-content'><p>主题开源自己研究<br>开源地址：<a href=\"https://github.com/plasx520/blog-butterfly\">plasx520/blog-butterfly: hexo静态博客butterfly魔改主题 (github.com)</a></p>\n</div></div></div>\n<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p>\n</div></div><div class='timeline-item-content'><p>這是測試頁面</p>\n</div></div></div>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/Et3Yh7GslKX8FwA.webp","excerpt":"","more":"<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p>\n</div></div><div class='timeline-item-content'><p>主题开源自己研究<br>开源地址：<a href=\"https://github.com/plasx520/blog-butterfly\">plasx520/blog-butterfly: hexo静态博客butterfly魔改主题 (github.com)</a></p>\n</div></div></div>\n<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p>\n</div></div><div class='timeline-item-content'><p>這是測試頁面</p>\n</div></div></div>\n"},{"_content":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = Traditionalized(this.value).trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})","source":"selfjs/localsearch.js","raw":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = Traditionalized(this.value).trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})","date":"2023-05-25T02:16:16.430Z","updated":"2023-05-25T02:16:16.430Z","path":"selfjs/localsearch.js","layout":"false","title":"","comments":1,"_id":"cli311ue0000h6ojn4myz33pv","content":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = Traditionalized(this.value).trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/9getUWqvxTjHcbl.webp","excerpt":"","more":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = Traditionalized(this.value).trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})"},{"title":"标签","date":"2022-07-30T00:45:06.000Z","layout":"tags","type":"tags","top_img":"https://s2.loli.net/2022/11/04/cAlqtEg5UZv8DW7.webp","comments":1,"_content":"\n\n","source":"tags/index.md","raw":"---\n\ntitle: 标签 \n\ndate: 2022-07-30 08:45:06 \nlayout: tags\ntype: tags \ntop_img: https://s2.loli.net/2022/11/04/cAlqtEg5UZv8DW7.webp\ncomments: true\n\n---\n\n\n","updated":"2023-05-25T02:16:16.430Z","path":"tags/index.html","_id":"cli311ue1000i6ojnbdhn1ifx","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/Et3Yh7GslKX8FwA.webp","excerpt":"","more":""},{"title":"自言自語","date":"2020-09-15T16:58:58.000Z","comments":1,"reward":null,"description":null,"top_img":"https://s2.loli.net/2022/11/04/CvJl9TkY4LgEGP3.webp","type":"artitalk","_content":"","source":"talking/index.md","raw":"---\ntitle: 自言自語\ndate: 2020-09-16 00:58:58\ncomments: true\nreward:\ndescription:\ntop_img: https://s2.loli.net/2022/11/04/CvJl9TkY4LgEGP3.webp\ntype: artitalk\n---\n","updated":"2023-05-25T02:16:16.430Z","path":"talking/index.html","layout":"page","_id":"cli311ue2000l6ojn8786btx3","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/SRi7l6jNZkD2Bmy.webp","excerpt":"","more":""},{"title":"日志","date":"2022-01-04T16:00:00.000Z","top_img":"linear-gradient(-45deg,#ee7752,#ce3e75,#23a6d5,#23d5ab);background-size: 400% 400%; animation: gradientBG 15s ease infinite;","type":"timeline","_content":"","source":"timeline/index.md","raw":"---\ntitle: 日志\ndate: 2022-01-05 00:00:00\ntop_img:  'linear-gradient(-45deg,#ee7752,#ce3e75,#23a6d5,#23d5ab);background-size: 400% 400%; animation: gradientBG 15s ease infinite;'\ntype: timeline\n---\n","updated":"2023-05-25T02:16:16.430Z","path":"timeline/index.html","comments":1,"layout":"page","_id":"cli311ue3000m6ojn53hm3xo6","content":"","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/VbopOwvGhfdmy1M.webp","excerpt":"","more":""},{"title":"Gallery","date":"2019-10-24T14:23:55.000Z","comments":1,"reward":false,"description":"相册","aside":false,"top_img":"https://s2.loli.net/2022/11/04/y8rclikszbXZ7HK.webp","_content":"\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/xiance/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '漫威' '關於漫威的圖片' '/xiance/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}\n{% galleryGroup 'OH MY GIRL' '關於OH MY GIRL的圖片' '/xiance/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}\n</div>","source":"tuku/index.md","raw":"---\ntitle: Gallery\ndate: 2019-10-24 22:23:55\ncomments: true\nreward: false\ndescription: 相册\naside: false\ntop_img: https://s2.loli.net/2022/11/04/y8rclikszbXZ7HK.webp\n---\n\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/xiance/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '漫威' '關於漫威的圖片' '/xiance/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}\n{% galleryGroup 'OH MY GIRL' '關於OH MY GIRL的圖片' '/xiance/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}\n</div>","updated":"2023-05-25T02:16:16.430Z","path":"tuku/index.html","layout":"page","_id":"cli311ue4000p6ojn7bkcdqcu","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/xiance/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">漫威</div>\n  <p>關於漫威的圖片</p>\n  <a href='/xiance/marvel'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">OH MY GIRL</div>\n  <p>關於OH MY GIRL的圖片</p>\n  <a href='/xiance/ohmygirl'></a>\n  </figcaption>\n  </figure>\n  \n</div>","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/E9WRrMAYvmKDxnl.webp","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/xiance/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">漫威</div>\n  <p>關於漫威的圖片</p>\n  <a href='/xiance/marvel'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">OH MY GIRL</div>\n  <p>關於OH MY GIRL的圖片</p>\n  <a href='/xiance/ohmygirl'></a>\n  </figcaption>\n  </figure>\n  \n</div>"},{"title":"我的视频","date":"2020-07-17T12:54:09.000Z","comment":true,"top_img":false,"showToc":true,"aside":false,"type":"video","_content":"\n<script src=\"https://unpkg.com/jquery@latest/dist/jquery.min.js\"></script>\n<script>\nfunction selectVideo(id){\n    var src=$(\"#video-item-\"+id).attr(\"data-src\");\n    $(\"#video-select\").html(\"<iframe id='video-iframe' src='\"+src+\"' scrolling='no' border='0' frameborder='no' framespacing='0' allowfullscreen='true'> </iframe>\");\n    var iframe = document.getElementById(\"video-select\")\n    if(iframe.attachEvent){\n      iframe.attachEvent(\"onreadystatechange\", function() {\n        if (iframe.readyState === \"complete\" || iframe.readyState == \"loaded\") {\n          iframe.detachEvent(\"onreadystatechange\", arguments.callee);\n        if (document.getElementsByClassName('video-mirror').length>0) {\n          console.log(\"1true\")\n          $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n          }\n        }\n      });\n    }else{\n      iframe.addEventListener(\"load\", function() {\n        this.removeEventListener(\"load\", arguments.call, false);\n      if (document.getElementsByClassName('video-mirror').length>0) {\n        console.log(\"2true\")\n        $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n      }\n      }, false);\n    }\n}\n$(document).ready(selectVideo(0));\n</script>\n","source":"video/index.md","raw":"---\ntitle: 我的视频\ndate: 2020-07-17 20:54:09\ncomment: true\ntop_img: false\nshowToc: true\naside: false\ntype: \"video\"\n---\n\n<script src=\"https://unpkg.com/jquery@latest/dist/jquery.min.js\"></script>\n<script>\nfunction selectVideo(id){\n    var src=$(\"#video-item-\"+id).attr(\"data-src\");\n    $(\"#video-select\").html(\"<iframe id='video-iframe' src='\"+src+\"' scrolling='no' border='0' frameborder='no' framespacing='0' allowfullscreen='true'> </iframe>\");\n    var iframe = document.getElementById(\"video-select\")\n    if(iframe.attachEvent){\n      iframe.attachEvent(\"onreadystatechange\", function() {\n        if (iframe.readyState === \"complete\" || iframe.readyState == \"loaded\") {\n          iframe.detachEvent(\"onreadystatechange\", arguments.callee);\n        if (document.getElementsByClassName('video-mirror').length>0) {\n          console.log(\"1true\")\n          $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n          }\n        }\n      });\n    }else{\n      iframe.addEventListener(\"load\", function() {\n        this.removeEventListener(\"load\", arguments.call, false);\n      if (document.getElementsByClassName('video-mirror').length>0) {\n        console.log(\"2true\")\n        $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n      }\n      }, false);\n    }\n}\n$(document).ready(selectVideo(0));\n</script>\n","updated":"2023-05-25T02:16:16.430Z","path":"video/index.html","comments":1,"layout":"page","_id":"cli311ue4000r6ojn53llc5ct","content":"<script src=\"https://unpkg.com/jquery@latest/dist/jquery.min.js\"></script>\n<script>\nfunction selectVideo(id){\n    var src=$(\"#video-item-\"+id).attr(\"data-src\");\n    $(\"#video-select\").html(\"<iframe id='video-iframe' src='\"+src+\"' scrolling='no' border='0' frameborder='no' framespacing='0' allowfullscreen='true'> </iframe>\");\n    var iframe = document.getElementById(\"video-select\")\n    if(iframe.attachEvent){\n      iframe.attachEvent(\"onreadystatechange\", function() {\n        if (iframe.readyState === \"complete\" || iframe.readyState == \"loaded\") {\n          iframe.detachEvent(\"onreadystatechange\", arguments.callee);\n        if (document.getElementsByClassName('video-mirror').length>0) {\n          console.log(\"1true\")\n          $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n          }\n        }\n      });\n    }else{\n      iframe.addEventListener(\"load\", function() {\n        this.removeEventListener(\"load\", arguments.call, false);\n      if (document.getElementsByClassName('video-mirror').length>0) {\n        console.log(\"2true\")\n        $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n      }\n      }, false);\n    }\n}\n$(document).ready(selectVideo(0));\n</script>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/Et3Yh7GslKX8FwA.webp","excerpt":"","more":"<script src=\"https://unpkg.com/jquery@latest/dist/jquery.min.js\"></script>\n<script>\nfunction selectVideo(id){\n    var src=$(\"#video-item-\"+id).attr(\"data-src\");\n    $(\"#video-select\").html(\"<iframe id='video-iframe' src='\"+src+\"' scrolling='no' border='0' frameborder='no' framespacing='0' allowfullscreen='true'> </iframe>\");\n    var iframe = document.getElementById(\"video-select\")\n    if(iframe.attachEvent){\n      iframe.attachEvent(\"onreadystatechange\", function() {\n        if (iframe.readyState === \"complete\" || iframe.readyState == \"loaded\") {\n          iframe.detachEvent(\"onreadystatechange\", arguments.callee);\n        if (document.getElementsByClassName('video-mirror').length>0) {\n          console.log(\"1true\")\n          $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n          }\n        }\n      });\n    }else{\n      iframe.addEventListener(\"load\", function() {\n        this.removeEventListener(\"load\", arguments.call, false);\n      if (document.getElementsByClassName('video-mirror').length>0) {\n        console.log(\"2true\")\n        $(\".video-mirror\").attr(\"style\",\"transform:scaleX(-1);\")\n      }\n      }, false);\n    }\n}\n$(document).ready(selectVideo(0));\n</script>\n"},{"title":"Gallery","date":"2019-10-24T14:23:55.000Z","comments":1,"reward":false,"description":"相册","aside":false,"top_img":"https://s2.loli.net/2022/11/04/y8rclikszbXZ7HK.webp","_content":"<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/xiance/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '漫威' '關於漫威的圖片' '/xiance/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}\n{% galleryGroup 'OH MY GIRL' '關於OH MY GIRL的圖片' '/xiance/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}\n\n\n</div>\n","source":"xiance/index.md","raw":"---\ntitle: Gallery\ndate: 2019-10-24 22:23:55\ncomments: true\nreward: false\ndescription: 相册\naside: false\ntop_img: https://s2.loli.net/2022/11/04/y8rclikszbXZ7HK.webp\n---\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/xiance/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '漫威' '關於漫威的圖片' '/xiance/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}\n{% galleryGroup 'OH MY GIRL' '關於OH MY GIRL的圖片' '/xiance/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}\n\n\n</div>\n","updated":"2023-05-25T02:16:16.430Z","path":"xiance/index.html","layout":"page","_id":"cli311ue5000t6ojn2glx08s5","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/xiance/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">漫威</div>\n  <p>關於漫威的圖片</p>\n  <a href='/xiance/marvel'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">OH MY GIRL</div>\n  <p>關於OH MY GIRL的圖片</p>\n  <a href='/xiance/ohmygirl'></a>\n  </figcaption>\n  </figure>\n  \n\n\n</div>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/E9WRrMAYvmKDxnl.webp","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/xiance/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">漫威</div>\n  <p>關於漫威的圖片</p>\n  <a href='/xiance/marvel'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">OH MY GIRL</div>\n  <p>關於OH MY GIRL的圖片</p>\n  <a href='/xiance/ohmygirl'></a>\n  </figcaption>\n  </figure>\n  \n\n\n</div>\n"},{"title":"Marvel","date":"2019-12-25T15:29:25.000Z","comments":1,"reward":false,"description":null,"top_img":"https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg","_content":"{% gallery %}\n![](https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg)\n![](https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg)\n![](https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg)\n![](https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg)\n![](https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg)\n![](https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg)\n![](https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg)\n{% endgallery %}","source":"xiance/marvel/index.md","raw":"---\ntitle: Marvel\ndate: 2019-12-25 23:29:25\ncomments: true\nreward: false\ndescription:\ntop_img: https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg\n---\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg)\n![](https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg)\n![](https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg)\n![](https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg)\n![](https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg)\n![](https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg)\n![](https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg)\n{% endgallery %}","updated":"2023-05-25T02:16:16.430Z","path":"xiance/marvel/index.html","layout":"page","_id":"cli311ue7000w6ojnda8werwq","content":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg\"></p>\n          </div>","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/UhA2W3QejrwzcLn.webp","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg\"></p>\n          </div>"},{"title":"ohmygirl","date":"2019-12-25T15:42:01.000Z","comments":1,"reward":false,"description":null,"top_img":"https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg","_content":"{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}","source":"xiance/ohmygirl/index.md","raw":"---\ntitle: ohmygirl\ndate: 2019-12-25 23:42:01\ncomments: true\nreward: false\ndescription: \ntop_img: https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg\n---\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}","updated":"2023-05-25T02:16:16.430Z","path":"xiance/ohmygirl/index.html","layout":"page","_id":"cli311ue7000y6ojncyyx9bal","content":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\"></p>\n          </div>","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/VbopOwvGhfdmy1M.webp","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\"></p>\n          </div>"},{"_content":"/* eslint-disable no-undef */\ndocument.addEventListener('DOMContentLoaded', function () {\n  const translate = GLOBAL_CONFIG.translate\n  const snackbarData = GLOBAL_CONFIG.Snackbar\n  const defaultEncoding = translate.defaultEncoding // 網站默認語言，1: 繁體中文, 2: 簡體中文\n  const translateDelay = translate.translateDelay // 延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0\n  const msgToTraditionalChinese = translate.msgToTraditionalChinese // 此處可以更改為你想要顯示的文字\n  const msgToSimplifiedChinese = translate.msgToSimplifiedChinese // 同上，但兩處均不建議更改\n  let currentEncoding = defaultEncoding\n  const targetEncodingCookie = 'translate-chn-cht'\n  let targetEncoding =\n  saveToLocal.get(targetEncodingCookie) === undefined\n    ? defaultEncoding\n    : Number(saveToLocal.get('translate-chn-cht'))\n  let translateButtonObject\n  const isSnackbar = GLOBAL_CONFIG.Snackbar !== undefined\n\n  function translateText (txt) {\n    if (txt === '' || txt == null) return ''\n    if (currentEncoding === 1 && targetEncoding === 2) return Simplized(txt)\n    else if (currentEncoding === 2 && targetEncoding === 1) { return Traditionalized(txt) } else return txt\n  }\n  function translateBody (fobj) {\n    let objs\n    if (typeof fobj === 'object') objs = fobj.childNodes\n    else objs = document.body.childNodes\n    for (let i = 0; i < objs.length; i++) {\n      const obj = objs.item(i)\n      if (\n        '||BR|HR|'.indexOf('|' + obj.tagName + '|') > 0 ||\n      obj === translateButtonObject\n      ) { continue }\n      if (obj.title !== '' && obj.title != null) { obj.title = translateText(obj.title) }\n      if (obj.alt !== '' && obj.alt != null) obj.alt = translateText(obj.alt)\n      if (obj.placeholder !== '' && obj.placeholder != null) obj.placeholder = translateText(obj.placeholder)\n      if (\n        obj.tagName === 'INPUT' &&\n      obj.value !== '' &&\n      obj.type !== 'text' &&\n      obj.type !== 'hidden'\n      ) { obj.value = translateText(obj.value) }\n      if (obj.nodeType === 3) obj.data = translateText(obj.data)\n      else translateBody(obj)\n    }\n  }\n  function translatePage () {\n    if (targetEncoding === 1) {\n      currentEncoding = 1\n      targetEncoding = 2\n      translateButtonObject.innerHTML = msgToTraditionalChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.cht_to_chs)\n    } else if (targetEncoding === 2) {\n      currentEncoding = 2\n      targetEncoding = 1\n      translateButtonObject.innerHTML = msgToSimplifiedChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.chs_to_cht)\n    }\n  }\n  function JTPYStr () {\n    return '万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾'\n  }\n  function FTPYStr () {\n    return '萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽'\n  }\n  window.Traditionalized = (cc) => {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && ss.indexOf(cc.charAt(i)) !== -1) { str += tt.charAt(ss.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function Simplized (cc) {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && tt.indexOf(cc.charAt(i)) !== -1) { str += ss.charAt(tt.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function translateInitialization () {\n    translateButtonObject = document.getElementById('translateLink')\n    if (translateButtonObject) {\n      if (currentEncoding !== targetEncoding) {\n        setTimeout(translateBody, translateDelay)\n        if (targetEncoding === 1) translateButtonObject.innerHTML = msgToSimplifiedChinese\n        else translateButtonObject.innerHTML = msgToTraditionalChinese\n      }\n      translateButtonObject.addEventListener('click', translatePage, false)\n    }\n  }\n  translateInitialization()\n  document.addEventListener('pjax:complete', translateInitialization)\n})","source":"selfjs/tw_cn.js","raw":"/* eslint-disable no-undef */\ndocument.addEventListener('DOMContentLoaded', function () {\n  const translate = GLOBAL_CONFIG.translate\n  const snackbarData = GLOBAL_CONFIG.Snackbar\n  const defaultEncoding = translate.defaultEncoding // 網站默認語言，1: 繁體中文, 2: 簡體中文\n  const translateDelay = translate.translateDelay // 延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0\n  const msgToTraditionalChinese = translate.msgToTraditionalChinese // 此處可以更改為你想要顯示的文字\n  const msgToSimplifiedChinese = translate.msgToSimplifiedChinese // 同上，但兩處均不建議更改\n  let currentEncoding = defaultEncoding\n  const targetEncodingCookie = 'translate-chn-cht'\n  let targetEncoding =\n  saveToLocal.get(targetEncodingCookie) === undefined\n    ? defaultEncoding\n    : Number(saveToLocal.get('translate-chn-cht'))\n  let translateButtonObject\n  const isSnackbar = GLOBAL_CONFIG.Snackbar !== undefined\n\n  function translateText (txt) {\n    if (txt === '' || txt == null) return ''\n    if (currentEncoding === 1 && targetEncoding === 2) return Simplized(txt)\n    else if (currentEncoding === 2 && targetEncoding === 1) { return Traditionalized(txt) } else return txt\n  }\n  function translateBody (fobj) {\n    let objs\n    if (typeof fobj === 'object') objs = fobj.childNodes\n    else objs = document.body.childNodes\n    for (let i = 0; i < objs.length; i++) {\n      const obj = objs.item(i)\n      if (\n        '||BR|HR|'.indexOf('|' + obj.tagName + '|') > 0 ||\n      obj === translateButtonObject\n      ) { continue }\n      if (obj.title !== '' && obj.title != null) { obj.title = translateText(obj.title) }\n      if (obj.alt !== '' && obj.alt != null) obj.alt = translateText(obj.alt)\n      if (obj.placeholder !== '' && obj.placeholder != null) obj.placeholder = translateText(obj.placeholder)\n      if (\n        obj.tagName === 'INPUT' &&\n      obj.value !== '' &&\n      obj.type !== 'text' &&\n      obj.type !== 'hidden'\n      ) { obj.value = translateText(obj.value) }\n      if (obj.nodeType === 3) obj.data = translateText(obj.data)\n      else translateBody(obj)\n    }\n  }\n  function translatePage () {\n    if (targetEncoding === 1) {\n      currentEncoding = 1\n      targetEncoding = 2\n      translateButtonObject.innerHTML = msgToTraditionalChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.cht_to_chs)\n    } else if (targetEncoding === 2) {\n      currentEncoding = 2\n      targetEncoding = 1\n      translateButtonObject.innerHTML = msgToSimplifiedChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.chs_to_cht)\n    }\n  }\n  function JTPYStr () {\n    return '万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾'\n  }\n  function FTPYStr () {\n    return '萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽'\n  }\n  window.Traditionalized = (cc) => {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && ss.indexOf(cc.charAt(i)) !== -1) { str += tt.charAt(ss.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function Simplized (cc) {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && tt.indexOf(cc.charAt(i)) !== -1) { str += ss.charAt(tt.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function translateInitialization () {\n    translateButtonObject = document.getElementById('translateLink')\n    if (translateButtonObject) {\n      if (currentEncoding !== targetEncoding) {\n        setTimeout(translateBody, translateDelay)\n        if (targetEncoding === 1) translateButtonObject.innerHTML = msgToSimplifiedChinese\n        else translateButtonObject.innerHTML = msgToTraditionalChinese\n      }\n      translateButtonObject.addEventListener('click', translatePage, false)\n    }\n  }\n  translateInitialization()\n  document.addEventListener('pjax:complete', translateInitialization)\n})","date":"2023-05-25T02:16:16.430Z","updated":"2023-05-25T02:16:16.430Z","path":"selfjs/tw_cn.js","layout":"false","title":"","comments":1,"_id":"cli311ue900156ojn1nkh002x","content":"/* eslint-disable no-undef */\ndocument.addEventListener('DOMContentLoaded', function () {\n  const translate = GLOBAL_CONFIG.translate\n  const snackbarData = GLOBAL_CONFIG.Snackbar\n  const defaultEncoding = translate.defaultEncoding // 網站默認語言，1: 繁體中文, 2: 簡體中文\n  const translateDelay = translate.translateDelay // 延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0\n  const msgToTraditionalChinese = translate.msgToTraditionalChinese // 此處可以更改為你想要顯示的文字\n  const msgToSimplifiedChinese = translate.msgToSimplifiedChinese // 同上，但兩處均不建議更改\n  let currentEncoding = defaultEncoding\n  const targetEncodingCookie = 'translate-chn-cht'\n  let targetEncoding =\n  saveToLocal.get(targetEncodingCookie) === undefined\n    ? defaultEncoding\n    : Number(saveToLocal.get('translate-chn-cht'))\n  let translateButtonObject\n  const isSnackbar = GLOBAL_CONFIG.Snackbar !== undefined\n\n  function translateText (txt) {\n    if (txt === '' || txt == null) return ''\n    if (currentEncoding === 1 && targetEncoding === 2) return Simplized(txt)\n    else if (currentEncoding === 2 && targetEncoding === 1) { return Traditionalized(txt) } else return txt\n  }\n  function translateBody (fobj) {\n    let objs\n    if (typeof fobj === 'object') objs = fobj.childNodes\n    else objs = document.body.childNodes\n    for (let i = 0; i < objs.length; i++) {\n      const obj = objs.item(i)\n      if (\n        '||BR|HR|'.indexOf('|' + obj.tagName + '|') > 0 ||\n      obj === translateButtonObject\n      ) { continue }\n      if (obj.title !== '' && obj.title != null) { obj.title = translateText(obj.title) }\n      if (obj.alt !== '' && obj.alt != null) obj.alt = translateText(obj.alt)\n      if (obj.placeholder !== '' && obj.placeholder != null) obj.placeholder = translateText(obj.placeholder)\n      if (\n        obj.tagName === 'INPUT' &&\n      obj.value !== '' &&\n      obj.type !== 'text' &&\n      obj.type !== 'hidden'\n      ) { obj.value = translateText(obj.value) }\n      if (obj.nodeType === 3) obj.data = translateText(obj.data)\n      else translateBody(obj)\n    }\n  }\n  function translatePage () {\n    if (targetEncoding === 1) {\n      currentEncoding = 1\n      targetEncoding = 2\n      translateButtonObject.innerHTML = msgToTraditionalChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.cht_to_chs)\n    } else if (targetEncoding === 2) {\n      currentEncoding = 2\n      targetEncoding = 1\n      translateButtonObject.innerHTML = msgToSimplifiedChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.chs_to_cht)\n    }\n  }\n  function JTPYStr () {\n    return '万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾'\n  }\n  function FTPYStr () {\n    return '萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽'\n  }\n  window.Traditionalized = (cc) => {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && ss.indexOf(cc.charAt(i)) !== -1) { str += tt.charAt(ss.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function Simplized (cc) {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && tt.indexOf(cc.charAt(i)) !== -1) { str += ss.charAt(tt.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function translateInitialization () {\n    translateButtonObject = document.getElementById('translateLink')\n    if (translateButtonObject) {\n      if (currentEncoding !== targetEncoding) {\n        setTimeout(translateBody, translateDelay)\n        if (targetEncoding === 1) translateButtonObject.innerHTML = msgToSimplifiedChinese\n        else translateButtonObject.innerHTML = msgToTraditionalChinese\n      }\n      translateButtonObject.addEventListener('click', translatePage, false)\n    }\n  }\n  translateInitialization()\n  document.addEventListener('pjax:complete', translateInitialization)\n})","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"cover":"https://s2.loli.net/2022/11/09/9getUWqvxTjHcbl.webp","excerpt":"","more":"/* eslint-disable no-undef */\ndocument.addEventListener('DOMContentLoaded', function () {\n  const translate = GLOBAL_CONFIG.translate\n  const snackbarData = GLOBAL_CONFIG.Snackbar\n  const defaultEncoding = translate.defaultEncoding // 網站默認語言，1: 繁體中文, 2: 簡體中文\n  const translateDelay = translate.translateDelay // 延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0\n  const msgToTraditionalChinese = translate.msgToTraditionalChinese // 此處可以更改為你想要顯示的文字\n  const msgToSimplifiedChinese = translate.msgToSimplifiedChinese // 同上，但兩處均不建議更改\n  let currentEncoding = defaultEncoding\n  const targetEncodingCookie = 'translate-chn-cht'\n  let targetEncoding =\n  saveToLocal.get(targetEncodingCookie) === undefined\n    ? defaultEncoding\n    : Number(saveToLocal.get('translate-chn-cht'))\n  let translateButtonObject\n  const isSnackbar = GLOBAL_CONFIG.Snackbar !== undefined\n\n  function translateText (txt) {\n    if (txt === '' || txt == null) return ''\n    if (currentEncoding === 1 && targetEncoding === 2) return Simplized(txt)\n    else if (currentEncoding === 2 && targetEncoding === 1) { return Traditionalized(txt) } else return txt\n  }\n  function translateBody (fobj) {\n    let objs\n    if (typeof fobj === 'object') objs = fobj.childNodes\n    else objs = document.body.childNodes\n    for (let i = 0; i < objs.length; i++) {\n      const obj = objs.item(i)\n      if (\n        '||BR|HR|'.indexOf('|' + obj.tagName + '|') > 0 ||\n      obj === translateButtonObject\n      ) { continue }\n      if (obj.title !== '' && obj.title != null) { obj.title = translateText(obj.title) }\n      if (obj.alt !== '' && obj.alt != null) obj.alt = translateText(obj.alt)\n      if (obj.placeholder !== '' && obj.placeholder != null) obj.placeholder = translateText(obj.placeholder)\n      if (\n        obj.tagName === 'INPUT' &&\n      obj.value !== '' &&\n      obj.type !== 'text' &&\n      obj.type !== 'hidden'\n      ) { obj.value = translateText(obj.value) }\n      if (obj.nodeType === 3) obj.data = translateText(obj.data)\n      else translateBody(obj)\n    }\n  }\n  function translatePage () {\n    if (targetEncoding === 1) {\n      currentEncoding = 1\n      targetEncoding = 2\n      translateButtonObject.innerHTML = msgToTraditionalChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.cht_to_chs)\n    } else if (targetEncoding === 2) {\n      currentEncoding = 2\n      targetEncoding = 1\n      translateButtonObject.innerHTML = msgToSimplifiedChinese\n      saveToLocal.set(targetEncodingCookie, targetEncoding, 2)\n      translateBody()\n      if (isSnackbar) btf.snackbarShow(snackbarData.chs_to_cht)\n    }\n  }\n  function JTPYStr () {\n    return '万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾'\n  }\n  function FTPYStr () {\n    return '萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽'\n  }\n  window.Traditionalized = (cc) => {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && ss.indexOf(cc.charAt(i)) !== -1) { str += tt.charAt(ss.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function Simplized (cc) {\n    let str = ''\n    const ss = JTPYStr()\n    const tt = FTPYStr()\n    for (let i = 0; i < cc.length; i++) {\n      if (cc.charCodeAt(i) > 10000 && tt.indexOf(cc.charAt(i)) !== -1) { str += ss.charAt(tt.indexOf(cc.charAt(i))) } else str += cc.charAt(i)\n    }\n    return str\n  }\n  function translateInitialization () {\n    translateButtonObject = document.getElementById('translateLink')\n    if (translateButtonObject) {\n      if (currentEncoding !== targetEncoding) {\n        setTimeout(translateBody, translateDelay)\n        if (targetEncoding === 1) translateButtonObject.innerHTML = msgToSimplifiedChinese\n        else translateButtonObject.innerHTML = msgToTraditionalChinese\n      }\n      translateButtonObject.addEventListener('click', translatePage, false)\n    }\n  }\n  translateInitialization()\n  document.addEventListener('pjax:complete', translateInitialization)\n})"}],"Post":[{"title":"quickjs调试工具","keywords":"前端,面试,C","description":"quickjs调试工具","top_img":"设置false不显示顶部图片","sticky":"数值越大越靠前","cover":"首页封面","comments":1,"abbrlink":"d9795d10","date":"2023-05-23T07:21:13.000Z","updated":"2023-05-23T07:21:13.000Z","_content":"\n\n\nvela系统quickjs对接devtools\n\n<!-- more -->\n\n## vela快应用调试功能概览\n\n![image-20230525102147522](https://raw.githubusercontent.com/why862555625/images/main/image-20230525102147522.png)\n\n# vela debug调试功能\n\ndebug调试功能图\n\n![image-20230525111407415](https://raw.githubusercontent.com/why862555625/images/main/image-20230525111407415.png)\n\nvela debug调试功能实现大致分为4个步骤：\n\n1. **连接时将所有的源码发送给devtools。**\n2. **在devtools 的source功能中打断点、将请求发送给下层cdp.**\n3. **cdp计算断点具体在字节码中的位置、并记录。**\n4. **在引擎执行字节码时判断有无命中断点。**\n\n下面具体说明这四个步骤：\n\n## 1. 连接时将所有的源码发送给devtools\n\n在调用loadApplication时会将app的路径保存在APP类中，也就是app的rpk的最外层路径。在监听到devtool连接时，会将rpk包中的所js文件发送给devtools，devtools会将这些js文件拼接成上图中的source文件。\n\n## 2. 在devtools 的source功能中打断点、将请求发送给下层cdp\n\n当打开source文件上打断点、devtools会将断点的文件名、行号发送到下层cdp.\n\n## 3. cdp计算断点具体在字节码中的位置、并记录。\n\n- 断点功能的输入实际上是文件名和断点行信息，第一步我们需要利用这个信息，找到模块，进而首先找到目标函数。\n  - quickjs在真实加载module的时候都会调用JS_EvalInternal。我们可以在这个函数里面监听并记录已经加载完的模块。\n\n- 每个函数对象上都记录了自身的起始行，通过pc2line table可以计算得到结束行，进而和传入的行号进行范围匹配计算。\n  - 函数和字节码的映射规则：\n    - 如果一行源码对应的字节码较短，就将前4位存源码的行数，后四位存字节码对应的行数\n    - 如果一个源码对应的字节码较长，就先存入一个0值（解析pc2line_buf的时候遇到0值会自动将下一个当做128  int来解析），后面补一个128的int，这个int的高位用来存源码行数、低位存字节码的行数。\n\n**计算结束行函数：**\n\n```c++\n#define PC2LINE_BASE     (-1)\n#define PC2LINE_RANGE    5\n#define PC2LINE_OP_FIRST 1\n#define PC2LINE_DIFF_PC_MAX ((255 - PC2LINE_OP_FIRST) / PC2LINE_RANGE)\nstatic int caculate_function_last_line(JSFunctionBytecode* b) {\n    unsigned int op;\n    int ret, v;\n    FunctionBytecodeDebugInfo* debug = js_debugger_get_bytecode_debug_info(b);\n    int line_num = debug->line_num, new_line_num;\n    uint8_t *p = debug->pc2line_buf;\n    uint8_t *p_end = p + debug->pc2line_len;\n    int succ = 1;\n\n    // scan line by line\n    while (p < p_end) {\n        op = *p++;\n        if (op == 0) {\n            uint32_t val;\n            ret = get_leb128(&val, p, p_end);\n            if (ret < 0) {\n                succ = 0;\n                break;\n            }\n            // pc += val;\n            p += ret;\n            ret = get_sleb128(&v, p, p_end);\n            if (ret < 0) {\n                succ = 0;\n                break;\n            }\n            p += ret;\n            new_line_num = line_num + v;\n        } else {\n            op -= PC2LINE_OP_FIRST;\n            new_line_num = line_num + (op % PC2LINE_RANGE) + PC2LINE_BASE;\n        }\n        line_num = new_line_num;\n    }\n    return succ ? line_num : 0;\n}\n\nSTATIC int get_leb128(uint32_t *pval, const uint8_t *buf,\n                      const uint8_t *buf_end)\n{\n    const uint8_t *ptr = buf;\n    uint32_t v, a, i;\n    v = 0;\n    for(i = 0; i < 5; i++) {\n        if (unlikely(ptr >= buf_end))\n            break;\n        a = *ptr++;\n        v |= (a & 0x7f) << (i * 7);\n        if (!(a & 0x80)) {\n            *pval = v;\n            return ptr - buf;\n        }\n    }\n    *pval = 0;\n    return -1;\n}\nSTATIC int get_sleb128(int32_t *pval, const uint8_t *buf,\n                       const uint8_t *buf_end)\n{\n    int ret;\n    uint32_t val;\n    ret = get_leb128(&val, buf, buf_end);\n    if (ret < 0) {\n        *pval = 0;\n        return -1;\n    }\n    *pval = (val >> 1) ^ -(val & 1);\n    return ret;\n}\n```\n\n**源码表和字节码表对应规则：**\n\n```c++\n\nstatic void compute_pc2line_info(JSFunctionDef *s)\n{\n    if (!(s->js_mode & JS_MODE_STRIP) && s->line_number_slots) {\n        int last_line_num = s->line_num;\n        uint32_t last_pc = 0;\n        int i;\n\n        js_dbuf_init(s->ctx, &s->pc2line);\n        for (i = 0; i < s->line_number_count; i++) {\n            uint32_t pc = s->line_number_slots[i].pc;\n            int line_num = s->line_number_slots[i].line_num;\n            int diff_pc, diff_line;\n\n            if (line_num < 0)\n                continue;\n\n            diff_pc = pc - last_pc;\n            diff_line = line_num - last_line_num;\n            if (diff_line == 0 || diff_pc < 0)\n                continue;\n\n            if (diff_line >= PC2LINE_BASE &&\n                diff_line < PC2LINE_BASE + PC2LINE_RANGE &&\n                diff_pc <= PC2LINE_DIFF_PC_MAX) {\n                dbuf_putc(&s->pc2line, (diff_line - PC2LINE_BASE) +\n                          diff_pc * PC2LINE_RANGE + PC2LINE_OP_FIRST);\n            } else {\n                /* longer encoding */\n                dbuf_putc(&s->pc2line, 0);\n                dbuf_put_leb128(&s->pc2line, diff_pc);\n                dbuf_put_sleb128(&s->pc2line, diff_line);\n            }\n            last_pc = pc;\n            last_line_num = line_num;\n        }\n    }\n}\n```\n\n\n\n- 需要注意匹配到的函数可能只是外层函数，具体的断点偏移计算时要考虑递归子函数。\n\n  - 基于pc2line table计算断点在函数字节码中的偏移位置，计算时如果目出现计算出来的行号比目标行号大的情况 `end_line_num>cur_line_num>targe_num`，说明断点落在了子函数中，需要递归，直到最终找到或全部失败。\n\n  \n\n  ![image-20230525125207891](https://raw.githubusercontent.com/why862555625/images/main/image-20230525125207891.png)\n\n- 断点断到、将pause消息和目前上下文的变量信息和调用栈发送给devtools。\n\n  - runtime上面保留了当前栈的信息JSStackFrame，JSStackFrame上面保存了栈上的变量、参数、函数信息；并且JSStackFrame可以通过prev_frame向上查找栈信息。这样遍历下来就可以完整的得到栈上的变量和调用栈。\n\n  \n\n**JSRuntime和JSStackFrame的数据结构**\n\n```C++\n\nstruct JSRuntime {\n    JSMallocFunctions mf;\n    JSMallocState malloc_state;\n    const char *rt_info;\n\n    int atom_hash_size; /* power of two */\n    int atom_count;\n    int atom_size;\n    int atom_count_resize; /* resize hash table at this count */\n    uint32_t *atom_hash;\n    JSAtomStruct **atom_array;\n    int atom_free_index; /* 0 = none */\n\n    int class_count;    /* size of class_array */\n    JSClass *class_array;\n\n    struct list_head context_list; /* list of JSContext.link */\n    /* list of JSGCObjectHeader.link. List of allocated GC objects (used\n       by the garbage collector) */\n    struct list_head gc_obj_list;\n    /* list of JSGCObjectHeader.link. Used during JS_FreeValueRT() */\n    struct list_head gc_zero_ref_count_list;\n    struct list_head tmp_obj_list; /* used during GC */\n    JSGCPhaseEnum gc_phase : 8;\n    size_t malloc_gc_threshold;\n#ifdef DUMP_LEAKS\n    struct list_head string_list; /* list of JSString.link */\n#endif\n    /* stack limitation */\n    uintptr_t stack_size; /* in bytes, 0 if no limit */\n    uintptr_t stack_top;\n    uintptr_t stack_limit; /* lower stack limit */\n\n    JSValue current_exception;\n    /* true if inside an out of memory error, to avoid recursing */\n    BOOL in_out_of_memory : 8;\n\n    struct JSStackFrame *current_stack_frame;  // current stack info\n\n    JSInterruptHandler *interrupt_handler;\n    void *interrupt_opaque;\n\n    JSHostPromiseRejectionTracker *host_promise_rejection_tracker;\n    void *host_promise_rejection_tracker_opaque;\n\n    struct list_head job_list; /* list of JSJobEntry.link */\n\n    JSModuleNormalizeFunc *module_normalize_func;\n    JSModuleLoaderFunc *module_loader_func;\n    void *module_loader_opaque;\n\n    BOOL can_block : 8; /* TRUE if Atomics.wait can block */\n    /* used to allocate, free and clone SharedArrayBuffers */\n    JSSharedArrayBufferFunctions sab_funcs;\n\n    /* Shape hash table */\n    int shape_hash_bits;\n    int shape_hash_size;\n    int shape_hash_count; /* number of hashed shapes */\n    JSShape **shape_hash;\n#ifdef CONFIG_BIGNUM\n    bf_context_t bf_ctx;\n    JSNumericOperations bigint_ops;\n    JSNumericOperations bigfloat_ops;\n    JSNumericOperations bigdecimal_ops;\n    uint32_t operator_count;\n#endif\n    void *user_opaque;\n#ifdef CONFIG_INTERPRETERS_QUICKJS_DEBUG\n    struct JSDebuggerInfo debugger_info;\n    struct DumpMemoryInfo dump_memory_info;\n#endif\n    JSOutOfMemoryTracker* oom_tracker;\n#ifdef CONFIG_MEMORY_LEAK_TRACK\n    int isStartMemoryDump;\n    vector* newObjVector;\n    JSContext* currentCtx;\n    char* pageStatus;\n#endif\n};\n\ntypedef struct JSStackFrame {\n    struct JSStackFrame *prev_frame; /* NULL if first stack frame */\n    JSValue cur_func; /* current function, JS_UNDEFINED if the frame is detached */\n    JSValue *arg_buf; /* arguments */\n    JSValue *var_buf; /* variables */\n    struct list_head var_ref_list; /* list of JSVarRef.link */\n    const uint8_t *cur_pc; /* only used in bytecode functions : PC of the\n                        instruction after the call */\n    int arg_count;\n    int js_mode; /* 0 or JS_MODE_MATH for C functions */\n    /* only used in generators. Current stack pointer value. NULL if\n       the function is running. */\n    JSValue *cur_sp;\n} JSStackFrame;\n\n```\n\n**函数数据结构：**\n\n![](https://raw.githubusercontent.com/why862555625/images/main/image-20230525144252998.png)\n\n**查找目标函数流程：**\n\n![](https://raw.githubusercontent.com/why862555625/images/main/image-20230525124949165.png)\n\n\n\n## 4. 在引擎执行字节码时判断有无命中断点。\n\n命中断点有两个设计思路：\n\n**第一种：**\n\n直接修改字节码、插入debugger指令和nop\\需要额外注意在命中后和取消时将字节码恢复、否则会出现问题。\n\n![image-20230525161322186](https://raw.githubusercontent.com/why862555625/images/main/image-20230525161322186.png)\n\n**第二种：**\n\n分配一块和字节码相同长度的数组、在相同的便宜位置写入1、作为断点标志、方便命中检查。\n\n![image-20230525161507336](https://raw.githubusercontent.com/why862555625/images/main/image-20230525161507336.png)\n\n断点命中的核心思路实在引擎解释执行字节码的时候插入堆断点命中的检查、命中断电后停止执行（不在继续解释下一条指令）。\n\n这里选择重定义字节码的case定义、如果开启了调试功能、则每次解释执行字节码都会插入对js_debugger_check函数执行、他负责检查每一步执行是否命中断点。检查方法很简单、检查当前pc是否落在了断点的范围内（依赖设置断点）\n\n```c++\n#ifdef CONFIG_INTERPRETERS_QUICKJS_DEBUG\n#define CASE(op)        case op: js_debugger_check(ctx, pc); stub_ ## op\n#else\n#define CASE(op)        case op: stub_ ## op\n#endif\n```\n\n**执行字节码：**\n\n![image-20230525170447952](https://raw.githubusercontent.com/why862555625/images/main/image-20230525170447952.png)\n\njs_debugger_check 中暂停的主要逻辑是一个`while(ture)`循环，然后每次执行libuv_run_once()推一次主循环的句柄，用来判断服务端是否放开断点。\n\n\n\n# memory 功能\n\n\n\nmemory功能大概可以概述为三个部分：\n\n1. 接受devtools  memory dump的请求之后，开始遍历引擎的堆内存链表（v8是使用图结构来表示的堆内存、quickjs是使用链表表示的）。\n2. 将quickjs中的链表内存转化为图结构内存。（devtools snapshot需要图结构）\n3. 将图结构转化为snapshot发送给devtools、devtools进行解析并显示。\n\n## 1. 理解引擎的堆内存结构\n\nquickjs的runtime中的gc_obj_list保存了引擎中的所有堆对象的JSGCObjectHeader.遍历gc_obj_list就可以得到所有的堆对象信息\n\n```c++\n\nstruct JSGCObjectHeader {\n    int ref_count; /* must come first, 32-bit */\n    JSGCObjectTypeEnum gc_obj_type : 4;\n    uint8_t mark : 4; /* used by the GC */\n    uint8_t dummy1; /* not used by the GC */\n    uint16_t dummy2; /* not used by the GC */\n    struct list_head link;\n    int64_t id;\n};\n```\n\n\n\n![image-20230525171354456](https://raw.githubusercontent.com/why862555625/images/main/image-20230525171354456.png)\n\n\n\n## 2. 理解snapshot文件格式\n\n- V8 HeapSnapshot文件整体采用JSON格式存储。\n- 存储时采用Meta + 内容的方式，Meta里描述了各个字段的含义，各个节点的数量等。\n- 内存dump信息按照点集和边集的形式存储。点集存储节点信息，边集存储对象之间的链接关系。\n- 字符串是单独存储的，节点中使用时采用下标引用的方式以节约内存。\n\n\n\n![image-20230525172031289](https://raw.githubusercontent.com/why862555625/images/main/image-20230525172031289.png)\n\n\n\n\n\n## 3.堆对象处理：从链表到图\n\nQuickjs中GC对象是通过链表保存的，但HeapSnapshot中是按照图结构保存的，所以需要有一个从链表构建对象图的过程，我生成了一个代理结构，额外记录了对象间的链接关系。\n\n如果不这样做，就需要修改quickjs的GC list结构，这样改动会很大。\n\n\n\n![image-20230525172159734](https://raw.githubusercontent.com/why862555625/images/main/image-20230525172159734.png)\n\n## 4. Proxy图的构建算法\n\n![image-20230525172302551](https://raw.githubusercontent.com/why862555625/images/main/image-20230525172302551.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/c/quickjs调试器.md","raw":"---\ntitle: quickjs调试工具\ntags:\n  - 前端\n  - C\ncategories: C\nkeywords: '前端,面试,C'\ndescription: quickjs调试工具\ntop_img: 设置false不显示顶部图片\nsticky: 数值越大越靠前\ncover: 首页封面\ncomments: false评论\nabbrlink: d9795d10\ndate: 2023-05-23 15:21:13\nupdated: 2023-05-23 15:21:13\n---\n\n\n\nvela系统quickjs对接devtools\n\n<!-- more -->\n\n## vela快应用调试功能概览\n\n![image-20230525102147522](https://raw.githubusercontent.com/why862555625/images/main/image-20230525102147522.png)\n\n# vela debug调试功能\n\ndebug调试功能图\n\n![image-20230525111407415](https://raw.githubusercontent.com/why862555625/images/main/image-20230525111407415.png)\n\nvela debug调试功能实现大致分为4个步骤：\n\n1. **连接时将所有的源码发送给devtools。**\n2. **在devtools 的source功能中打断点、将请求发送给下层cdp.**\n3. **cdp计算断点具体在字节码中的位置、并记录。**\n4. **在引擎执行字节码时判断有无命中断点。**\n\n下面具体说明这四个步骤：\n\n## 1. 连接时将所有的源码发送给devtools\n\n在调用loadApplication时会将app的路径保存在APP类中，也就是app的rpk的最外层路径。在监听到devtool连接时，会将rpk包中的所js文件发送给devtools，devtools会将这些js文件拼接成上图中的source文件。\n\n## 2. 在devtools 的source功能中打断点、将请求发送给下层cdp\n\n当打开source文件上打断点、devtools会将断点的文件名、行号发送到下层cdp.\n\n## 3. cdp计算断点具体在字节码中的位置、并记录。\n\n- 断点功能的输入实际上是文件名和断点行信息，第一步我们需要利用这个信息，找到模块，进而首先找到目标函数。\n  - quickjs在真实加载module的时候都会调用JS_EvalInternal。我们可以在这个函数里面监听并记录已经加载完的模块。\n\n- 每个函数对象上都记录了自身的起始行，通过pc2line table可以计算得到结束行，进而和传入的行号进行范围匹配计算。\n  - 函数和字节码的映射规则：\n    - 如果一行源码对应的字节码较短，就将前4位存源码的行数，后四位存字节码对应的行数\n    - 如果一个源码对应的字节码较长，就先存入一个0值（解析pc2line_buf的时候遇到0值会自动将下一个当做128  int来解析），后面补一个128的int，这个int的高位用来存源码行数、低位存字节码的行数。\n\n**计算结束行函数：**\n\n```c++\n#define PC2LINE_BASE     (-1)\n#define PC2LINE_RANGE    5\n#define PC2LINE_OP_FIRST 1\n#define PC2LINE_DIFF_PC_MAX ((255 - PC2LINE_OP_FIRST) / PC2LINE_RANGE)\nstatic int caculate_function_last_line(JSFunctionBytecode* b) {\n    unsigned int op;\n    int ret, v;\n    FunctionBytecodeDebugInfo* debug = js_debugger_get_bytecode_debug_info(b);\n    int line_num = debug->line_num, new_line_num;\n    uint8_t *p = debug->pc2line_buf;\n    uint8_t *p_end = p + debug->pc2line_len;\n    int succ = 1;\n\n    // scan line by line\n    while (p < p_end) {\n        op = *p++;\n        if (op == 0) {\n            uint32_t val;\n            ret = get_leb128(&val, p, p_end);\n            if (ret < 0) {\n                succ = 0;\n                break;\n            }\n            // pc += val;\n            p += ret;\n            ret = get_sleb128(&v, p, p_end);\n            if (ret < 0) {\n                succ = 0;\n                break;\n            }\n            p += ret;\n            new_line_num = line_num + v;\n        } else {\n            op -= PC2LINE_OP_FIRST;\n            new_line_num = line_num + (op % PC2LINE_RANGE) + PC2LINE_BASE;\n        }\n        line_num = new_line_num;\n    }\n    return succ ? line_num : 0;\n}\n\nSTATIC int get_leb128(uint32_t *pval, const uint8_t *buf,\n                      const uint8_t *buf_end)\n{\n    const uint8_t *ptr = buf;\n    uint32_t v, a, i;\n    v = 0;\n    for(i = 0; i < 5; i++) {\n        if (unlikely(ptr >= buf_end))\n            break;\n        a = *ptr++;\n        v |= (a & 0x7f) << (i * 7);\n        if (!(a & 0x80)) {\n            *pval = v;\n            return ptr - buf;\n        }\n    }\n    *pval = 0;\n    return -1;\n}\nSTATIC int get_sleb128(int32_t *pval, const uint8_t *buf,\n                       const uint8_t *buf_end)\n{\n    int ret;\n    uint32_t val;\n    ret = get_leb128(&val, buf, buf_end);\n    if (ret < 0) {\n        *pval = 0;\n        return -1;\n    }\n    *pval = (val >> 1) ^ -(val & 1);\n    return ret;\n}\n```\n\n**源码表和字节码表对应规则：**\n\n```c++\n\nstatic void compute_pc2line_info(JSFunctionDef *s)\n{\n    if (!(s->js_mode & JS_MODE_STRIP) && s->line_number_slots) {\n        int last_line_num = s->line_num;\n        uint32_t last_pc = 0;\n        int i;\n\n        js_dbuf_init(s->ctx, &s->pc2line);\n        for (i = 0; i < s->line_number_count; i++) {\n            uint32_t pc = s->line_number_slots[i].pc;\n            int line_num = s->line_number_slots[i].line_num;\n            int diff_pc, diff_line;\n\n            if (line_num < 0)\n                continue;\n\n            diff_pc = pc - last_pc;\n            diff_line = line_num - last_line_num;\n            if (diff_line == 0 || diff_pc < 0)\n                continue;\n\n            if (diff_line >= PC2LINE_BASE &&\n                diff_line < PC2LINE_BASE + PC2LINE_RANGE &&\n                diff_pc <= PC2LINE_DIFF_PC_MAX) {\n                dbuf_putc(&s->pc2line, (diff_line - PC2LINE_BASE) +\n                          diff_pc * PC2LINE_RANGE + PC2LINE_OP_FIRST);\n            } else {\n                /* longer encoding */\n                dbuf_putc(&s->pc2line, 0);\n                dbuf_put_leb128(&s->pc2line, diff_pc);\n                dbuf_put_sleb128(&s->pc2line, diff_line);\n            }\n            last_pc = pc;\n            last_line_num = line_num;\n        }\n    }\n}\n```\n\n\n\n- 需要注意匹配到的函数可能只是外层函数，具体的断点偏移计算时要考虑递归子函数。\n\n  - 基于pc2line table计算断点在函数字节码中的偏移位置，计算时如果目出现计算出来的行号比目标行号大的情况 `end_line_num>cur_line_num>targe_num`，说明断点落在了子函数中，需要递归，直到最终找到或全部失败。\n\n  \n\n  ![image-20230525125207891](https://raw.githubusercontent.com/why862555625/images/main/image-20230525125207891.png)\n\n- 断点断到、将pause消息和目前上下文的变量信息和调用栈发送给devtools。\n\n  - runtime上面保留了当前栈的信息JSStackFrame，JSStackFrame上面保存了栈上的变量、参数、函数信息；并且JSStackFrame可以通过prev_frame向上查找栈信息。这样遍历下来就可以完整的得到栈上的变量和调用栈。\n\n  \n\n**JSRuntime和JSStackFrame的数据结构**\n\n```C++\n\nstruct JSRuntime {\n    JSMallocFunctions mf;\n    JSMallocState malloc_state;\n    const char *rt_info;\n\n    int atom_hash_size; /* power of two */\n    int atom_count;\n    int atom_size;\n    int atom_count_resize; /* resize hash table at this count */\n    uint32_t *atom_hash;\n    JSAtomStruct **atom_array;\n    int atom_free_index; /* 0 = none */\n\n    int class_count;    /* size of class_array */\n    JSClass *class_array;\n\n    struct list_head context_list; /* list of JSContext.link */\n    /* list of JSGCObjectHeader.link. List of allocated GC objects (used\n       by the garbage collector) */\n    struct list_head gc_obj_list;\n    /* list of JSGCObjectHeader.link. Used during JS_FreeValueRT() */\n    struct list_head gc_zero_ref_count_list;\n    struct list_head tmp_obj_list; /* used during GC */\n    JSGCPhaseEnum gc_phase : 8;\n    size_t malloc_gc_threshold;\n#ifdef DUMP_LEAKS\n    struct list_head string_list; /* list of JSString.link */\n#endif\n    /* stack limitation */\n    uintptr_t stack_size; /* in bytes, 0 if no limit */\n    uintptr_t stack_top;\n    uintptr_t stack_limit; /* lower stack limit */\n\n    JSValue current_exception;\n    /* true if inside an out of memory error, to avoid recursing */\n    BOOL in_out_of_memory : 8;\n\n    struct JSStackFrame *current_stack_frame;  // current stack info\n\n    JSInterruptHandler *interrupt_handler;\n    void *interrupt_opaque;\n\n    JSHostPromiseRejectionTracker *host_promise_rejection_tracker;\n    void *host_promise_rejection_tracker_opaque;\n\n    struct list_head job_list; /* list of JSJobEntry.link */\n\n    JSModuleNormalizeFunc *module_normalize_func;\n    JSModuleLoaderFunc *module_loader_func;\n    void *module_loader_opaque;\n\n    BOOL can_block : 8; /* TRUE if Atomics.wait can block */\n    /* used to allocate, free and clone SharedArrayBuffers */\n    JSSharedArrayBufferFunctions sab_funcs;\n\n    /* Shape hash table */\n    int shape_hash_bits;\n    int shape_hash_size;\n    int shape_hash_count; /* number of hashed shapes */\n    JSShape **shape_hash;\n#ifdef CONFIG_BIGNUM\n    bf_context_t bf_ctx;\n    JSNumericOperations bigint_ops;\n    JSNumericOperations bigfloat_ops;\n    JSNumericOperations bigdecimal_ops;\n    uint32_t operator_count;\n#endif\n    void *user_opaque;\n#ifdef CONFIG_INTERPRETERS_QUICKJS_DEBUG\n    struct JSDebuggerInfo debugger_info;\n    struct DumpMemoryInfo dump_memory_info;\n#endif\n    JSOutOfMemoryTracker* oom_tracker;\n#ifdef CONFIG_MEMORY_LEAK_TRACK\n    int isStartMemoryDump;\n    vector* newObjVector;\n    JSContext* currentCtx;\n    char* pageStatus;\n#endif\n};\n\ntypedef struct JSStackFrame {\n    struct JSStackFrame *prev_frame; /* NULL if first stack frame */\n    JSValue cur_func; /* current function, JS_UNDEFINED if the frame is detached */\n    JSValue *arg_buf; /* arguments */\n    JSValue *var_buf; /* variables */\n    struct list_head var_ref_list; /* list of JSVarRef.link */\n    const uint8_t *cur_pc; /* only used in bytecode functions : PC of the\n                        instruction after the call */\n    int arg_count;\n    int js_mode; /* 0 or JS_MODE_MATH for C functions */\n    /* only used in generators. Current stack pointer value. NULL if\n       the function is running. */\n    JSValue *cur_sp;\n} JSStackFrame;\n\n```\n\n**函数数据结构：**\n\n![](https://raw.githubusercontent.com/why862555625/images/main/image-20230525144252998.png)\n\n**查找目标函数流程：**\n\n![](https://raw.githubusercontent.com/why862555625/images/main/image-20230525124949165.png)\n\n\n\n## 4. 在引擎执行字节码时判断有无命中断点。\n\n命中断点有两个设计思路：\n\n**第一种：**\n\n直接修改字节码、插入debugger指令和nop\\需要额外注意在命中后和取消时将字节码恢复、否则会出现问题。\n\n![image-20230525161322186](https://raw.githubusercontent.com/why862555625/images/main/image-20230525161322186.png)\n\n**第二种：**\n\n分配一块和字节码相同长度的数组、在相同的便宜位置写入1、作为断点标志、方便命中检查。\n\n![image-20230525161507336](https://raw.githubusercontent.com/why862555625/images/main/image-20230525161507336.png)\n\n断点命中的核心思路实在引擎解释执行字节码的时候插入堆断点命中的检查、命中断电后停止执行（不在继续解释下一条指令）。\n\n这里选择重定义字节码的case定义、如果开启了调试功能、则每次解释执行字节码都会插入对js_debugger_check函数执行、他负责检查每一步执行是否命中断点。检查方法很简单、检查当前pc是否落在了断点的范围内（依赖设置断点）\n\n```c++\n#ifdef CONFIG_INTERPRETERS_QUICKJS_DEBUG\n#define CASE(op)        case op: js_debugger_check(ctx, pc); stub_ ## op\n#else\n#define CASE(op)        case op: stub_ ## op\n#endif\n```\n\n**执行字节码：**\n\n![image-20230525170447952](https://raw.githubusercontent.com/why862555625/images/main/image-20230525170447952.png)\n\njs_debugger_check 中暂停的主要逻辑是一个`while(ture)`循环，然后每次执行libuv_run_once()推一次主循环的句柄，用来判断服务端是否放开断点。\n\n\n\n# memory 功能\n\n\n\nmemory功能大概可以概述为三个部分：\n\n1. 接受devtools  memory dump的请求之后，开始遍历引擎的堆内存链表（v8是使用图结构来表示的堆内存、quickjs是使用链表表示的）。\n2. 将quickjs中的链表内存转化为图结构内存。（devtools snapshot需要图结构）\n3. 将图结构转化为snapshot发送给devtools、devtools进行解析并显示。\n\n## 1. 理解引擎的堆内存结构\n\nquickjs的runtime中的gc_obj_list保存了引擎中的所有堆对象的JSGCObjectHeader.遍历gc_obj_list就可以得到所有的堆对象信息\n\n```c++\n\nstruct JSGCObjectHeader {\n    int ref_count; /* must come first, 32-bit */\n    JSGCObjectTypeEnum gc_obj_type : 4;\n    uint8_t mark : 4; /* used by the GC */\n    uint8_t dummy1; /* not used by the GC */\n    uint16_t dummy2; /* not used by the GC */\n    struct list_head link;\n    int64_t id;\n};\n```\n\n\n\n![image-20230525171354456](https://raw.githubusercontent.com/why862555625/images/main/image-20230525171354456.png)\n\n\n\n## 2. 理解snapshot文件格式\n\n- V8 HeapSnapshot文件整体采用JSON格式存储。\n- 存储时采用Meta + 内容的方式，Meta里描述了各个字段的含义，各个节点的数量等。\n- 内存dump信息按照点集和边集的形式存储。点集存储节点信息，边集存储对象之间的链接关系。\n- 字符串是单独存储的，节点中使用时采用下标引用的方式以节约内存。\n\n\n\n![image-20230525172031289](https://raw.githubusercontent.com/why862555625/images/main/image-20230525172031289.png)\n\n\n\n\n\n## 3.堆对象处理：从链表到图\n\nQuickjs中GC对象是通过链表保存的，但HeapSnapshot中是按照图结构保存的，所以需要有一个从链表构建对象图的过程，我生成了一个代理结构，额外记录了对象间的链接关系。\n\n如果不这样做，就需要修改quickjs的GC list结构，这样改动会很大。\n\n\n\n![image-20230525172159734](https://raw.githubusercontent.com/why862555625/images/main/image-20230525172159734.png)\n\n## 4. Proxy图的构建算法\n\n![image-20230525172302551](https://raw.githubusercontent.com/why862555625/images/main/image-20230525172302551.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"c/quickjs调试器","published":1,"layout":"post","photos":[],"link":"","_id":"cli311udt00036ojne7jlebzc","content":"<p>vela系统quickjs对接devtools</p>\n<span id=\"more\"></span>\n\n<h2 id=\"vela快应用调试功能概览\"><a href=\"#vela快应用调试功能概览\" class=\"headerlink\" title=\"vela快应用调试功能概览\"></a>vela快应用调试功能概览</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525102147522.png\" alt=\"image-20230525102147522\"></p>\n<h1 id=\"vela-debug调试功能\"><a href=\"#vela-debug调试功能\" class=\"headerlink\" title=\"vela debug调试功能\"></a>vela debug调试功能</h1><p>debug调试功能图</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525111407415.png\" alt=\"image-20230525111407415\"></p>\n<p>vela debug调试功能实现大致分为4个步骤：</p>\n<ol>\n<li><strong>连接时将所有的源码发送给devtools。</strong></li>\n<li><strong>在devtools 的source功能中打断点、将请求发送给下层cdp.</strong></li>\n<li><strong>cdp计算断点具体在字节码中的位置、并记录。</strong></li>\n<li><strong>在引擎执行字节码时判断有无命中断点。</strong></li>\n</ol>\n<p>下面具体说明这四个步骤：</p>\n<h2 id=\"1-连接时将所有的源码发送给devtools\"><a href=\"#1-连接时将所有的源码发送给devtools\" class=\"headerlink\" title=\"1. 连接时将所有的源码发送给devtools\"></a>1. 连接时将所有的源码发送给devtools</h2><p>在调用loadApplication时会将app的路径保存在APP类中，也就是app的rpk的最外层路径。在监听到devtool连接时，会将rpk包中的所js文件发送给devtools，devtools会将这些js文件拼接成上图中的source文件。</p>\n<h2 id=\"2-在devtools-的source功能中打断点、将请求发送给下层cdp\"><a href=\"#2-在devtools-的source功能中打断点、将请求发送给下层cdp\" class=\"headerlink\" title=\"2. 在devtools 的source功能中打断点、将请求发送给下层cdp\"></a>2. 在devtools 的source功能中打断点、将请求发送给下层cdp</h2><p>当打开source文件上打断点、devtools会将断点的文件名、行号发送到下层cdp.</p>\n<h2 id=\"3-cdp计算断点具体在字节码中的位置、并记录。\"><a href=\"#3-cdp计算断点具体在字节码中的位置、并记录。\" class=\"headerlink\" title=\"3. cdp计算断点具体在字节码中的位置、并记录。\"></a>3. cdp计算断点具体在字节码中的位置、并记录。</h2><ul>\n<li><p>断点功能的输入实际上是文件名和断点行信息，第一步我们需要利用这个信息，找到模块，进而首先找到目标函数。</p>\n<ul>\n<li>quickjs在真实加载module的时候都会调用JS_EvalInternal。我们可以在这个函数里面监听并记录已经加载完的模块。</li>\n</ul>\n</li>\n<li><p>每个函数对象上都记录了自身的起始行，通过pc2line table可以计算得到结束行，进而和传入的行号进行范围匹配计算。</p>\n<ul>\n<li>函数和字节码的映射规则：<ul>\n<li>如果一行源码对应的字节码较短，就将前4位存源码的行数，后四位存字节码对应的行数</li>\n<li>如果一个源码对应的字节码较长，就先存入一个0值（解析pc2line_buf的时候遇到0值会自动将下一个当做128  int来解析），后面补一个128的int，这个int的高位用来存源码行数、低位存字节码的行数。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>计算结束行函数：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_BASE     (-1)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_RANGE    5</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_OP_FIRST 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_DIFF_PC_MAX ((255 - PC2LINE_OP_FIRST) / PC2LINE_RANGE)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">int</span> <span class=\"title\">caculate_function_last_line</span><span class=\"params\">(JSFunctionBytecode* b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">int</span> op;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret, v;</span><br><span class=\"line\">    FunctionBytecodeDebugInfo* debug = <span class=\"built_in\">js_debugger_get_bytecode_debug_info</span>(b);</span><br><span class=\"line\">    <span class=\"type\">int</span> line_num = debug-&gt;line_num, new_line_num;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> *p = debug-&gt;pc2line_buf;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> *p_end = p + debug-&gt;pc2line_len;</span><br><span class=\"line\">    <span class=\"type\">int</span> succ = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// scan line by line</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p &lt; p_end) &#123;</span><br><span class=\"line\">        op = *p++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (op == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">uint32_t</span> val;</span><br><span class=\"line\">            ret = <span class=\"built_in\">get_leb128</span>(&amp;val, p, p_end);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                succ = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// pc += val;</span></span><br><span class=\"line\">            p += ret;</span><br><span class=\"line\">            ret = <span class=\"built_in\">get_sleb128</span>(&amp;v, p, p_end);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                succ = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            p += ret;</span><br><span class=\"line\">            new_line_num = line_num + v;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            op -= PC2LINE_OP_FIRST;</span><br><span class=\"line\">            new_line_num = line_num + (op % PC2LINE_RANGE) + PC2LINE_BASE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        line_num = new_line_num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> succ ? line_num : <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">STATIC <span class=\"type\">int</span> <span class=\"title\">get_leb128</span><span class=\"params\">(<span class=\"type\">uint32_t</span> *pval, <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                      <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf_end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *ptr = buf;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> v, a, i;</span><br><span class=\"line\">    v = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">unlikely</span>(ptr &gt;= buf_end))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        a = *ptr++;</span><br><span class=\"line\">        v |= (a &amp; <span class=\"number\">0x7f</span>) &lt;&lt; (i * <span class=\"number\">7</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(a &amp; <span class=\"number\">0x80</span>)) &#123;</span><br><span class=\"line\">            *pval = v;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ptr - buf;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *pval = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">STATIC <span class=\"type\">int</span> <span class=\"title\">get_sleb128</span><span class=\"params\">(<span class=\"type\">int32_t</span> *pval, <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                       <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf_end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> val;</span><br><span class=\"line\">    ret = <span class=\"built_in\">get_leb128</span>(&amp;val, buf, buf_end);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        *pval = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *pval = (val &gt;&gt; <span class=\"number\">1</span>) ^ -(val &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>源码表和字节码表对应规则：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">compute_pc2line_info</span><span class=\"params\">(JSFunctionDef *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(s-&gt;js_mode &amp; JS_MODE_STRIP) &amp;&amp; s-&gt;line_number_slots) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> last_line_num = s-&gt;line_num;</span><br><span class=\"line\">        <span class=\"type\">uint32_t</span> last_pc = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">js_dbuf_init</span>(s-&gt;ctx, &amp;s-&gt;pc2line);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; s-&gt;line_number_count; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">uint32_t</span> pc = s-&gt;line_number_slots[i].pc;</span><br><span class=\"line\">            <span class=\"type\">int</span> line_num = s-&gt;line_number_slots[i].line_num;</span><br><span class=\"line\">            <span class=\"type\">int</span> diff_pc, diff_line;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (line_num &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            diff_pc = pc - last_pc;</span><br><span class=\"line\">            diff_line = line_num - last_line_num;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (diff_line == <span class=\"number\">0</span> || diff_pc &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (diff_line &gt;= PC2LINE_BASE &amp;&amp;</span><br><span class=\"line\">                diff_line &lt; PC2LINE_BASE + PC2LINE_RANGE &amp;&amp;</span><br><span class=\"line\">                diff_pc &lt;= PC2LINE_DIFF_PC_MAX) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">dbuf_putc</span>(&amp;s-&gt;pc2line, (diff_line - PC2LINE_BASE) +</span><br><span class=\"line\">                          diff_pc * PC2LINE_RANGE + PC2LINE_OP_FIRST);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* longer encoding */</span></span><br><span class=\"line\">                <span class=\"built_in\">dbuf_putc</span>(&amp;s-&gt;pc2line, <span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"built_in\">dbuf_put_leb128</span>(&amp;s-&gt;pc2line, diff_pc);</span><br><span class=\"line\">                <span class=\"built_in\">dbuf_put_sleb128</span>(&amp;s-&gt;pc2line, diff_line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            last_pc = pc;</span><br><span class=\"line\">            last_line_num = line_num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>需要注意匹配到的函数可能只是外层函数，具体的断点偏移计算时要考虑递归子函数。</p>\n<ul>\n<li>基于pc2line table计算断点在函数字节码中的偏移位置，计算时如果目出现计算出来的行号比目标行号大的情况 <code>end_line_num&gt;cur_line_num&gt;targe_num</code>，说明断点落在了子函数中，需要递归，直到最终找到或全部失败。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525125207891.png\" alt=\"image-20230525125207891\"></p>\n</li>\n<li><p>断点断到、将pause消息和目前上下文的变量信息和调用栈发送给devtools。</p>\n<ul>\n<li>runtime上面保留了当前栈的信息JSStackFrame，JSStackFrame上面保存了栈上的变量、参数、函数信息；并且JSStackFrame可以通过prev_frame向上查找栈信息。这样遍历下来就可以完整的得到栈上的变量和调用栈。</li>\n</ul>\n</li>\n</ul>\n<p><strong>JSRuntime和JSStackFrame的数据结构</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">JSRuntime</span> &#123;</span><br><span class=\"line\">    JSMallocFunctions mf;</span><br><span class=\"line\">    JSMallocState malloc_state;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span> *rt_info;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> atom_hash_size; <span class=\"comment\">/* power of two */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> atom_count;</span><br><span class=\"line\">    <span class=\"type\">int</span> atom_size;</span><br><span class=\"line\">    <span class=\"type\">int</span> atom_count_resize; <span class=\"comment\">/* resize hash table at this count */</span></span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> *atom_hash;</span><br><span class=\"line\">    JSAtomStruct **atom_array;</span><br><span class=\"line\">    <span class=\"type\">int</span> atom_free_index; <span class=\"comment\">/* 0 = none */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> class_count;    <span class=\"comment\">/* size of class_array */</span></span><br><span class=\"line\">    JSClass *class_array;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> context_list; <span class=\"comment\">/* list of JSContext.link */</span></span><br><span class=\"line\">    <span class=\"comment\">/* list of JSGCObjectHeader.link. List of allocated GC objects (used</span></span><br><span class=\"line\"><span class=\"comment\">       by the garbage collector) */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> gc_obj_list;</span><br><span class=\"line\">    <span class=\"comment\">/* list of JSGCObjectHeader.link. Used during JS_FreeValueRT() */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> gc_zero_ref_count_list;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> tmp_obj_list; <span class=\"comment\">/* used during GC */</span></span><br><span class=\"line\">    JSGCPhaseEnum gc_phase : <span class=\"number\">8</span>;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> malloc_gc_threshold;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DUMP_LEAKS</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> string_list; <span class=\"comment\">/* list of JSString.link */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"comment\">/* stack limitation */</span></span><br><span class=\"line\">    <span class=\"type\">uintptr_t</span> stack_size; <span class=\"comment\">/* in bytes, 0 if no limit */</span></span><br><span class=\"line\">    <span class=\"type\">uintptr_t</span> stack_top;</span><br><span class=\"line\">    <span class=\"type\">uintptr_t</span> stack_limit; <span class=\"comment\">/* lower stack limit */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    JSValue current_exception;</span><br><span class=\"line\">    <span class=\"comment\">/* true if inside an out of memory error, to avoid recursing */</span></span><br><span class=\"line\">    BOOL in_out_of_memory : <span class=\"number\">8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">JSStackFrame</span> *current_stack_frame;  <span class=\"comment\">// current stack info</span></span><br><span class=\"line\"></span><br><span class=\"line\">    JSInterruptHandler *interrupt_handler;</span><br><span class=\"line\">    <span class=\"type\">void</span> *interrupt_opaque;</span><br><span class=\"line\"></span><br><span class=\"line\">    JSHostPromiseRejectionTracker *host_promise_rejection_tracker;</span><br><span class=\"line\">    <span class=\"type\">void</span> *host_promise_rejection_tracker_opaque;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> job_list; <span class=\"comment\">/* list of JSJobEntry.link */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    JSModuleNormalizeFunc *module_normalize_func;</span><br><span class=\"line\">    JSModuleLoaderFunc *module_loader_func;</span><br><span class=\"line\">    <span class=\"type\">void</span> *module_loader_opaque;</span><br><span class=\"line\"></span><br><span class=\"line\">    BOOL can_block : <span class=\"number\">8</span>; <span class=\"comment\">/* TRUE if Atomics.wait can block */</span></span><br><span class=\"line\">    <span class=\"comment\">/* used to allocate, free and clone SharedArrayBuffers */</span></span><br><span class=\"line\">    JSSharedArrayBufferFunctions sab_funcs;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Shape hash table */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> shape_hash_bits;</span><br><span class=\"line\">    <span class=\"type\">int</span> shape_hash_size;</span><br><span class=\"line\">    <span class=\"type\">int</span> shape_hash_count; <span class=\"comment\">/* number of hashed shapes */</span></span><br><span class=\"line\">    JSShape **shape_hash;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_BIGNUM</span></span><br><span class=\"line\">    <span class=\"type\">bf_context_t</span> bf_ctx;</span><br><span class=\"line\">    JSNumericOperations bigint_ops;</span><br><span class=\"line\">    JSNumericOperations bigfloat_ops;</span><br><span class=\"line\">    JSNumericOperations bigdecimal_ops;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> operator_count;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"type\">void</span> *user_opaque;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_INTERPRETERS_QUICKJS_DEBUG</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">JSDebuggerInfo</span> debugger_info;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">DumpMemoryInfo</span> dump_memory_info;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    JSOutOfMemoryTracker* oom_tracker;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_MEMORY_LEAK_TRACK</span></span><br><span class=\"line\">    <span class=\"type\">int</span> isStartMemoryDump;</span><br><span class=\"line\">    vector* newObjVector;</span><br><span class=\"line\">    JSContext* currentCtx;</span><br><span class=\"line\">    <span class=\"type\">char</span>* pageStatus;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">JSStackFrame</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">JSStackFrame</span> *prev_frame; <span class=\"comment\">/* NULL if first stack frame */</span></span><br><span class=\"line\">    JSValue cur_func; <span class=\"comment\">/* current function, JS_UNDEFINED if the frame is detached */</span></span><br><span class=\"line\">    JSValue *arg_buf; <span class=\"comment\">/* arguments */</span></span><br><span class=\"line\">    JSValue *var_buf; <span class=\"comment\">/* variables */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> var_ref_list; <span class=\"comment\">/* list of JSVarRef.link */</span></span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *cur_pc; <span class=\"comment\">/* only used in bytecode functions : PC of the</span></span><br><span class=\"line\"><span class=\"comment\">                        instruction after the call */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> arg_count;</span><br><span class=\"line\">    <span class=\"type\">int</span> js_mode; <span class=\"comment\">/* 0 or JS_MODE_MATH for C functions */</span></span><br><span class=\"line\">    <span class=\"comment\">/* only used in generators. Current stack pointer value. NULL if</span></span><br><span class=\"line\"><span class=\"comment\">       the function is running. */</span></span><br><span class=\"line\">    JSValue *cur_sp;</span><br><span class=\"line\">&#125; JSStackFrame;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>函数数据结构：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525144252998.png\"></p>\n<p><strong>查找目标函数流程：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525124949165.png\"></p>\n<h2 id=\"4-在引擎执行字节码时判断有无命中断点。\"><a href=\"#4-在引擎执行字节码时判断有无命中断点。\" class=\"headerlink\" title=\"4. 在引擎执行字节码时判断有无命中断点。\"></a>4. 在引擎执行字节码时判断有无命中断点。</h2><p>命中断点有两个设计思路：</p>\n<p><strong>第一种：</strong></p>\n<p>直接修改字节码、插入debugger指令和nop\\需要额外注意在命中后和取消时将字节码恢复、否则会出现问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525161322186.png\" alt=\"image-20230525161322186\"></p>\n<p><strong>第二种：</strong></p>\n<p>分配一块和字节码相同长度的数组、在相同的便宜位置写入1、作为断点标志、方便命中检查。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525161507336.png\" alt=\"image-20230525161507336\"></p>\n<p>断点命中的核心思路实在引擎解释执行字节码的时候插入堆断点命中的检查、命中断电后停止执行（不在继续解释下一条指令）。</p>\n<p>这里选择重定义字节码的case定义、如果开启了调试功能、则每次解释执行字节码都会插入对js_debugger_check函数执行、他负责检查每一步执行是否命中断点。检查方法很简单、检查当前pc是否落在了断点的范围内（依赖设置断点）</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_INTERPRETERS_QUICKJS_DEBUG</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CASE(op)        case op: js_debugger_check(ctx, pc); stub_ ## op</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CASE(op)        case op: stub_ ## op</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n\n<p><strong>执行字节码：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525170447952.png\" alt=\"image-20230525170447952\"></p>\n<p>js_debugger_check 中暂停的主要逻辑是一个<code>while(ture)</code>循环，然后每次执行libuv_run_once()推一次主循环的句柄，用来判断服务端是否放开断点。</p>\n<h1 id=\"memory-功能\"><a href=\"#memory-功能\" class=\"headerlink\" title=\"memory 功能\"></a>memory 功能</h1><p>memory功能大概可以概述为三个部分：</p>\n<ol>\n<li>接受devtools  memory dump的请求之后，开始遍历引擎的堆内存链表（v8是使用图结构来表示的堆内存、quickjs是使用链表表示的）。</li>\n<li>将quickjs中的链表内存转化为图结构内存。（devtools snapshot需要图结构）</li>\n<li>将图结构转化为snapshot发送给devtools、devtools进行解析并显示。</li>\n</ol>\n<h2 id=\"1-理解引擎的堆内存结构\"><a href=\"#1-理解引擎的堆内存结构\" class=\"headerlink\" title=\"1. 理解引擎的堆内存结构\"></a>1. 理解引擎的堆内存结构</h2><p>quickjs的runtime中的gc_obj_list保存了引擎中的所有堆对象的JSGCObjectHeader.遍历gc_obj_list就可以得到所有的堆对象信息</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">JSGCObjectHeader</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ref_count; <span class=\"comment\">/* must come first, 32-bit */</span></span><br><span class=\"line\">    JSGCObjectTypeEnum gc_obj_type : <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> mark : <span class=\"number\">4</span>; <span class=\"comment\">/* used by the GC */</span></span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> dummy1; <span class=\"comment\">/* not used by the GC */</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> dummy2; <span class=\"comment\">/* not used by the GC */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> link;</span><br><span class=\"line\">    <span class=\"type\">int64_t</span> id;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525171354456.png\" alt=\"image-20230525171354456\"></p>\n<h2 id=\"2-理解snapshot文件格式\"><a href=\"#2-理解snapshot文件格式\" class=\"headerlink\" title=\"2. 理解snapshot文件格式\"></a>2. 理解snapshot文件格式</h2><ul>\n<li>V8 HeapSnapshot文件整体采用JSON格式存储。</li>\n<li>存储时采用Meta + 内容的方式，Meta里描述了各个字段的含义，各个节点的数量等。</li>\n<li>内存dump信息按照点集和边集的形式存储。点集存储节点信息，边集存储对象之间的链接关系。</li>\n<li>字符串是单独存储的，节点中使用时采用下标引用的方式以节约内存。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525172031289.png\" alt=\"image-20230525172031289\"></p>\n<h2 id=\"3-堆对象处理：从链表到图\"><a href=\"#3-堆对象处理：从链表到图\" class=\"headerlink\" title=\"3.堆对象处理：从链表到图\"></a>3.堆对象处理：从链表到图</h2><p>Quickjs中GC对象是通过链表保存的，但HeapSnapshot中是按照图结构保存的，所以需要有一个从链表构建对象图的过程，我生成了一个代理结构，额外记录了对象间的链接关系。</p>\n<p>如果不这样做，就需要修改quickjs的GC list结构，这样改动会很大。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525172159734.png\" alt=\"image-20230525172159734\"></p>\n<h2 id=\"4-Proxy图的构建算法\"><a href=\"#4-Proxy图的构建算法\" class=\"headerlink\" title=\"4. Proxy图的构建算法\"></a>4. Proxy图的构建算法</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525172302551.png\" alt=\"image-20230525172302551\"></p>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"excerpt":"<p>vela系统quickjs对接devtools</p>","more":"<h2 id=\"vela快应用调试功能概览\"><a href=\"#vela快应用调试功能概览\" class=\"headerlink\" title=\"vela快应用调试功能概览\"></a>vela快应用调试功能概览</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525102147522.png\" alt=\"image-20230525102147522\"></p>\n<h1 id=\"vela-debug调试功能\"><a href=\"#vela-debug调试功能\" class=\"headerlink\" title=\"vela debug调试功能\"></a>vela debug调试功能</h1><p>debug调试功能图</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525111407415.png\" alt=\"image-20230525111407415\"></p>\n<p>vela debug调试功能实现大致分为4个步骤：</p>\n<ol>\n<li><strong>连接时将所有的源码发送给devtools。</strong></li>\n<li><strong>在devtools 的source功能中打断点、将请求发送给下层cdp.</strong></li>\n<li><strong>cdp计算断点具体在字节码中的位置、并记录。</strong></li>\n<li><strong>在引擎执行字节码时判断有无命中断点。</strong></li>\n</ol>\n<p>下面具体说明这四个步骤：</p>\n<h2 id=\"1-连接时将所有的源码发送给devtools\"><a href=\"#1-连接时将所有的源码发送给devtools\" class=\"headerlink\" title=\"1. 连接时将所有的源码发送给devtools\"></a>1. 连接时将所有的源码发送给devtools</h2><p>在调用loadApplication时会将app的路径保存在APP类中，也就是app的rpk的最外层路径。在监听到devtool连接时，会将rpk包中的所js文件发送给devtools，devtools会将这些js文件拼接成上图中的source文件。</p>\n<h2 id=\"2-在devtools-的source功能中打断点、将请求发送给下层cdp\"><a href=\"#2-在devtools-的source功能中打断点、将请求发送给下层cdp\" class=\"headerlink\" title=\"2. 在devtools 的source功能中打断点、将请求发送给下层cdp\"></a>2. 在devtools 的source功能中打断点、将请求发送给下层cdp</h2><p>当打开source文件上打断点、devtools会将断点的文件名、行号发送到下层cdp.</p>\n<h2 id=\"3-cdp计算断点具体在字节码中的位置、并记录。\"><a href=\"#3-cdp计算断点具体在字节码中的位置、并记录。\" class=\"headerlink\" title=\"3. cdp计算断点具体在字节码中的位置、并记录。\"></a>3. cdp计算断点具体在字节码中的位置、并记录。</h2><ul>\n<li><p>断点功能的输入实际上是文件名和断点行信息，第一步我们需要利用这个信息，找到模块，进而首先找到目标函数。</p>\n<ul>\n<li>quickjs在真实加载module的时候都会调用JS_EvalInternal。我们可以在这个函数里面监听并记录已经加载完的模块。</li>\n</ul>\n</li>\n<li><p>每个函数对象上都记录了自身的起始行，通过pc2line table可以计算得到结束行，进而和传入的行号进行范围匹配计算。</p>\n<ul>\n<li>函数和字节码的映射规则：<ul>\n<li>如果一行源码对应的字节码较短，就将前4位存源码的行数，后四位存字节码对应的行数</li>\n<li>如果一个源码对应的字节码较长，就先存入一个0值（解析pc2line_buf的时候遇到0值会自动将下一个当做128  int来解析），后面补一个128的int，这个int的高位用来存源码行数、低位存字节码的行数。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>计算结束行函数：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_BASE     (-1)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_RANGE    5</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_OP_FIRST 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PC2LINE_DIFF_PC_MAX ((255 - PC2LINE_OP_FIRST) / PC2LINE_RANGE)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">int</span> <span class=\"title\">caculate_function_last_line</span><span class=\"params\">(JSFunctionBytecode* b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">int</span> op;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret, v;</span><br><span class=\"line\">    FunctionBytecodeDebugInfo* debug = <span class=\"built_in\">js_debugger_get_bytecode_debug_info</span>(b);</span><br><span class=\"line\">    <span class=\"type\">int</span> line_num = debug-&gt;line_num, new_line_num;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> *p = debug-&gt;pc2line_buf;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> *p_end = p + debug-&gt;pc2line_len;</span><br><span class=\"line\">    <span class=\"type\">int</span> succ = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// scan line by line</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p &lt; p_end) &#123;</span><br><span class=\"line\">        op = *p++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (op == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">uint32_t</span> val;</span><br><span class=\"line\">            ret = <span class=\"built_in\">get_leb128</span>(&amp;val, p, p_end);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                succ = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// pc += val;</span></span><br><span class=\"line\">            p += ret;</span><br><span class=\"line\">            ret = <span class=\"built_in\">get_sleb128</span>(&amp;v, p, p_end);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                succ = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            p += ret;</span><br><span class=\"line\">            new_line_num = line_num + v;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            op -= PC2LINE_OP_FIRST;</span><br><span class=\"line\">            new_line_num = line_num + (op % PC2LINE_RANGE) + PC2LINE_BASE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        line_num = new_line_num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> succ ? line_num : <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">STATIC <span class=\"type\">int</span> <span class=\"title\">get_leb128</span><span class=\"params\">(<span class=\"type\">uint32_t</span> *pval, <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                      <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf_end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *ptr = buf;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> v, a, i;</span><br><span class=\"line\">    v = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">unlikely</span>(ptr &gt;= buf_end))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        a = *ptr++;</span><br><span class=\"line\">        v |= (a &amp; <span class=\"number\">0x7f</span>) &lt;&lt; (i * <span class=\"number\">7</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(a &amp; <span class=\"number\">0x80</span>)) &#123;</span><br><span class=\"line\">            *pval = v;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ptr - buf;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *pval = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">STATIC <span class=\"type\">int</span> <span class=\"title\">get_sleb128</span><span class=\"params\">(<span class=\"type\">int32_t</span> *pval, <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                       <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *buf_end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> val;</span><br><span class=\"line\">    ret = <span class=\"built_in\">get_leb128</span>(&amp;val, buf, buf_end);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        *pval = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *pval = (val &gt;&gt; <span class=\"number\">1</span>) ^ -(val &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>源码表和字节码表对应规则：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">compute_pc2line_info</span><span class=\"params\">(JSFunctionDef *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(s-&gt;js_mode &amp; JS_MODE_STRIP) &amp;&amp; s-&gt;line_number_slots) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> last_line_num = s-&gt;line_num;</span><br><span class=\"line\">        <span class=\"type\">uint32_t</span> last_pc = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">js_dbuf_init</span>(s-&gt;ctx, &amp;s-&gt;pc2line);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; s-&gt;line_number_count; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">uint32_t</span> pc = s-&gt;line_number_slots[i].pc;</span><br><span class=\"line\">            <span class=\"type\">int</span> line_num = s-&gt;line_number_slots[i].line_num;</span><br><span class=\"line\">            <span class=\"type\">int</span> diff_pc, diff_line;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (line_num &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            diff_pc = pc - last_pc;</span><br><span class=\"line\">            diff_line = line_num - last_line_num;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (diff_line == <span class=\"number\">0</span> || diff_pc &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (diff_line &gt;= PC2LINE_BASE &amp;&amp;</span><br><span class=\"line\">                diff_line &lt; PC2LINE_BASE + PC2LINE_RANGE &amp;&amp;</span><br><span class=\"line\">                diff_pc &lt;= PC2LINE_DIFF_PC_MAX) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">dbuf_putc</span>(&amp;s-&gt;pc2line, (diff_line - PC2LINE_BASE) +</span><br><span class=\"line\">                          diff_pc * PC2LINE_RANGE + PC2LINE_OP_FIRST);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* longer encoding */</span></span><br><span class=\"line\">                <span class=\"built_in\">dbuf_putc</span>(&amp;s-&gt;pc2line, <span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"built_in\">dbuf_put_leb128</span>(&amp;s-&gt;pc2line, diff_pc);</span><br><span class=\"line\">                <span class=\"built_in\">dbuf_put_sleb128</span>(&amp;s-&gt;pc2line, diff_line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            last_pc = pc;</span><br><span class=\"line\">            last_line_num = line_num;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>需要注意匹配到的函数可能只是外层函数，具体的断点偏移计算时要考虑递归子函数。</p>\n<ul>\n<li>基于pc2line table计算断点在函数字节码中的偏移位置，计算时如果目出现计算出来的行号比目标行号大的情况 <code>end_line_num&gt;cur_line_num&gt;targe_num</code>，说明断点落在了子函数中，需要递归，直到最终找到或全部失败。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525125207891.png\" alt=\"image-20230525125207891\"></p>\n</li>\n<li><p>断点断到、将pause消息和目前上下文的变量信息和调用栈发送给devtools。</p>\n<ul>\n<li>runtime上面保留了当前栈的信息JSStackFrame，JSStackFrame上面保存了栈上的变量、参数、函数信息；并且JSStackFrame可以通过prev_frame向上查找栈信息。这样遍历下来就可以完整的得到栈上的变量和调用栈。</li>\n</ul>\n</li>\n</ul>\n<p><strong>JSRuntime和JSStackFrame的数据结构</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">JSRuntime</span> &#123;</span><br><span class=\"line\">    JSMallocFunctions mf;</span><br><span class=\"line\">    JSMallocState malloc_state;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span> *rt_info;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> atom_hash_size; <span class=\"comment\">/* power of two */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> atom_count;</span><br><span class=\"line\">    <span class=\"type\">int</span> atom_size;</span><br><span class=\"line\">    <span class=\"type\">int</span> atom_count_resize; <span class=\"comment\">/* resize hash table at this count */</span></span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> *atom_hash;</span><br><span class=\"line\">    JSAtomStruct **atom_array;</span><br><span class=\"line\">    <span class=\"type\">int</span> atom_free_index; <span class=\"comment\">/* 0 = none */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> class_count;    <span class=\"comment\">/* size of class_array */</span></span><br><span class=\"line\">    JSClass *class_array;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> context_list; <span class=\"comment\">/* list of JSContext.link */</span></span><br><span class=\"line\">    <span class=\"comment\">/* list of JSGCObjectHeader.link. List of allocated GC objects (used</span></span><br><span class=\"line\"><span class=\"comment\">       by the garbage collector) */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> gc_obj_list;</span><br><span class=\"line\">    <span class=\"comment\">/* list of JSGCObjectHeader.link. Used during JS_FreeValueRT() */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> gc_zero_ref_count_list;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> tmp_obj_list; <span class=\"comment\">/* used during GC */</span></span><br><span class=\"line\">    JSGCPhaseEnum gc_phase : <span class=\"number\">8</span>;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> malloc_gc_threshold;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> DUMP_LEAKS</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> string_list; <span class=\"comment\">/* list of JSString.link */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"comment\">/* stack limitation */</span></span><br><span class=\"line\">    <span class=\"type\">uintptr_t</span> stack_size; <span class=\"comment\">/* in bytes, 0 if no limit */</span></span><br><span class=\"line\">    <span class=\"type\">uintptr_t</span> stack_top;</span><br><span class=\"line\">    <span class=\"type\">uintptr_t</span> stack_limit; <span class=\"comment\">/* lower stack limit */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    JSValue current_exception;</span><br><span class=\"line\">    <span class=\"comment\">/* true if inside an out of memory error, to avoid recursing */</span></span><br><span class=\"line\">    BOOL in_out_of_memory : <span class=\"number\">8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">JSStackFrame</span> *current_stack_frame;  <span class=\"comment\">// current stack info</span></span><br><span class=\"line\"></span><br><span class=\"line\">    JSInterruptHandler *interrupt_handler;</span><br><span class=\"line\">    <span class=\"type\">void</span> *interrupt_opaque;</span><br><span class=\"line\"></span><br><span class=\"line\">    JSHostPromiseRejectionTracker *host_promise_rejection_tracker;</span><br><span class=\"line\">    <span class=\"type\">void</span> *host_promise_rejection_tracker_opaque;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> job_list; <span class=\"comment\">/* list of JSJobEntry.link */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    JSModuleNormalizeFunc *module_normalize_func;</span><br><span class=\"line\">    JSModuleLoaderFunc *module_loader_func;</span><br><span class=\"line\">    <span class=\"type\">void</span> *module_loader_opaque;</span><br><span class=\"line\"></span><br><span class=\"line\">    BOOL can_block : <span class=\"number\">8</span>; <span class=\"comment\">/* TRUE if Atomics.wait can block */</span></span><br><span class=\"line\">    <span class=\"comment\">/* used to allocate, free and clone SharedArrayBuffers */</span></span><br><span class=\"line\">    JSSharedArrayBufferFunctions sab_funcs;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Shape hash table */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> shape_hash_bits;</span><br><span class=\"line\">    <span class=\"type\">int</span> shape_hash_size;</span><br><span class=\"line\">    <span class=\"type\">int</span> shape_hash_count; <span class=\"comment\">/* number of hashed shapes */</span></span><br><span class=\"line\">    JSShape **shape_hash;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_BIGNUM</span></span><br><span class=\"line\">    <span class=\"type\">bf_context_t</span> bf_ctx;</span><br><span class=\"line\">    JSNumericOperations bigint_ops;</span><br><span class=\"line\">    JSNumericOperations bigfloat_ops;</span><br><span class=\"line\">    JSNumericOperations bigdecimal_ops;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span> operator_count;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"type\">void</span> *user_opaque;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_INTERPRETERS_QUICKJS_DEBUG</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">JSDebuggerInfo</span> debugger_info;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">DumpMemoryInfo</span> dump_memory_info;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    JSOutOfMemoryTracker* oom_tracker;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_MEMORY_LEAK_TRACK</span></span><br><span class=\"line\">    <span class=\"type\">int</span> isStartMemoryDump;</span><br><span class=\"line\">    vector* newObjVector;</span><br><span class=\"line\">    JSContext* currentCtx;</span><br><span class=\"line\">    <span class=\"type\">char</span>* pageStatus;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">JSStackFrame</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">JSStackFrame</span> *prev_frame; <span class=\"comment\">/* NULL if first stack frame */</span></span><br><span class=\"line\">    JSValue cur_func; <span class=\"comment\">/* current function, JS_UNDEFINED if the frame is detached */</span></span><br><span class=\"line\">    JSValue *arg_buf; <span class=\"comment\">/* arguments */</span></span><br><span class=\"line\">    JSValue *var_buf; <span class=\"comment\">/* variables */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> var_ref_list; <span class=\"comment\">/* list of JSVarRef.link */</span></span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">uint8_t</span> *cur_pc; <span class=\"comment\">/* only used in bytecode functions : PC of the</span></span><br><span class=\"line\"><span class=\"comment\">                        instruction after the call */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> arg_count;</span><br><span class=\"line\">    <span class=\"type\">int</span> js_mode; <span class=\"comment\">/* 0 or JS_MODE_MATH for C functions */</span></span><br><span class=\"line\">    <span class=\"comment\">/* only used in generators. Current stack pointer value. NULL if</span></span><br><span class=\"line\"><span class=\"comment\">       the function is running. */</span></span><br><span class=\"line\">    JSValue *cur_sp;</span><br><span class=\"line\">&#125; JSStackFrame;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>函数数据结构：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525144252998.png\"></p>\n<p><strong>查找目标函数流程：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525124949165.png\"></p>\n<h2 id=\"4-在引擎执行字节码时判断有无命中断点。\"><a href=\"#4-在引擎执行字节码时判断有无命中断点。\" class=\"headerlink\" title=\"4. 在引擎执行字节码时判断有无命中断点。\"></a>4. 在引擎执行字节码时判断有无命中断点。</h2><p>命中断点有两个设计思路：</p>\n<p><strong>第一种：</strong></p>\n<p>直接修改字节码、插入debugger指令和nop\\需要额外注意在命中后和取消时将字节码恢复、否则会出现问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525161322186.png\" alt=\"image-20230525161322186\"></p>\n<p><strong>第二种：</strong></p>\n<p>分配一块和字节码相同长度的数组、在相同的便宜位置写入1、作为断点标志、方便命中检查。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525161507336.png\" alt=\"image-20230525161507336\"></p>\n<p>断点命中的核心思路实在引擎解释执行字节码的时候插入堆断点命中的检查、命中断电后停止执行（不在继续解释下一条指令）。</p>\n<p>这里选择重定义字节码的case定义、如果开启了调试功能、则每次解释执行字节码都会插入对js_debugger_check函数执行、他负责检查每一步执行是否命中断点。检查方法很简单、检查当前pc是否落在了断点的范围内（依赖设置断点）</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifdef</span> CONFIG_INTERPRETERS_QUICKJS_DEBUG</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CASE(op)        case op: js_debugger_check(ctx, pc); stub_ ## op</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CASE(op)        case op: stub_ ## op</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n\n<p><strong>执行字节码：</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525170447952.png\" alt=\"image-20230525170447952\"></p>\n<p>js_debugger_check 中暂停的主要逻辑是一个<code>while(ture)</code>循环，然后每次执行libuv_run_once()推一次主循环的句柄，用来判断服务端是否放开断点。</p>\n<h1 id=\"memory-功能\"><a href=\"#memory-功能\" class=\"headerlink\" title=\"memory 功能\"></a>memory 功能</h1><p>memory功能大概可以概述为三个部分：</p>\n<ol>\n<li>接受devtools  memory dump的请求之后，开始遍历引擎的堆内存链表（v8是使用图结构来表示的堆内存、quickjs是使用链表表示的）。</li>\n<li>将quickjs中的链表内存转化为图结构内存。（devtools snapshot需要图结构）</li>\n<li>将图结构转化为snapshot发送给devtools、devtools进行解析并显示。</li>\n</ol>\n<h2 id=\"1-理解引擎的堆内存结构\"><a href=\"#1-理解引擎的堆内存结构\" class=\"headerlink\" title=\"1. 理解引擎的堆内存结构\"></a>1. 理解引擎的堆内存结构</h2><p>quickjs的runtime中的gc_obj_list保存了引擎中的所有堆对象的JSGCObjectHeader.遍历gc_obj_list就可以得到所有的堆对象信息</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">JSGCObjectHeader</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ref_count; <span class=\"comment\">/* must come first, 32-bit */</span></span><br><span class=\"line\">    JSGCObjectTypeEnum gc_obj_type : <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> mark : <span class=\"number\">4</span>; <span class=\"comment\">/* used by the GC */</span></span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> dummy1; <span class=\"comment\">/* not used by the GC */</span></span><br><span class=\"line\">    <span class=\"type\">uint16_t</span> dummy2; <span class=\"comment\">/* not used by the GC */</span></span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">list_head</span> link;</span><br><span class=\"line\">    <span class=\"type\">int64_t</span> id;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525171354456.png\" alt=\"image-20230525171354456\"></p>\n<h2 id=\"2-理解snapshot文件格式\"><a href=\"#2-理解snapshot文件格式\" class=\"headerlink\" title=\"2. 理解snapshot文件格式\"></a>2. 理解snapshot文件格式</h2><ul>\n<li>V8 HeapSnapshot文件整体采用JSON格式存储。</li>\n<li>存储时采用Meta + 内容的方式，Meta里描述了各个字段的含义，各个节点的数量等。</li>\n<li>内存dump信息按照点集和边集的形式存储。点集存储节点信息，边集存储对象之间的链接关系。</li>\n<li>字符串是单独存储的，节点中使用时采用下标引用的方式以节约内存。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525172031289.png\" alt=\"image-20230525172031289\"></p>\n<h2 id=\"3-堆对象处理：从链表到图\"><a href=\"#3-堆对象处理：从链表到图\" class=\"headerlink\" title=\"3.堆对象处理：从链表到图\"></a>3.堆对象处理：从链表到图</h2><p>Quickjs中GC对象是通过链表保存的，但HeapSnapshot中是按照图结构保存的，所以需要有一个从链表构建对象图的过程，我生成了一个代理结构，额外记录了对象间的链接关系。</p>\n<p>如果不这样做，就需要修改quickjs的GC list结构，这样改动会很大。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525172159734.png\" alt=\"image-20230525172159734\"></p>\n<h2 id=\"4-Proxy图的构建算法\"><a href=\"#4-Proxy图的构建算法\" class=\"headerlink\" title=\"4. Proxy图的构建算法\"></a>4. Proxy图的构建算法</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/image-20230525172302551.png\" alt=\"image-20230525172302551\"></p>"},{"title":"vela快应用框架","keywords":"quickjs ts c++","description":"quickjs对接devtools","top_img":"设置false不显示顶部图片","sticky":100,"cover":"首页封面","comments":1,"abbrlink":"d9795d89","date":"2023-04-25T07:27:56.000Z","updated":"2023-04-25T07:27:56.000Z","_content":"\n\n\nVela上快应用框架的一些实现原理和编程实践\n\n<!-- more -->\n\n# 快应用框架构成\n\n一个简单的图用来描述快应用框架的模块构成，主要由Native（C++）部分和JS部分（framework.js）构成。\n\n![48c4d276-9d71-439a-a720-7f268da27d85](https://raw.githubusercontent.com/why862555625/images/main/images/48c4d276-9d71-439a-a720-7f268da27d85.svg)\n\n在框架的C++代码中，最核心的两大组件就是 quickjs和libuv，分别提供JS运行环境和异步消息循环机制。框架还用到了一些其他的C/C++库如libcurl作为http客户端，rapidjson提供json解析能力等。\n\n下面给出项目目录结构：\n\n```\n.\n├── bin                                     # 生成目录\n│   ├── app                                 # 测试应用\n│   ├── apps.json                           # 应用配置文件\n│   ├── font                                # 应用字体资源\n│   ├── quickapp\n│   └── vapp                                # 项目生成的可执行文件\n├── build                                   # cmake构建目录\n├── CMakeLists.txt\n├── deps                                    # 依赖项目录\n│   ├── curl                                # 多协议文件传输库\n│   ├── ext                                 # 扩展，主要是lvgl非标准扩展\n│   ├── FFmpeg                              # 音视频编解码库\n│   ├── freetype2                           # 字体渲染库\n│   ├── libuv                               # 跨平台事件驱动的消息循环库\n│   ├── littlefs                            # lvgl相关\n│   ├── lv_conf.h\n│   ├── lv_drivers\n│   ├── lv_drv_conf.h\n│   ├── lv_ffmpeg_interface\n│   ├── lv_fs_interface\n│   ├── lvgl                                # lvgl 嵌入式gui库\n│   ├── lv_lib_freetype                     # lvgl的freetype库\n│   ├── lv_lib_png                          # lvgl的png解码库\n│   ├── quickjs                             # 嵌入式JS引擎\n│   ├── rapidjson                           # Json库\n│   ├── tools                               # 工具目录，目前存放了Ffmpeg编译脚本\n│   ├── unqlite                             # no sql数据库\n│   ├── uvws                                # 基于libuv实现的websocket库\n│   ├── wasm3                               # web assembely支持库\n│   └── yoga                                # yoga排版引擎\n├── Kconfig                                 # 供vela使用的kconfg配置\n├── Make.defs\n├── Makefile                                # vela makefile\n├── README.md                               # 本文件\n├── src                                     # 源码\n│   ├── aiotjs.h\n│   ├── ajs_vm.cpp\n│   ├── ....\n│   ├── framework                           # 框架源码\n│   ├── gui                                 # GUI相关代码，包含lvgl渲染器实现\n│   ├── jse                                 # JS Environment JS环境相关\n│   └── Kconfig\n├── tests                                   # 测试\n│   ├── gui\n│   ├── helpers\n│   ├── run.js\n│   ├── ... \n│   ├── test-feature-vibrator.js\n│   ├── wasi\n│   └── wasm\n└── toolchain                               # 交叉编译相关\n    └── cross-m32.cmake                     # linux 32位构建\n```\n\n\n\n# 框架启动流程分析\n\n![6ca169bc-84af-4252-9758-54c853feefef](https://raw.githubusercontent.com/why862555625/images/main/images/6ca169bc-84af-4252-9758-54c853feefef.svg)\n\n框架的整个启动和执行流程较为复杂，里面涉及到了JS和C++的互调用。\n\n启动流程以C++的入口函数为入口点，会初始化quickjs，创建app，启动子线程并加载Native module和内置JS框架代码。\n\n然后流程转交到JS，由JS通过调用初始化时注册的Native函数来完成整个快应用的加载。\n\n\n\n# VDOM渲染流程分析\n\n\n\nVDOM的创建和渲染出于性能考虑，放在了C++层实现，整个VDOM的创建由Native通过执行template上的渲染函数来创建。\n\n```js\n((module) => {\n    module.exports = function (vm) {\n      const _vm_ = vm || this\n      return aiot.__ce__(\"div\", {\n        \"classList\": [\n          \"page\",\n          \"home-page\"\n        ]\n      }, [\n        aiot.__ci__({\n          shown: function () { return _vm_.status !== 0 }\n        },\n          function () {\n            return aiot.__ce__(\"text\", {\n              \"classList\": [\n                \"text-time\"\n              ],\n              \"value\": function () { return _vm_.$t(\"a.b\") }\n            })\n          }),\n        aiot.__ci__({\n          shown: function () { return _vm_.status === 0 }\n        },\n          function () {\n            return aiot.__ce__(\"div\", {\n              \"classList\": [\n                \"body\",\n                \"launch-panel\"\n              ]\n            }, [\n              aiot.__ce__(\"image\", {\n                \"src\": \"/Common/logo.png\",\n                \"classList\": [\n                  \"logo\"\n                ]\n              }),\n              aiot.__ce__(\"text\", {\n                \"classList\": [\n                  \"app-name\"\n                ],\n                \"value\": \"航旅纵横\"\n              })\n            ])\n          }),\n        aiot.__ci__({...}),\n        aiot.__ci__({...}),\n        ....\n      ])\n    }\n    /***/\n}),\n```\n\nTemplate本身是一个嵌套结构，它被翻译成了对aiot.__ce__, aiot__cf__, aiot.__ci__等函数的嵌套调用，嵌套调用的过程就是在Native层完成整个dom树构建的过程。\n\n我们来看__cf__对应的C++源码，它用于创建一个逻辑循环节点：\n\n\n\n```c++\nDomEntity* dom_create_for_fragment(jse_context_ref ctx, jse_value_t options, jse_value_t func) {\n    AIOTJS_LOG_DEBUG(\"dom_create_for_fragment ==================== \");\n\n\n   ....\n\n    //创建DomForFragment节点\n    DomForFragment *frag = new DomForFragment();\n    page->addDomEntity(frag);\n    \n    ...\n\n    // 保存JS端传入的表达式和render函数\n    jse_value_t exp = jse_get_object_property(ctx, options, \"exp\");\n    frag->setExpress(jse_dup_value(ctx, exp));\n    frag->setRenderFunction(jse_dup_value(ctx, func));\n    jse_free_value(ctx, exp);\n\n    //设置key或者$idx\n    ...\n\n    //创建effect函数\n    jse_value_t eff = create_effect(ctx, dom_update_for_fragment, 0);\n    AIOTJS_LOG_DEBUG(\"AddEffect for %d\", frag->uid());\n    //调用framework的effectWrap函数将effect函数传递给JS层保存\n    frag->addEffect(ctx, dom_effect(ctx, eff, frag->uid(), 0));\n    jse_free_value(ctx, eff);\n    ...\n    \n    // 返回创建好的frag vdom节点\n    return frag;\n}\n```\n\ndom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：\n\n\n\n```c++\nbool DomForFragment::render(jse_context_ref ctx) {\n    // 递归构造\n    jse_value_t exp_obj = jse_call(ctx, exp_, JSE_UNDEFINED, 0, {});\n    jse_value_t expValue = JSE_UNDEFINED;\n    const char* str_tid = nullptr;\n\n    // 调用JS端的求值函数获取for循环对应的list对象 expValue\n    expValue = get_from_js_expression();\n    \n    ....\n\n    //遍历数组\n    jse_size_t len = jse_get_array_length(ctx, expValue);\n    for(jse_size_t i = 0; i < len; i++) {\n        //为每个element分别调用render函数\n        jse_value_t idx = jse_uint(ctx, i);\n        jse_value_t args[] = {\n            idx,\n            item\n        };\n        jse_value_t res = jse_call(ctx, render_, JSE_UNDEFINED, 2, args);\n        if (jse_is_number(res)) {\n            unsigned int cid = jse_to_uint_def(ctx, res, 0);\n            DomEntity* ent = p->entity(cid);\n            AIOTJS_CHECK_NE(ent, nullptr);\n            ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n            addChild(ent);\n            if(!jse_is_undefined(tid_value)) {\n                jse_value_t v_tid = jse_dup_value(ctx, tid_value);\n                ent->setTid(v_tid);\n            }\n        } else if (jse_is_array(ctx, res)) {\n            jse_size_t childlen = jse_get_array_length(ctx, res);\n            for(size_t j=0; j<childlen; j++) {\n                unsigned int cid = jse_get_array_idx_uint(ctx, res, j, 0);\n                DomEntity* ent = p->entity(cid);\n                AIOTJS_CHECK_NE(ent, nullptr);\n                ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n                addChild(ent);\n            }\n        }\n        jse_free_value(ctx, res);\n        jse_free_value(ctx, idx);\n    }\n    jse_free_value(ctx, item);\n\n    jse_free_value(ctx, expValue);\n    AIOTJS_LOG_DEBUG(\"DomForFragment::build finished - <%u>\", uid());\n    // 只有初始化的时候返回true表示需要flush，其它情况下延迟flush\n    return isBindingEffect();\n}\n```\n\ndom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：\n\n```c++\nbool DomForFragment::render(jse_context_ref ctx) {\n    // 递归构造\n    jse_value_t exp_obj = jse_call(ctx, exp_, JSE_UNDEFINED, 0, {});\n    jse_value_t expValue = JSE_UNDEFINED;\n    const char* str_tid = nullptr;\n\n    // 调用JS端的求值函数获取for循环对应的list对象 expValue\n    expValue = get_from_js_expression();\n    \n    ....\n\n    //遍历数组\n    jse_size_t len = jse_get_array_length(ctx, expValue);\n    for(jse_size_t i = 0; i < len; i++) {\n        //为每个element分别调用render函数\n        jse_value_t idx = jse_uint(ctx, i);\n        jse_value_t args[] = {\n            idx,\n            item\n        };\n        jse_value_t res = jse_call(ctx, render_, JSE_UNDEFINED, 2, args);\n        if (jse_is_number(res)) {\n            unsigned int cid = jse_to_uint_def(ctx, res, 0);\n            DomEntity* ent = p->entity(cid);\n            AIOTJS_CHECK_NE(ent, nullptr);\n            ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n            addChild(ent);\n            if(!jse_is_undefined(tid_value)) {\n                jse_value_t v_tid = jse_dup_value(ctx, tid_value);\n                ent->setTid(v_tid);\n            }\n        } else if (jse_is_array(ctx, res)) {\n            jse_size_t childlen = jse_get_array_length(ctx, res);\n            for(size_t j=0; j<childlen; j++) {\n                unsigned int cid = jse_get_array_idx_uint(ctx, res, j, 0);\n                DomEntity* ent = p->entity(cid);\n                AIOTJS_CHECK_NE(ent, nullptr);\n                ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n                addChild(ent);\n            }\n        }\n        jse_free_value(ctx, res);\n        jse_free_value(ctx, idx);\n    }\n    jse_free_value(ctx, item);\n\n    jse_free_value(ctx, expValue);\n    AIOTJS_LOG_DEBUG(\"DomForFragment::build finished - <%u>\", uid());\n    // 只有初始化的时候返回true表示需要flush，其它情况下延迟flush\n    return isBindingEffect();\n}\n```\n\n\n\n\n\n# 框架线程模型\n\n框架采用多线程模式，主要有如下两类线程：\n\n- 主线程：负责渲染，只有一个\n- 应用线程：负责执行JS代码，响应数据变更并更新vdom\n\n主线程和应用线程各启动一个uv loop进行消息处理，这两个线程通过libuv进行异步通信，主要有如下几种场景：\n\n1. 应用线程退出后异步通知主线程退出\n2. 应用线程更新vdom后异步通知主线程刷新ui\n3. 系统消息（如应用后台，应用退出等）由主线程发出，通过libuv转到应用线程执行\n\n# 渲染流程分析\n\n## 渲染流程图\n\n\n\n![33f7e704-ec72-4782-b8ff-1e58df0bef2d](https://raw.githubusercontent.com/why862555625/images/main/images/33f7e704-ec72-4782-b8ff-1e58df0bef2d.svg)\n\n\n\n## 渲染流程\n\n\n\n![6e8b9b04-5afd-47aa-9263-d3a379c1ac5b](https://raw.githubusercontent.com/why862555625/images/main/images/6e8b9b04-5afd-47aa-9263-d3a379c1ac5b.svg)\n\n\n\n# 框架核心部分介绍\n\n## 核心类图\n\n![a8dc8b49-a594-454c-9309-164e3269c5e9](https://raw.githubusercontent.com/why862555625/images/main/images/a8dc8b49-a594-454c-9309-164e3269c5e9.svg)\n\n解释：\n\n1. Framework是内部使用的框架类表示，FrameworkExt从Framework继承并添加了对vela系统的消息集成，在vela中使用FrameworkExt表示唯一的框架实例\n2. FrameworkExt中会维护多个app实例，框架支持多应用切换\n3. 每个app实例包含一个JS运行上下文环境和相关的libuv句柄，它们封装在RuntimeContxt中，作为Application的成员变量保存，即一个Application对象唯一对应一个js运行上下文。\n4. 一个Applicatoin对象可以拥有多个Page对象，一个Page对象表示一个可显示的页面，实际是一颗vdom树\n5. Page对象的继承关系较为复杂，框架支持自定义组件，从逻辑上讲，一个Component包含一颗vdom子树，它可以被任意组合来形成最终的完整vdom树。Page是最顶层的Component组件，唯一。从继承关系上讲，DomDocument这一层应该去掉，在添加子组件支持后它的语义已被Component取代，这层抽象当前代码中没有意义但仍然存在。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/c/vela快应用框架.md","raw":"---\ntitle: vela快应用框架\ntags:\n  - quickjs\n  - devtools\ncategories: c\nkeywords: 'quickjs ts c++'\ndescription: quickjs对接devtools\ntop_img: 设置false不显示顶部图片\nsticky: 100\ncover: 首页封面\ncomments: true评论\nabbrlink: d9795d89\ndate: 2023-04-25 15:27:56\nupdated: 2023-04-25 15:27:56\n---\n\n\n\nVela上快应用框架的一些实现原理和编程实践\n\n<!-- more -->\n\n# 快应用框架构成\n\n一个简单的图用来描述快应用框架的模块构成，主要由Native（C++）部分和JS部分（framework.js）构成。\n\n![48c4d276-9d71-439a-a720-7f268da27d85](https://raw.githubusercontent.com/why862555625/images/main/images/48c4d276-9d71-439a-a720-7f268da27d85.svg)\n\n在框架的C++代码中，最核心的两大组件就是 quickjs和libuv，分别提供JS运行环境和异步消息循环机制。框架还用到了一些其他的C/C++库如libcurl作为http客户端，rapidjson提供json解析能力等。\n\n下面给出项目目录结构：\n\n```\n.\n├── bin                                     # 生成目录\n│   ├── app                                 # 测试应用\n│   ├── apps.json                           # 应用配置文件\n│   ├── font                                # 应用字体资源\n│   ├── quickapp\n│   └── vapp                                # 项目生成的可执行文件\n├── build                                   # cmake构建目录\n├── CMakeLists.txt\n├── deps                                    # 依赖项目录\n│   ├── curl                                # 多协议文件传输库\n│   ├── ext                                 # 扩展，主要是lvgl非标准扩展\n│   ├── FFmpeg                              # 音视频编解码库\n│   ├── freetype2                           # 字体渲染库\n│   ├── libuv                               # 跨平台事件驱动的消息循环库\n│   ├── littlefs                            # lvgl相关\n│   ├── lv_conf.h\n│   ├── lv_drivers\n│   ├── lv_drv_conf.h\n│   ├── lv_ffmpeg_interface\n│   ├── lv_fs_interface\n│   ├── lvgl                                # lvgl 嵌入式gui库\n│   ├── lv_lib_freetype                     # lvgl的freetype库\n│   ├── lv_lib_png                          # lvgl的png解码库\n│   ├── quickjs                             # 嵌入式JS引擎\n│   ├── rapidjson                           # Json库\n│   ├── tools                               # 工具目录，目前存放了Ffmpeg编译脚本\n│   ├── unqlite                             # no sql数据库\n│   ├── uvws                                # 基于libuv实现的websocket库\n│   ├── wasm3                               # web assembely支持库\n│   └── yoga                                # yoga排版引擎\n├── Kconfig                                 # 供vela使用的kconfg配置\n├── Make.defs\n├── Makefile                                # vela makefile\n├── README.md                               # 本文件\n├── src                                     # 源码\n│   ├── aiotjs.h\n│   ├── ajs_vm.cpp\n│   ├── ....\n│   ├── framework                           # 框架源码\n│   ├── gui                                 # GUI相关代码，包含lvgl渲染器实现\n│   ├── jse                                 # JS Environment JS环境相关\n│   └── Kconfig\n├── tests                                   # 测试\n│   ├── gui\n│   ├── helpers\n│   ├── run.js\n│   ├── ... \n│   ├── test-feature-vibrator.js\n│   ├── wasi\n│   └── wasm\n└── toolchain                               # 交叉编译相关\n    └── cross-m32.cmake                     # linux 32位构建\n```\n\n\n\n# 框架启动流程分析\n\n![6ca169bc-84af-4252-9758-54c853feefef](https://raw.githubusercontent.com/why862555625/images/main/images/6ca169bc-84af-4252-9758-54c853feefef.svg)\n\n框架的整个启动和执行流程较为复杂，里面涉及到了JS和C++的互调用。\n\n启动流程以C++的入口函数为入口点，会初始化quickjs，创建app，启动子线程并加载Native module和内置JS框架代码。\n\n然后流程转交到JS，由JS通过调用初始化时注册的Native函数来完成整个快应用的加载。\n\n\n\n# VDOM渲染流程分析\n\n\n\nVDOM的创建和渲染出于性能考虑，放在了C++层实现，整个VDOM的创建由Native通过执行template上的渲染函数来创建。\n\n```js\n((module) => {\n    module.exports = function (vm) {\n      const _vm_ = vm || this\n      return aiot.__ce__(\"div\", {\n        \"classList\": [\n          \"page\",\n          \"home-page\"\n        ]\n      }, [\n        aiot.__ci__({\n          shown: function () { return _vm_.status !== 0 }\n        },\n          function () {\n            return aiot.__ce__(\"text\", {\n              \"classList\": [\n                \"text-time\"\n              ],\n              \"value\": function () { return _vm_.$t(\"a.b\") }\n            })\n          }),\n        aiot.__ci__({\n          shown: function () { return _vm_.status === 0 }\n        },\n          function () {\n            return aiot.__ce__(\"div\", {\n              \"classList\": [\n                \"body\",\n                \"launch-panel\"\n              ]\n            }, [\n              aiot.__ce__(\"image\", {\n                \"src\": \"/Common/logo.png\",\n                \"classList\": [\n                  \"logo\"\n                ]\n              }),\n              aiot.__ce__(\"text\", {\n                \"classList\": [\n                  \"app-name\"\n                ],\n                \"value\": \"航旅纵横\"\n              })\n            ])\n          }),\n        aiot.__ci__({...}),\n        aiot.__ci__({...}),\n        ....\n      ])\n    }\n    /***/\n}),\n```\n\nTemplate本身是一个嵌套结构，它被翻译成了对aiot.__ce__, aiot__cf__, aiot.__ci__等函数的嵌套调用，嵌套调用的过程就是在Native层完成整个dom树构建的过程。\n\n我们来看__cf__对应的C++源码，它用于创建一个逻辑循环节点：\n\n\n\n```c++\nDomEntity* dom_create_for_fragment(jse_context_ref ctx, jse_value_t options, jse_value_t func) {\n    AIOTJS_LOG_DEBUG(\"dom_create_for_fragment ==================== \");\n\n\n   ....\n\n    //创建DomForFragment节点\n    DomForFragment *frag = new DomForFragment();\n    page->addDomEntity(frag);\n    \n    ...\n\n    // 保存JS端传入的表达式和render函数\n    jse_value_t exp = jse_get_object_property(ctx, options, \"exp\");\n    frag->setExpress(jse_dup_value(ctx, exp));\n    frag->setRenderFunction(jse_dup_value(ctx, func));\n    jse_free_value(ctx, exp);\n\n    //设置key或者$idx\n    ...\n\n    //创建effect函数\n    jse_value_t eff = create_effect(ctx, dom_update_for_fragment, 0);\n    AIOTJS_LOG_DEBUG(\"AddEffect for %d\", frag->uid());\n    //调用framework的effectWrap函数将effect函数传递给JS层保存\n    frag->addEffect(ctx, dom_effect(ctx, eff, frag->uid(), 0));\n    jse_free_value(ctx, eff);\n    ...\n    \n    // 返回创建好的frag vdom节点\n    return frag;\n}\n```\n\ndom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：\n\n\n\n```c++\nbool DomForFragment::render(jse_context_ref ctx) {\n    // 递归构造\n    jse_value_t exp_obj = jse_call(ctx, exp_, JSE_UNDEFINED, 0, {});\n    jse_value_t expValue = JSE_UNDEFINED;\n    const char* str_tid = nullptr;\n\n    // 调用JS端的求值函数获取for循环对应的list对象 expValue\n    expValue = get_from_js_expression();\n    \n    ....\n\n    //遍历数组\n    jse_size_t len = jse_get_array_length(ctx, expValue);\n    for(jse_size_t i = 0; i < len; i++) {\n        //为每个element分别调用render函数\n        jse_value_t idx = jse_uint(ctx, i);\n        jse_value_t args[] = {\n            idx,\n            item\n        };\n        jse_value_t res = jse_call(ctx, render_, JSE_UNDEFINED, 2, args);\n        if (jse_is_number(res)) {\n            unsigned int cid = jse_to_uint_def(ctx, res, 0);\n            DomEntity* ent = p->entity(cid);\n            AIOTJS_CHECK_NE(ent, nullptr);\n            ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n            addChild(ent);\n            if(!jse_is_undefined(tid_value)) {\n                jse_value_t v_tid = jse_dup_value(ctx, tid_value);\n                ent->setTid(v_tid);\n            }\n        } else if (jse_is_array(ctx, res)) {\n            jse_size_t childlen = jse_get_array_length(ctx, res);\n            for(size_t j=0; j<childlen; j++) {\n                unsigned int cid = jse_get_array_idx_uint(ctx, res, j, 0);\n                DomEntity* ent = p->entity(cid);\n                AIOTJS_CHECK_NE(ent, nullptr);\n                ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n                addChild(ent);\n            }\n        }\n        jse_free_value(ctx, res);\n        jse_free_value(ctx, idx);\n    }\n    jse_free_value(ctx, item);\n\n    jse_free_value(ctx, expValue);\n    AIOTJS_LOG_DEBUG(\"DomForFragment::build finished - <%u>\", uid());\n    // 只有初始化的时候返回true表示需要flush，其它情况下延迟flush\n    return isBindingEffect();\n}\n```\n\ndom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：\n\n```c++\nbool DomForFragment::render(jse_context_ref ctx) {\n    // 递归构造\n    jse_value_t exp_obj = jse_call(ctx, exp_, JSE_UNDEFINED, 0, {});\n    jse_value_t expValue = JSE_UNDEFINED;\n    const char* str_tid = nullptr;\n\n    // 调用JS端的求值函数获取for循环对应的list对象 expValue\n    expValue = get_from_js_expression();\n    \n    ....\n\n    //遍历数组\n    jse_size_t len = jse_get_array_length(ctx, expValue);\n    for(jse_size_t i = 0; i < len; i++) {\n        //为每个element分别调用render函数\n        jse_value_t idx = jse_uint(ctx, i);\n        jse_value_t args[] = {\n            idx,\n            item\n        };\n        jse_value_t res = jse_call(ctx, render_, JSE_UNDEFINED, 2, args);\n        if (jse_is_number(res)) {\n            unsigned int cid = jse_to_uint_def(ctx, res, 0);\n            DomEntity* ent = p->entity(cid);\n            AIOTJS_CHECK_NE(ent, nullptr);\n            ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n            addChild(ent);\n            if(!jse_is_undefined(tid_value)) {\n                jse_value_t v_tid = jse_dup_value(ctx, tid_value);\n                ent->setTid(v_tid);\n            }\n        } else if (jse_is_array(ctx, res)) {\n            jse_size_t childlen = jse_get_array_length(ctx, res);\n            for(size_t j=0; j<childlen; j++) {\n                unsigned int cid = jse_get_array_idx_uint(ctx, res, j, 0);\n                DomEntity* ent = p->entity(cid);\n                AIOTJS_CHECK_NE(ent, nullptr);\n                ent->setDiffOperationType(DomEntityDiffOperationType::Add);\n                addChild(ent);\n            }\n        }\n        jse_free_value(ctx, res);\n        jse_free_value(ctx, idx);\n    }\n    jse_free_value(ctx, item);\n\n    jse_free_value(ctx, expValue);\n    AIOTJS_LOG_DEBUG(\"DomForFragment::build finished - <%u>\", uid());\n    // 只有初始化的时候返回true表示需要flush，其它情况下延迟flush\n    return isBindingEffect();\n}\n```\n\n\n\n\n\n# 框架线程模型\n\n框架采用多线程模式，主要有如下两类线程：\n\n- 主线程：负责渲染，只有一个\n- 应用线程：负责执行JS代码，响应数据变更并更新vdom\n\n主线程和应用线程各启动一个uv loop进行消息处理，这两个线程通过libuv进行异步通信，主要有如下几种场景：\n\n1. 应用线程退出后异步通知主线程退出\n2. 应用线程更新vdom后异步通知主线程刷新ui\n3. 系统消息（如应用后台，应用退出等）由主线程发出，通过libuv转到应用线程执行\n\n# 渲染流程分析\n\n## 渲染流程图\n\n\n\n![33f7e704-ec72-4782-b8ff-1e58df0bef2d](https://raw.githubusercontent.com/why862555625/images/main/images/33f7e704-ec72-4782-b8ff-1e58df0bef2d.svg)\n\n\n\n## 渲染流程\n\n\n\n![6e8b9b04-5afd-47aa-9263-d3a379c1ac5b](https://raw.githubusercontent.com/why862555625/images/main/images/6e8b9b04-5afd-47aa-9263-d3a379c1ac5b.svg)\n\n\n\n# 框架核心部分介绍\n\n## 核心类图\n\n![a8dc8b49-a594-454c-9309-164e3269c5e9](https://raw.githubusercontent.com/why862555625/images/main/images/a8dc8b49-a594-454c-9309-164e3269c5e9.svg)\n\n解释：\n\n1. Framework是内部使用的框架类表示，FrameworkExt从Framework继承并添加了对vela系统的消息集成，在vela中使用FrameworkExt表示唯一的框架实例\n2. FrameworkExt中会维护多个app实例，框架支持多应用切换\n3. 每个app实例包含一个JS运行上下文环境和相关的libuv句柄，它们封装在RuntimeContxt中，作为Application的成员变量保存，即一个Application对象唯一对应一个js运行上下文。\n4. 一个Applicatoin对象可以拥有多个Page对象，一个Page对象表示一个可显示的页面，实际是一颗vdom树\n5. Page对象的继承关系较为复杂，框架支持自定义组件，从逻辑上讲，一个Component包含一颗vdom子树，它可以被任意组合来形成最终的完整vdom树。Page是最顶层的Component组件，唯一。从继承关系上讲，DomDocument这一层应该去掉，在添加子组件支持后它的语义已被Component取代，这层抽象当前代码中没有意义但仍然存在。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"c/vela快应用框架","published":1,"layout":"post","photos":[],"link":"","_id":"cli311udw00076ojn2j82djqf","content":"<p>Vela上快应用框架的一些实现原理和编程实践</p>\n<span id=\"more\"></span>\n\n<h1 id=\"快应用框架构成\"><a href=\"#快应用框架构成\" class=\"headerlink\" title=\"快应用框架构成\"></a>快应用框架构成</h1><p>一个简单的图用来描述快应用框架的模块构成，主要由Native（C++）部分和JS部分（framework.js）构成。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/48c4d276-9d71-439a-a720-7f268da27d85.svg\" alt=\"48c4d276-9d71-439a-a720-7f268da27d85\"></p>\n<p>在框架的C++代码中，最核心的两大组件就是 quickjs和libuv，分别提供JS运行环境和异步消息循环机制。框架还用到了一些其他的C/C++库如libcurl作为http客户端，rapidjson提供json解析能力等。</p>\n<p>下面给出项目目录结构：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── bin                                     # 生成目录</span><br><span class=\"line\">│   ├── app                                 # 测试应用</span><br><span class=\"line\">│   ├── apps.json                           # 应用配置文件</span><br><span class=\"line\">│   ├── font                                # 应用字体资源</span><br><span class=\"line\">│   ├── quickapp</span><br><span class=\"line\">│   └── vapp                                # 项目生成的可执行文件</span><br><span class=\"line\">├── build                                   # cmake构建目录</span><br><span class=\"line\">├── CMakeLists.txt</span><br><span class=\"line\">├── deps                                    # 依赖项目录</span><br><span class=\"line\">│   ├── curl                                # 多协议文件传输库</span><br><span class=\"line\">│   ├── ext                                 # 扩展，主要是lvgl非标准扩展</span><br><span class=\"line\">│   ├── FFmpeg                              # 音视频编解码库</span><br><span class=\"line\">│   ├── freetype2                           # 字体渲染库</span><br><span class=\"line\">│   ├── libuv                               # 跨平台事件驱动的消息循环库</span><br><span class=\"line\">│   ├── littlefs                            # lvgl相关</span><br><span class=\"line\">│   ├── lv_conf.h</span><br><span class=\"line\">│   ├── lv_drivers</span><br><span class=\"line\">│   ├── lv_drv_conf.h</span><br><span class=\"line\">│   ├── lv_ffmpeg_interface</span><br><span class=\"line\">│   ├── lv_fs_interface</span><br><span class=\"line\">│   ├── lvgl                                # lvgl 嵌入式gui库</span><br><span class=\"line\">│   ├── lv_lib_freetype                     # lvgl的freetype库</span><br><span class=\"line\">│   ├── lv_lib_png                          # lvgl的png解码库</span><br><span class=\"line\">│   ├── quickjs                             # 嵌入式JS引擎</span><br><span class=\"line\">│   ├── rapidjson                           # Json库</span><br><span class=\"line\">│   ├── tools                               # 工具目录，目前存放了Ffmpeg编译脚本</span><br><span class=\"line\">│   ├── unqlite                             # no sql数据库</span><br><span class=\"line\">│   ├── uvws                                # 基于libuv实现的websocket库</span><br><span class=\"line\">│   ├── wasm3                               # web assembely支持库</span><br><span class=\"line\">│   └── yoga                                # yoga排版引擎</span><br><span class=\"line\">├── Kconfig                                 # 供vela使用的kconfg配置</span><br><span class=\"line\">├── Make.defs</span><br><span class=\"line\">├── Makefile                                # vela makefile</span><br><span class=\"line\">├── README.md                               # 本文件</span><br><span class=\"line\">├── src                                     # 源码</span><br><span class=\"line\">│   ├── aiotjs.h</span><br><span class=\"line\">│   ├── ajs_vm.cpp</span><br><span class=\"line\">│   ├── ....</span><br><span class=\"line\">│   ├── framework                           # 框架源码</span><br><span class=\"line\">│   ├── gui                                 # GUI相关代码，包含lvgl渲染器实现</span><br><span class=\"line\">│   ├── jse                                 # JS Environment JS环境相关</span><br><span class=\"line\">│   └── Kconfig</span><br><span class=\"line\">├── tests                                   # 测试</span><br><span class=\"line\">│   ├── gui</span><br><span class=\"line\">│   ├── helpers</span><br><span class=\"line\">│   ├── run.js</span><br><span class=\"line\">│   ├── ... </span><br><span class=\"line\">│   ├── test-feature-vibrator.js</span><br><span class=\"line\">│   ├── wasi</span><br><span class=\"line\">│   └── wasm</span><br><span class=\"line\">└── toolchain                               # 交叉编译相关</span><br><span class=\"line\">    └── cross-m32.cmake                     # linux 32位构建</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"框架启动流程分析\"><a href=\"#框架启动流程分析\" class=\"headerlink\" title=\"框架启动流程分析\"></a>框架启动流程分析</h1><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/6ca169bc-84af-4252-9758-54c853feefef.svg\" alt=\"6ca169bc-84af-4252-9758-54c853feefef\"></p>\n<p>框架的整个启动和执行流程较为复杂，里面涉及到了JS和C++的互调用。</p>\n<p>启动流程以C++的入口函数为入口点，会初始化quickjs，创建app，启动子线程并加载Native module和内置JS框架代码。</p>\n<p>然后流程转交到JS，由JS通过调用初始化时注册的Native函数来完成整个快应用的加载。</p>\n<h1 id=\"VDOM渲染流程分析\"><a href=\"#VDOM渲染流程分析\" class=\"headerlink\" title=\"VDOM渲染流程分析\"></a>VDOM渲染流程分析</h1><p>VDOM的创建和渲染出于性能考虑，放在了C++层实现，整个VDOM的创建由Native通过执行template上的渲染函数来创建。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\">(<span class=\"params\"><span class=\"variable language_\">module</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span> (<span class=\"params\">vm</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _vm_ = vm || <span class=\"variable language_\">this</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;div&quot;</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;page&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;home-page&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;, [</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">shown</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> _vm_.<span class=\"property\">status</span> !== <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">          <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;text&quot;</span>, &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                <span class=\"string\">&quot;text-time&quot;</span></span><br><span class=\"line\">              ],</span><br><span class=\"line\">              <span class=\"string\">&quot;value&quot;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> _vm_.$t(<span class=\"string\">&quot;a.b&quot;</span>) &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">shown</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> _vm_.<span class=\"property\">status</span> === <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">          <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;div&quot;</span>, &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                <span class=\"string\">&quot;body&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;launch-panel&quot;</span></span><br><span class=\"line\">              ]</span><br><span class=\"line\">            &#125;, [</span><br><span class=\"line\">              aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;image&quot;</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;src&quot;</span>: <span class=\"string\">&quot;/Common/logo.png&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                  <span class=\"string\">&quot;logo&quot;</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">              &#125;),</span><br><span class=\"line\">              aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;text&quot;</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                  <span class=\"string\">&quot;app-name&quot;</span></span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;航旅纵横&quot;</span></span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            ])</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;...&#125;),</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;...&#125;),</span><br><span class=\"line\">        ....</span><br><span class=\"line\">      ])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/***/</span></span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n\n<p>Template本身是一个嵌套结构，它被翻译成了对aiot.<strong>ce</strong>, aiot__cf__, aiot.__ci__等函数的嵌套调用，嵌套调用的过程就是在Native层完成整个dom树构建的过程。</p>\n<p>我们来看__cf__对应的C++源码，它用于创建一个逻辑循环节点：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">DomEntity* <span class=\"title\">dom_create_for_fragment</span><span class=\"params\">(jse_context_ref ctx, <span class=\"type\">jse_value_t</span> options, <span class=\"type\">jse_value_t</span> func)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;dom_create_for_fragment ==================== &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   ....</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建DomForFragment节点</span></span><br><span class=\"line\">    DomForFragment *frag = <span class=\"keyword\">new</span> <span class=\"built_in\">DomForFragment</span>();</span><br><span class=\"line\">    page-&gt;<span class=\"built_in\">addDomEntity</span>(frag);</span><br><span class=\"line\">    </span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 保存JS端传入的表达式和render函数</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> exp = <span class=\"built_in\">jse_get_object_property</span>(ctx, options, <span class=\"string\">&quot;exp&quot;</span>);</span><br><span class=\"line\">    frag-&gt;<span class=\"built_in\">setExpress</span>(<span class=\"built_in\">jse_dup_value</span>(ctx, exp));</span><br><span class=\"line\">    frag-&gt;<span class=\"built_in\">setRenderFunction</span>(<span class=\"built_in\">jse_dup_value</span>(ctx, func));</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, exp);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//设置key或者$idx</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建effect函数</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> eff = <span class=\"built_in\">create_effect</span>(ctx, dom_update_for_fragment, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;AddEffect for %d&quot;</span>, frag-&gt;<span class=\"built_in\">uid</span>());</span><br><span class=\"line\">    <span class=\"comment\">//调用framework的effectWrap函数将effect函数传递给JS层保存</span></span><br><span class=\"line\">    frag-&gt;<span class=\"built_in\">addEffect</span>(ctx, <span class=\"built_in\">dom_effect</span>(ctx, eff, frag-&gt;<span class=\"built_in\">uid</span>(), <span class=\"number\">0</span>));</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, eff);</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 返回创建好的frag vdom节点</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> frag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>dom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">DomForFragment::render</span><span class=\"params\">(jse_context_ref ctx)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 递归构造</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> exp_obj = <span class=\"built_in\">jse_call</span>(ctx, exp_, JSE_UNDEFINED, <span class=\"number\">0</span>, &#123;&#125;);</span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> expValue = JSE_UNDEFINED;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span>* str_tid = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 调用JS端的求值函数获取for循环对应的list对象 expValue</span></span><br><span class=\"line\">    expValue = <span class=\"built_in\">get_from_js_expression</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    ....</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历数组</span></span><br><span class=\"line\">    <span class=\"type\">jse_size_t</span> len = <span class=\"built_in\">jse_get_array_length</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">jse_size_t</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//为每个element分别调用render函数</span></span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> idx = <span class=\"built_in\">jse_uint</span>(ctx, i);</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> args[] = &#123;</span><br><span class=\"line\">            idx,</span><br><span class=\"line\">            item</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> res = <span class=\"built_in\">jse_call</span>(ctx, render_, JSE_UNDEFINED, <span class=\"number\">2</span>, args);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_number</span>(res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_to_uint_def</span>(ctx, res, <span class=\"number\">0</span>);</span><br><span class=\"line\">            DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">            <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">            ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">            <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"built_in\">jse_is_undefined</span>(tid_value)) &#123;</span><br><span class=\"line\">                <span class=\"type\">jse_value_t</span> v_tid = <span class=\"built_in\">jse_dup_value</span>(ctx, tid_value);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setTid</span>(v_tid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_array</span>(ctx, res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">jse_size_t</span> childlen = <span class=\"built_in\">jse_get_array_length</span>(ctx, res);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">size_t</span> j=<span class=\"number\">0</span>; j&lt;childlen; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_get_array_idx_uint</span>(ctx, res, j, <span class=\"number\">0</span>);</span><br><span class=\"line\">                DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">                <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">                <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, res);</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, idx);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, item);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;DomForFragment::build finished - &lt;%u&gt;&quot;</span>, <span class=\"built_in\">uid</span>());</span><br><span class=\"line\">    <span class=\"comment\">// 只有初始化的时候返回true表示需要flush，其它情况下延迟flush</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">isBindingEffect</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>dom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">DomForFragment::render</span><span class=\"params\">(jse_context_ref ctx)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 递归构造</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> exp_obj = <span class=\"built_in\">jse_call</span>(ctx, exp_, JSE_UNDEFINED, <span class=\"number\">0</span>, &#123;&#125;);</span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> expValue = JSE_UNDEFINED;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span>* str_tid = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 调用JS端的求值函数获取for循环对应的list对象 expValue</span></span><br><span class=\"line\">    expValue = <span class=\"built_in\">get_from_js_expression</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    ....</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历数组</span></span><br><span class=\"line\">    <span class=\"type\">jse_size_t</span> len = <span class=\"built_in\">jse_get_array_length</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">jse_size_t</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//为每个element分别调用render函数</span></span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> idx = <span class=\"built_in\">jse_uint</span>(ctx, i);</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> args[] = &#123;</span><br><span class=\"line\">            idx,</span><br><span class=\"line\">            item</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> res = <span class=\"built_in\">jse_call</span>(ctx, render_, JSE_UNDEFINED, <span class=\"number\">2</span>, args);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_number</span>(res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_to_uint_def</span>(ctx, res, <span class=\"number\">0</span>);</span><br><span class=\"line\">            DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">            <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">            ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">            <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"built_in\">jse_is_undefined</span>(tid_value)) &#123;</span><br><span class=\"line\">                <span class=\"type\">jse_value_t</span> v_tid = <span class=\"built_in\">jse_dup_value</span>(ctx, tid_value);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setTid</span>(v_tid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_array</span>(ctx, res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">jse_size_t</span> childlen = <span class=\"built_in\">jse_get_array_length</span>(ctx, res);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">size_t</span> j=<span class=\"number\">0</span>; j&lt;childlen; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_get_array_idx_uint</span>(ctx, res, j, <span class=\"number\">0</span>);</span><br><span class=\"line\">                DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">                <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">                <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, res);</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, idx);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, item);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;DomForFragment::build finished - &lt;%u&gt;&quot;</span>, <span class=\"built_in\">uid</span>());</span><br><span class=\"line\">    <span class=\"comment\">// 只有初始化的时候返回true表示需要flush，其它情况下延迟flush</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">isBindingEffect</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"框架线程模型\"><a href=\"#框架线程模型\" class=\"headerlink\" title=\"框架线程模型\"></a>框架线程模型</h1><p>框架采用多线程模式，主要有如下两类线程：</p>\n<ul>\n<li>主线程：负责渲染，只有一个</li>\n<li>应用线程：负责执行JS代码，响应数据变更并更新vdom</li>\n</ul>\n<p>主线程和应用线程各启动一个uv loop进行消息处理，这两个线程通过libuv进行异步通信，主要有如下几种场景：</p>\n<ol>\n<li>应用线程退出后异步通知主线程退出</li>\n<li>应用线程更新vdom后异步通知主线程刷新ui</li>\n<li>系统消息（如应用后台，应用退出等）由主线程发出，通过libuv转到应用线程执行</li>\n</ol>\n<h1 id=\"渲染流程分析\"><a href=\"#渲染流程分析\" class=\"headerlink\" title=\"渲染流程分析\"></a>渲染流程分析</h1><h2 id=\"渲染流程图\"><a href=\"#渲染流程图\" class=\"headerlink\" title=\"渲染流程图\"></a>渲染流程图</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/33f7e704-ec72-4782-b8ff-1e58df0bef2d.svg\" alt=\"33f7e704-ec72-4782-b8ff-1e58df0bef2d\"></p>\n<h2 id=\"渲染流程\"><a href=\"#渲染流程\" class=\"headerlink\" title=\"渲染流程\"></a>渲染流程</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/6e8b9b04-5afd-47aa-9263-d3a379c1ac5b.svg\" alt=\"6e8b9b04-5afd-47aa-9263-d3a379c1ac5b\"></p>\n<h1 id=\"框架核心部分介绍\"><a href=\"#框架核心部分介绍\" class=\"headerlink\" title=\"框架核心部分介绍\"></a>框架核心部分介绍</h1><h2 id=\"核心类图\"><a href=\"#核心类图\" class=\"headerlink\" title=\"核心类图\"></a>核心类图</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/a8dc8b49-a594-454c-9309-164e3269c5e9.svg\" alt=\"a8dc8b49-a594-454c-9309-164e3269c5e9\"></p>\n<p>解释：</p>\n<ol>\n<li>Framework是内部使用的框架类表示，FrameworkExt从Framework继承并添加了对vela系统的消息集成，在vela中使用FrameworkExt表示唯一的框架实例</li>\n<li>FrameworkExt中会维护多个app实例，框架支持多应用切换</li>\n<li>每个app实例包含一个JS运行上下文环境和相关的libuv句柄，它们封装在RuntimeContxt中，作为Application的成员变量保存，即一个Application对象唯一对应一个js运行上下文。</li>\n<li>一个Applicatoin对象可以拥有多个Page对象，一个Page对象表示一个可显示的页面，实际是一颗vdom树</li>\n<li>Page对象的继承关系较为复杂，框架支持自定义组件，从逻辑上讲，一个Component包含一颗vdom子树，它可以被任意组合来形成最终的完整vdom树。Page是最顶层的Component组件，唯一。从继承关系上讲，DomDocument这一层应该去掉，在添加子组件支持后它的语义已被Component取代，这层抽象当前代码中没有意义但仍然存在。</li>\n</ol>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"excerpt":"<p>Vela上快应用框架的一些实现原理和编程实践</p>","more":"<h1 id=\"快应用框架构成\"><a href=\"#快应用框架构成\" class=\"headerlink\" title=\"快应用框架构成\"></a>快应用框架构成</h1><p>一个简单的图用来描述快应用框架的模块构成，主要由Native（C++）部分和JS部分（framework.js）构成。</p>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/48c4d276-9d71-439a-a720-7f268da27d85.svg\" alt=\"48c4d276-9d71-439a-a720-7f268da27d85\"></p>\n<p>在框架的C++代码中，最核心的两大组件就是 quickjs和libuv，分别提供JS运行环境和异步消息循环机制。框架还用到了一些其他的C/C++库如libcurl作为http客户端，rapidjson提供json解析能力等。</p>\n<p>下面给出项目目录结构：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── bin                                     # 生成目录</span><br><span class=\"line\">│   ├── app                                 # 测试应用</span><br><span class=\"line\">│   ├── apps.json                           # 应用配置文件</span><br><span class=\"line\">│   ├── font                                # 应用字体资源</span><br><span class=\"line\">│   ├── quickapp</span><br><span class=\"line\">│   └── vapp                                # 项目生成的可执行文件</span><br><span class=\"line\">├── build                                   # cmake构建目录</span><br><span class=\"line\">├── CMakeLists.txt</span><br><span class=\"line\">├── deps                                    # 依赖项目录</span><br><span class=\"line\">│   ├── curl                                # 多协议文件传输库</span><br><span class=\"line\">│   ├── ext                                 # 扩展，主要是lvgl非标准扩展</span><br><span class=\"line\">│   ├── FFmpeg                              # 音视频编解码库</span><br><span class=\"line\">│   ├── freetype2                           # 字体渲染库</span><br><span class=\"line\">│   ├── libuv                               # 跨平台事件驱动的消息循环库</span><br><span class=\"line\">│   ├── littlefs                            # lvgl相关</span><br><span class=\"line\">│   ├── lv_conf.h</span><br><span class=\"line\">│   ├── lv_drivers</span><br><span class=\"line\">│   ├── lv_drv_conf.h</span><br><span class=\"line\">│   ├── lv_ffmpeg_interface</span><br><span class=\"line\">│   ├── lv_fs_interface</span><br><span class=\"line\">│   ├── lvgl                                # lvgl 嵌入式gui库</span><br><span class=\"line\">│   ├── lv_lib_freetype                     # lvgl的freetype库</span><br><span class=\"line\">│   ├── lv_lib_png                          # lvgl的png解码库</span><br><span class=\"line\">│   ├── quickjs                             # 嵌入式JS引擎</span><br><span class=\"line\">│   ├── rapidjson                           # Json库</span><br><span class=\"line\">│   ├── tools                               # 工具目录，目前存放了Ffmpeg编译脚本</span><br><span class=\"line\">│   ├── unqlite                             # no sql数据库</span><br><span class=\"line\">│   ├── uvws                                # 基于libuv实现的websocket库</span><br><span class=\"line\">│   ├── wasm3                               # web assembely支持库</span><br><span class=\"line\">│   └── yoga                                # yoga排版引擎</span><br><span class=\"line\">├── Kconfig                                 # 供vela使用的kconfg配置</span><br><span class=\"line\">├── Make.defs</span><br><span class=\"line\">├── Makefile                                # vela makefile</span><br><span class=\"line\">├── README.md                               # 本文件</span><br><span class=\"line\">├── src                                     # 源码</span><br><span class=\"line\">│   ├── aiotjs.h</span><br><span class=\"line\">│   ├── ajs_vm.cpp</span><br><span class=\"line\">│   ├── ....</span><br><span class=\"line\">│   ├── framework                           # 框架源码</span><br><span class=\"line\">│   ├── gui                                 # GUI相关代码，包含lvgl渲染器实现</span><br><span class=\"line\">│   ├── jse                                 # JS Environment JS环境相关</span><br><span class=\"line\">│   └── Kconfig</span><br><span class=\"line\">├── tests                                   # 测试</span><br><span class=\"line\">│   ├── gui</span><br><span class=\"line\">│   ├── helpers</span><br><span class=\"line\">│   ├── run.js</span><br><span class=\"line\">│   ├── ... </span><br><span class=\"line\">│   ├── test-feature-vibrator.js</span><br><span class=\"line\">│   ├── wasi</span><br><span class=\"line\">│   └── wasm</span><br><span class=\"line\">└── toolchain                               # 交叉编译相关</span><br><span class=\"line\">    └── cross-m32.cmake                     # linux 32位构建</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"框架启动流程分析\"><a href=\"#框架启动流程分析\" class=\"headerlink\" title=\"框架启动流程分析\"></a>框架启动流程分析</h1><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/6ca169bc-84af-4252-9758-54c853feefef.svg\" alt=\"6ca169bc-84af-4252-9758-54c853feefef\"></p>\n<p>框架的整个启动和执行流程较为复杂，里面涉及到了JS和C++的互调用。</p>\n<p>启动流程以C++的入口函数为入口点，会初始化quickjs，创建app，启动子线程并加载Native module和内置JS框架代码。</p>\n<p>然后流程转交到JS，由JS通过调用初始化时注册的Native函数来完成整个快应用的加载。</p>\n<h1 id=\"VDOM渲染流程分析\"><a href=\"#VDOM渲染流程分析\" class=\"headerlink\" title=\"VDOM渲染流程分析\"></a>VDOM渲染流程分析</h1><p>VDOM的创建和渲染出于性能考虑，放在了C++层实现，整个VDOM的创建由Native通过执行template上的渲染函数来创建。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\">(<span class=\"params\"><span class=\"variable language_\">module</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span> (<span class=\"params\">vm</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _vm_ = vm || <span class=\"variable language_\">this</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;div&quot;</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">          <span class=\"string\">&quot;page&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;home-page&quot;</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;, [</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">shown</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> _vm_.<span class=\"property\">status</span> !== <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">          <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;text&quot;</span>, &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                <span class=\"string\">&quot;text-time&quot;</span></span><br><span class=\"line\">              ],</span><br><span class=\"line\">              <span class=\"string\">&quot;value&quot;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> _vm_.$t(<span class=\"string\">&quot;a.b&quot;</span>) &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">shown</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123; <span class=\"keyword\">return</span> _vm_.<span class=\"property\">status</span> === <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">          <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;div&quot;</span>, &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                <span class=\"string\">&quot;body&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;launch-panel&quot;</span></span><br><span class=\"line\">              ]</span><br><span class=\"line\">            &#125;, [</span><br><span class=\"line\">              aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;image&quot;</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;src&quot;</span>: <span class=\"string\">&quot;/Common/logo.png&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                  <span class=\"string\">&quot;logo&quot;</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">              &#125;),</span><br><span class=\"line\">              aiot.<span class=\"title function_\">__ce__</span>(<span class=\"string\">&quot;text&quot;</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;classList&quot;</span>: [</span><br><span class=\"line\">                  <span class=\"string\">&quot;app-name&quot;</span></span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;航旅纵横&quot;</span></span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            ])</span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;...&#125;),</span><br><span class=\"line\">        aiot.<span class=\"title function_\">__ci__</span>(&#123;...&#125;),</span><br><span class=\"line\">        ....</span><br><span class=\"line\">      ])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/***/</span></span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n\n<p>Template本身是一个嵌套结构，它被翻译成了对aiot.<strong>ce</strong>, aiot__cf__, aiot.__ci__等函数的嵌套调用，嵌套调用的过程就是在Native层完成整个dom树构建的过程。</p>\n<p>我们来看__cf__对应的C++源码，它用于创建一个逻辑循环节点：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">DomEntity* <span class=\"title\">dom_create_for_fragment</span><span class=\"params\">(jse_context_ref ctx, <span class=\"type\">jse_value_t</span> options, <span class=\"type\">jse_value_t</span> func)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;dom_create_for_fragment ==================== &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   ....</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建DomForFragment节点</span></span><br><span class=\"line\">    DomForFragment *frag = <span class=\"keyword\">new</span> <span class=\"built_in\">DomForFragment</span>();</span><br><span class=\"line\">    page-&gt;<span class=\"built_in\">addDomEntity</span>(frag);</span><br><span class=\"line\">    </span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 保存JS端传入的表达式和render函数</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> exp = <span class=\"built_in\">jse_get_object_property</span>(ctx, options, <span class=\"string\">&quot;exp&quot;</span>);</span><br><span class=\"line\">    frag-&gt;<span class=\"built_in\">setExpress</span>(<span class=\"built_in\">jse_dup_value</span>(ctx, exp));</span><br><span class=\"line\">    frag-&gt;<span class=\"built_in\">setRenderFunction</span>(<span class=\"built_in\">jse_dup_value</span>(ctx, func));</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, exp);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//设置key或者$idx</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建effect函数</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> eff = <span class=\"built_in\">create_effect</span>(ctx, dom_update_for_fragment, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;AddEffect for %d&quot;</span>, frag-&gt;<span class=\"built_in\">uid</span>());</span><br><span class=\"line\">    <span class=\"comment\">//调用framework的effectWrap函数将effect函数传递给JS层保存</span></span><br><span class=\"line\">    frag-&gt;<span class=\"built_in\">addEffect</span>(ctx, <span class=\"built_in\">dom_effect</span>(ctx, eff, frag-&gt;<span class=\"built_in\">uid</span>(), <span class=\"number\">0</span>));</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, eff);</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 返回创建好的frag vdom节点</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> frag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>dom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">DomForFragment::render</span><span class=\"params\">(jse_context_ref ctx)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 递归构造</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> exp_obj = <span class=\"built_in\">jse_call</span>(ctx, exp_, JSE_UNDEFINED, <span class=\"number\">0</span>, &#123;&#125;);</span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> expValue = JSE_UNDEFINED;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span>* str_tid = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 调用JS端的求值函数获取for循环对应的list对象 expValue</span></span><br><span class=\"line\">    expValue = <span class=\"built_in\">get_from_js_expression</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    ....</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历数组</span></span><br><span class=\"line\">    <span class=\"type\">jse_size_t</span> len = <span class=\"built_in\">jse_get_array_length</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">jse_size_t</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//为每个element分别调用render函数</span></span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> idx = <span class=\"built_in\">jse_uint</span>(ctx, i);</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> args[] = &#123;</span><br><span class=\"line\">            idx,</span><br><span class=\"line\">            item</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> res = <span class=\"built_in\">jse_call</span>(ctx, render_, JSE_UNDEFINED, <span class=\"number\">2</span>, args);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_number</span>(res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_to_uint_def</span>(ctx, res, <span class=\"number\">0</span>);</span><br><span class=\"line\">            DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">            <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">            ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">            <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"built_in\">jse_is_undefined</span>(tid_value)) &#123;</span><br><span class=\"line\">                <span class=\"type\">jse_value_t</span> v_tid = <span class=\"built_in\">jse_dup_value</span>(ctx, tid_value);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setTid</span>(v_tid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_array</span>(ctx, res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">jse_size_t</span> childlen = <span class=\"built_in\">jse_get_array_length</span>(ctx, res);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">size_t</span> j=<span class=\"number\">0</span>; j&lt;childlen; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_get_array_idx_uint</span>(ctx, res, j, <span class=\"number\">0</span>);</span><br><span class=\"line\">                DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">                <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">                <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, res);</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, idx);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, item);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;DomForFragment::build finished - &lt;%u&gt;&quot;</span>, <span class=\"built_in\">uid</span>());</span><br><span class=\"line\">    <span class=\"comment\">// 只有初始化的时候返回true表示需要flush，其它情况下延迟flush</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">isBindingEffect</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>dom_update_for_fragment是C++端的节点更新函数，它最终会触发节点的render函数更新子节点：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">DomForFragment::render</span><span class=\"params\">(jse_context_ref ctx)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 递归构造</span></span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> exp_obj = <span class=\"built_in\">jse_call</span>(ctx, exp_, JSE_UNDEFINED, <span class=\"number\">0</span>, &#123;&#125;);</span><br><span class=\"line\">    <span class=\"type\">jse_value_t</span> expValue = JSE_UNDEFINED;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span>* str_tid = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 调用JS端的求值函数获取for循环对应的list对象 expValue</span></span><br><span class=\"line\">    expValue = <span class=\"built_in\">get_from_js_expression</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    ....</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历数组</span></span><br><span class=\"line\">    <span class=\"type\">jse_size_t</span> len = <span class=\"built_in\">jse_get_array_length</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">jse_size_t</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//为每个element分别调用render函数</span></span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> idx = <span class=\"built_in\">jse_uint</span>(ctx, i);</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> args[] = &#123;</span><br><span class=\"line\">            idx,</span><br><span class=\"line\">            item</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"type\">jse_value_t</span> res = <span class=\"built_in\">jse_call</span>(ctx, render_, JSE_UNDEFINED, <span class=\"number\">2</span>, args);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_number</span>(res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_to_uint_def</span>(ctx, res, <span class=\"number\">0</span>);</span><br><span class=\"line\">            DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">            <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">            ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">            <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"built_in\">jse_is_undefined</span>(tid_value)) &#123;</span><br><span class=\"line\">                <span class=\"type\">jse_value_t</span> v_tid = <span class=\"built_in\">jse_dup_value</span>(ctx, tid_value);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setTid</span>(v_tid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">jse_is_array</span>(ctx, res)) &#123;</span><br><span class=\"line\">            <span class=\"type\">jse_size_t</span> childlen = <span class=\"built_in\">jse_get_array_length</span>(ctx, res);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">size_t</span> j=<span class=\"number\">0</span>; j&lt;childlen; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">unsigned</span> <span class=\"type\">int</span> cid = <span class=\"built_in\">jse_get_array_idx_uint</span>(ctx, res, j, <span class=\"number\">0</span>);</span><br><span class=\"line\">                DomEntity* ent = p-&gt;<span class=\"built_in\">entity</span>(cid);</span><br><span class=\"line\">                <span class=\"built_in\">AIOTJS_CHECK_NE</span>(ent, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">                ent-&gt;<span class=\"built_in\">setDiffOperationType</span>(DomEntityDiffOperationType::Add);</span><br><span class=\"line\">                <span class=\"built_in\">addChild</span>(ent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, res);</span><br><span class=\"line\">        <span class=\"built_in\">jse_free_value</span>(ctx, idx);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, item);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">jse_free_value</span>(ctx, expValue);</span><br><span class=\"line\">    <span class=\"built_in\">AIOTJS_LOG_DEBUG</span>(<span class=\"string\">&quot;DomForFragment::build finished - &lt;%u&gt;&quot;</span>, <span class=\"built_in\">uid</span>());</span><br><span class=\"line\">    <span class=\"comment\">// 只有初始化的时候返回true表示需要flush，其它情况下延迟flush</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">isBindingEffect</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"框架线程模型\"><a href=\"#框架线程模型\" class=\"headerlink\" title=\"框架线程模型\"></a>框架线程模型</h1><p>框架采用多线程模式，主要有如下两类线程：</p>\n<ul>\n<li>主线程：负责渲染，只有一个</li>\n<li>应用线程：负责执行JS代码，响应数据变更并更新vdom</li>\n</ul>\n<p>主线程和应用线程各启动一个uv loop进行消息处理，这两个线程通过libuv进行异步通信，主要有如下几种场景：</p>\n<ol>\n<li>应用线程退出后异步通知主线程退出</li>\n<li>应用线程更新vdom后异步通知主线程刷新ui</li>\n<li>系统消息（如应用后台，应用退出等）由主线程发出，通过libuv转到应用线程执行</li>\n</ol>\n<h1 id=\"渲染流程分析\"><a href=\"#渲染流程分析\" class=\"headerlink\" title=\"渲染流程分析\"></a>渲染流程分析</h1><h2 id=\"渲染流程图\"><a href=\"#渲染流程图\" class=\"headerlink\" title=\"渲染流程图\"></a>渲染流程图</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/33f7e704-ec72-4782-b8ff-1e58df0bef2d.svg\" alt=\"33f7e704-ec72-4782-b8ff-1e58df0bef2d\"></p>\n<h2 id=\"渲染流程\"><a href=\"#渲染流程\" class=\"headerlink\" title=\"渲染流程\"></a>渲染流程</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/6e8b9b04-5afd-47aa-9263-d3a379c1ac5b.svg\" alt=\"6e8b9b04-5afd-47aa-9263-d3a379c1ac5b\"></p>\n<h1 id=\"框架核心部分介绍\"><a href=\"#框架核心部分介绍\" class=\"headerlink\" title=\"框架核心部分介绍\"></a>框架核心部分介绍</h1><h2 id=\"核心类图\"><a href=\"#核心类图\" class=\"headerlink\" title=\"核心类图\"></a>核心类图</h2><p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/a8dc8b49-a594-454c-9309-164e3269c5e9.svg\" alt=\"a8dc8b49-a594-454c-9309-164e3269c5e9\"></p>\n<p>解释：</p>\n<ol>\n<li>Framework是内部使用的框架类表示，FrameworkExt从Framework继承并添加了对vela系统的消息集成，在vela中使用FrameworkExt表示唯一的框架实例</li>\n<li>FrameworkExt中会维护多个app实例，框架支持多应用切换</li>\n<li>每个app实例包含一个JS运行上下文环境和相关的libuv句柄，它们封装在RuntimeContxt中，作为Application的成员变量保存，即一个Application对象唯一对应一个js运行上下文。</li>\n<li>一个Applicatoin对象可以拥有多个Page对象，一个Page对象表示一个可显示的页面，实际是一颗vdom树</li>\n<li>Page对象的继承关系较为复杂，框架支持自定义组件，从逻辑上讲，一个Component包含一颗vdom子树，它可以被任意组合来形成最终的完整vdom树。Page是最顶层的Component组件，唯一。从继承关系上讲，DomDocument这一层应该去掉，在添加子组件支持后它的语义已被Component取代，这层抽象当前代码中没有意义但仍然存在。</li>\n</ol>"},{"title":"HTML & CSS复习","keywords":"前端,面试,HTML","description":"HTMLJS复习记录","top_img":"设置false不显示顶部图片","sticky":"数值越大越靠前","cover":"首页封面","comments":1,"abbrlink":"d9795d88","date":"2023-05-23T07:21:13.000Z","updated":"2023-05-23T07:21:13.000Z","_content":"\nJS复习记录\n\n<!-- more -->\n\n\n\n# HTML\n\n## 1. 语义化\n\n1. 语义化，指对文本内容的结构化（内容语义化），选择合乎语义的标签（代码语义化）。\n\n2. 语义化标签：`header`、`nav`、`main`、`article`、`section`、`aside`、`footer`等。\n\n3. 优点：\n\n   - 代码结构清晰，易于阅读，有利于维护\n   - 方便其他设备解析（如：屏幕阅读器）\n   - 有利于搜索引擎优化（SEO），搜索引擎爬虫会根据不同的标签来赋予不同的权重\n\n   \n\n## 2. script 标签中属性 async 和 defer 的区别？\n\n- `script` 会阻碍 HTML 解析，只有下载好并执行完脚本才会继续解析 HTML\n- `async script`：解析 HTML 的过程中会进行脚本的异步下载，下载成功后立马执行，因此有可能会阻断 HTML 的解析。多个脚本的执行顺序无法保证。\n- `defer script`：也是异步下载脚步，加载完成后，如果此时 HTML 还没有解析完，浏览器不会暂停解析去执行 JS 代码，而是等待 HTML 解析完毕再执行 JS 代码，如果存在多个 `defer script `标签，浏览器（IE9及以下除外）会保证它们按照在 HTML 中出现的顺序执行，不会破坏 JS 脚本之间的依赖关系。\n\n\n\n## 3. DOCTYPE 的作用是什么？\n\n`<!DOCTYE>` 声明一般位于文档的第一行，它的作用主要是告诉浏览器以什么样的模式来解析文档。一般指定了之后会以“标准模式”进行文档解析，否则就以“兼容模式”进行解析。\n\n- 在`标准模式`下，浏览器的解析规则都是按照最新的标准进行解析的。\n- 而在`兼容模式`下，浏览器会以向后兼容的方式来模拟老式浏览器的行为，以保证一些老的网站能正常访问。\n\n## 4. SGML、HTML、XML 和 XHTML的区别\n\n- `SGML` 是标准通用标记语言，是一种定义电子文档结构和描述其内容的国际标准语言，是所有电子文档标记语言的起源。\n- `HTML` 是超文本标记语言，主要是用于规定怎样显示网页。\n- `XML` 是可扩展标记语言，是未来网页语言的发展方向，XML 和 HTML 的最大区别就在于 XML 的标签是可以自己创建的，数量无限多，而 HTML 的标签都是固定的而且数量有限。\n- `XHTML` 也是现在基本上所有网页都在用的标记语言，他其实和 HTML 没什么本质的区别，标签都一样，用法也都一样，就是比 HTML 更严格，比如标签必须都用小写，标签都必须有闭合标签等。\n\n\n\n## 5. HTML5 有哪些新特性、移除了哪些元素？\n\nHTML5 现在已经不是 SGML 的子集，主要是关于图像、位置、存储、多任务等功能的增加。\n\n新增的：\n\n- 绘图 `canvas`\n- 用于媒介回放的 `video` 和 `audio` 元素\n- 本地离线存储 `localStorage` 、`sessionStorage`\n- 语义化更好的内容元素，如：`header`、`article`、`nav`、`section`、`footer`等\n- 表单控件 `calendar`、`date`、`time`、`email`、`url`、`search` 等\n- 新的技术 `webworker`、`websocket`\n- 新的文档属性 `document.visibilityState`\n\n移除的：\n\n- 纯表现的元素：`basefont`、`big`、`center`、`s`、`tt`、`u`\n- 对可用性产生负面影响的元素：`frame`、`frameset`、`noframes`\n\n\n\n\n\n## 6. 对浏览器内核的理解\n\n主要分为两部分：渲染引擎和JS引擎。\n\n- `渲染引擎`：其职责就是渲染，即在浏览器窗口中显示所请求的内容。默认情况下，渲染引擎可以显示 HTML、 XML 文档及图片，它也可以借助一些浏览器扩展插件显示其他类型数据，如：使用PDF阅读器插件可以显示 PDF 格式。\n- `JS引擎`：解析和执行 JavaScript 来实现网页的动态效果。\n\n最开始渲染引擎和JS引擎并没有区分的很明显，后来JS引擎越来越独立，内核就倾向于只指渲染引擎了\n\n\n\n## 7. 什么是文档的预解析？\n\n当执行 JavaScript 脚本时，另一个线程解析剩下的文档，并加载后面需要通过网络加载的资源。这种方式可以使资源并行加载，从而使整体速度更快。\n\n需要注意的是，预解析并不改变DOM树，它将这个工作交给主解析过程，自己只解析外部资源的引用，比如：外部脚本、样式及图片。\n\n\n\n## 8. 浏览器的渲染原理\n\n简记： 生成DOM树 --> 生成CSS规则树 --> 构建渲染树 --> 布局 --> 绘制\n\n1. 首先解析收到的文档，根据文档定义构建一颗 `DOM 树`，DOM 树是由 DOM 元素及属性节点组成的。\n2. 然后对 CSS 进行解析，生成一颗 `CSS 规则树`。\n3. 根据 DOM 树和 CSS 规则树构建`渲染树`。渲染树的节点被称为渲染对象，它是一个包含有颜色等属性的矩形。渲染对象和 DOM 元素相对应，但这种关系不是一对一的，不可见的 DOM 元素不会插入渲染树。还有一些 DOM 元素对应几个可见对象，它们一般是一些具有复杂结构的元素，无法用一个矩形来描述。\n4. 当渲染对象被创建并添加到树中，它们没有位置和大小，所以当浏览器生成渲染树以后，就会根据渲染树来进行`布局`（也可以叫做回流）。这一阶段浏览器要做的是计算出各个节点在页面中确切位置和大小。通常这一行为也被称为自动重排。\n5. 布局阶段结束后是`绘制`阶段，遍历渲染树并调用渲染对象的 paint 方法将它们的内容显示到屏幕上。值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎会尽早的将内容呈现到屏幕上，并不会等到所有 HMTL 内容都解析完之后再去构建和布局渲染树，它是解析完一部分内容就显示一部分内容，同时，可能还通过网络下载其余内容。\n\n\n\n## 9. 什么是回流和重绘？\n\n1.概念：\n\n- `回流`：当 DOM 的变化影响了元素的几何信息，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做回流（也可以叫做重排）。表现为重新生成布局，重新排列元素。\n- `重绘`：当一个元素的外观发生改变，重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变。\n\n2.常见引起回流和重绘的属性和方法：\n\n任何会改变元素几何信息（元素的位置和尺寸大小）的操作都会触发回流。\n\n- 添加或删除可见的 DOM 元素\n- 元素尺寸改变--边距、填充、宽度、高度\n- 浏览器尺寸改变-- resize 事件发生时\n- 计算 offsetWidth 和 offsetHeight 属性\n- 设置 style 属性的值\n- 修改网页默认字体\n\n**回流必定会发生重绘，重绘不一定会引发回流。**\n\n**回流所需的成本比重绘高得多**\n\n建议阅读文章：[你真的了解回流和重绘吗](https://juejin.cn/post/6844903779700047885)\n\n\n\n## 10. 如何减少回流？\n\n- 使用 transform 代替 top\n- 不要把节点的属性值放在一个循环里，当成循环里的变量\n- 不要使用 table 布局，可能很小的一个改动会造成整个 table 的重新布局\n- 把 DOM 离线后修改。如：使用 documentFragment 对象在内存里操作 DOM\n- 不要一条一条的修改样式，可以预先定义好 class，然后修改 DOM 的 className\n- 使用 absolute 或 fixed 使元素脱离文档流\n\n\n\n## 11. sessionStorage，localStorage 和 cookie 的区别\n\n1. 共同点：都是保存在浏览器端，且同源的\n2. 区别:\n\n- cookie 始终在同源的 http 请求中携带（即使不需要），即 cookie 在浏览器和服务器之间来回传递；而 sessionStorage 和 localStorage 不会自动把数据发送到服务器，仅在本地保存。cookie 还有路径（path）的概念，可以限制 cookie 只属于某个路径下。\n- 存储大小限制不同。cookie 不能超过 4K，因为每次 http 请求都会携带 cookie，所以 cookie 只适合保存很小的数据，如：会话标识。sessionStorage 和 localStorage 虽然也有存储大小限制，但比 cookie 大得多，可以达到 5M 或更大。\n- 数据有效期不同。sessionStorage 仅在当前浏览器窗口关闭之前有效；localStorage 始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie 只在设置的 cookie 过期时间之前有效。\n- 作用域不同。sessionStorage 不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 和 cookie 在所有同源窗口中都是共享的。\n\n\n\n## 12. iframe 有哪些优缺点？\n\n优点：\n\n1. iframe 能原封不动的把嵌入的网页展现出来。\n2. 如果有多个网页引用 iframe，只需修改 iframe 的内容，就可以实现调用每一个页面的更改，方便快捷。\n\n缺点：\n\n1. iframe 会阻塞主页面的 onload 事件。\n2. iframe 和主页面共享链接池，而浏览器对相同域的链接有限制，所以会影响页面的并行加载。\n3. 不利于 SEO，代码复杂，无法一下被搜索引擎索引到。\n4. iframe 框架页面会增加服务器的 http 请求，对于大型网站不可取。\n5. 很多移动设备无法完全显示框架，设备兼容性差。\n\n注意：通过动态给 iframe 添加 src 属性值，可解决前两个问题。\n\n\n\n## 13. 什么是 canvas，基本用法是什么？\n\ncanvas 元素是 HTML5 的一部分，允许脚步语言动态渲染位图像。canvas 由一个可控制区域 HTML 代码中的属性定义决定高度和宽度。JavaScript 代码可以访问该区域，通过一套完整的绘图功能类似于其他通用二维的 API，从而生成动态的图形。\n\n1. 创建 canvas 标签\n\n```arduino\narduino\n复制代码<canvas id=\"myCanvas\" width=\"150\" height=\"150\">该浏览器不支持canvas</canvas>\n```\n\n1. 渲染上下文\n\n```ini\nini复制代码var canvas = document.getElementById('myCanvas');\nvar ctx = canvas.getContext('2d');\n```\n\n代码第一行通过使用 `document.getElementById()` 方法获取 `<canvas>` 元素对应的 DOM 对象，然后可以通过使用它的 `getContext()` 方法来绘制上下文。 创建 canvas 标签时可以在标签内写上不支持的提示信息；也可以通过 `getContext()` 方法判读是否支持编程。\n\n```ini\nini复制代码var canvas = document.getElementById('myCanvas');\nif (canvas.getContext) {\n  var ctx = canvas.getContext('2d');\n  // other code\n} else {\n  // 不支持 canvas 的其他代码\n}\n```\n\n用途：\n\ncanvas 可用于游戏和图表（echarts.js、heightchart.js 都是基于 canvas 来绘图）制作。\n\n# CSS\n\n## 1. css3 有哪些新特性？\n\n- rgba 和 透明度\n- background-image、background-origin、background-size、background-repeat\n- word-wrap: break-word（对长的不可分割的单词换行）\n- 文字阴影 text-shadow\n- font-face属性，定义自己的字体\n- border-radius\n- 边框图片 border-image\n- 盒阴影 box-shadow\n- 媒体查询：定义多套 css，当浏览器尺寸发生变化时采用不同的属性\n\n## 2. style 标签写在 body 后与 body 前有什么区别？\n\n1. 写在 body 标签前有利于浏览器逐步渲染： resources downloading --> cssDOM + DOM --> Render Tree --> layout --> paint\n2. 写在 body 标签后： 由于浏览器以逐行方式对 HTML 文档进行解析，当解析到写在尾部的样式表（外联或写在 style 标签）会导致浏览器停止之前的渲染，等待加载且解析样式完成后重新渲染；在 windows 的 IE 下可能出现样式失效导致的页面闪烁问题。\n\n## 3. CSS选择器及优先级\n\n1. 选择器\n   - id选择器(#myid)\n   - 类选择器(.myclass)\n   - 属性选择器(a[rel=\"external\"])\n   - 伪类选择器(a:hover, li:nth-child)\n   - 标签选择器(div, h1, p)\n   - 伪元素选择器(p::first-line)\n   - 相邻选择器（h1 + p）\n   - 子选择器(ul > li)\n   - 后代选择器(li a)\n   - 通配符选择器(*)\n2. 优先级\n   - `!important`\n   - 内联样式（1000）\n   - ID选择器（0100）\n   - 类选择器 / 属性选择器 / 伪类选择器（0010）\n   - 标签选择器 / 伪元素选择器（0001）\n   - 关系选择器 / 通配符选择器（0000）\n\n带 !important 标记的样式属性优先级最高；样式表的来源相同时：`!important > 行内样式> ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性`\n\n## 4. rgba() 和 opacity 设置透明度的区别是什么？\n\nrgba() 和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的所有内容的透明度；而 rgba() 只作用于元素的颜色或其背景色，设置 rgba() 透明的元素的子元素不会继承透明效果。\n\n## 5. 浏览器是如何解析 css 选择器的？\n\n`从右向左解析的。`若从左向右匹配，发现不符合规则，需要回溯，会损失很多性能。若从右向左匹配，先找到所有的最后节点，对于每一个节点，向上寻找其父节点直到查找至根元素或满足条件的匹配规则，则结束这个分支的遍历。\n\n在 css 解析完毕后，需将解析结果 css 规则树和 DOM Tree 一起进行分析建立一颗 Render Tree，最终用来进行绘图。\n\n## 6. display: none 和 visibility: hidden 两者的区别\n\n1. display: none 隐藏后不占用文档流；而 visibility: hidden 会占用文档流。\n2. visibility 具有继承性，给父元素设置 \"visibility: hidden\"，子元素也会继承该属性，但如果重新给子元素设置 \"visibility: visible\"，则子元素又会显示出来。\n3. visibility: hidden 不会影响计数器的计数，虽然隐藏了，但计数器依然运行着。\n4. 在 css3 中 transition 支持 visibility 属性，但不支持 display。因为 transition 可以延迟执行，因此配合 visibility 使用纯 css 延时显示效果可以提高用户体验。\n5. display: none 会引起回流（重排）和重绘；visibility: hidden 会引起重绘。\n\n\n\n## 7. 简述 transform，transition，animation 的作用\n\n1. `transform`：描述了元素的静态样式，本身不会呈现动画效果，可以对元素进行旋转 rotate、扭曲 skew、缩放 scale 和移动 translate 以及矩阵变形 matrix。`transition` 和 `animation` 两者都能实现动画效果。`transform` 常配合`transition` 和 `animation` 使用。\n2. `transition`：样式过渡，从一种效果逐渐改变为另一种效果，它是一个合写属性。transition: transition-property  transition-duration  transition-timing-function  transition-delay 从左到右，依次是：过渡效果的css属性名称、过渡效果花费时间、速度曲线、过渡开始的延迟时间  `transition` 通常和 hover 等事件配合使用，需要由事件来触发过渡。\n3. `animation`：动画，有 `@keyframes` 来描述每一帧的样式。\n\n区别：\n\n- `transform` 仅描述元素的静态样式，常配合`transition` 和 `animation` 使用。\n- `transition` 通常和 hover 等事件配合使用；`animation` 是自发的，立即播放。\n- `animation` 可以设置循环次数。\n- `animation` 可以设置每一帧的样式和时间，`transition` 只能设置头尾。\n- `transition` 可以与 js 配合使用， js 设定要变化的样式，`transition` 负责动画效果。\n\n\n\n## 8. line-height 如何继承？\n\n- 父元素的 `line-height` 是具体数值，则子元素 `line-height` 继承该值。\n- 父元素的 `line-height` 是比例值，如'2'，则子元素 `line-height` 继承该比例。\n- 父元素的 `line-height` 是百分比，则子元素 `line-height` 继承的是父元素的 font-size * 百分比 计算出来的值。\n\n## 9. 如何让 chrome 支持 10px 的文字？\n\n1. font-size: 12px; -webkit-transform: scale(0.84);\n2. font-size: 20px; -webkit-transform: scale(0.5);\n\n## 10. position 属性的值有哪些？\n\n1. `static`：默认定位。元素出现在正常的文档流中（忽略top，bottom，left，right 或 z-index声明）\n2. `relative`：相对定位。如果对一个元素进行相对定位，将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，使其“相对于”它的起点进行移动。使用相对定位时，无论是否移动，元素仍然占据原来的空间；移动元素会导致其覆盖其他元素。\n3. `absolute`：绝对定位。元素的位置相对于最近的已定位的父元素，如果元素没有已定位的父元素，则相对于根元素（即 html 元素）定位。绝对定位的元素会脱离文档流，不占据空间，会与其他元素重叠。\n4. `fixed`：固定定位。元素的位置相对于浏览器窗口是固定位置，即使窗口滚动它也不会移动。固定定位的元素会脱离文档流，不占据空间，会与其他元素重叠。\n5. `sticky`：粘性定位。粘性定位可以被认为是相对定位和固定定位的混合，元素在跨越特定阈值前为相对定位，之后为固定定位。top，right，buttom，left，必须指定这四个阈值中的一个，才可以使粘性定位生效，否则行为与其相对定位相同。\n6. `inherit`：规定应该从父元素继承 position 属性的值。\n\n## 11. css 盒模型？\n\n- `标准盒模型`，width 指 content 部分的宽度，总宽度 = width + border(左右) + padding（左右）+ margin（左右）；高度同理。\n- `怪异盒模型（IE盒模型）`，width 指 content + border（左右） + padding（左右）三部分的宽度，因此，总宽度 = width + margin（左右）；高度同理。\n\n## 12. box-sizing 属性\n\n1. `content-box`，对应标准盒模型。\n2. `border-box`，IE盒模型。\n3. `inherit`，继承父元素的 box-sizing 值。\n\n## 13. BFC（块级格式上下文）\n\n1. 概念： BFC（Block Formatting Context），块级格式上下文。BFC 是 css 布局的一个概念，是一个独立的渲染区域，规定了内部 box 如何布局，且这个区域内的子元素不会影响到外面的元素。\n2. 布局规则：\n\n- 内部的 box 会在垂直方向一个接一个的放置\n- box 垂直方向的距离由 margin 决定，同一个 BFC 相邻的 box 的 margin 会发生重叠\n- 每个 box 的 margin 左边，与包含块的左 border 相接触（对于从左往右的格式化，否则相反）\n- BFC 的区域不会与 float box 重叠\n- BFC 是一个独立容器，容器内的子元素不会影响到外面的元素\n- 计算 BFC 高度时，浮动元素也参与计算高度\n\n1. 如何创建 BFC ？\n\n- 根元素，即 html 元素\n- float 值不为 none\n- position 值为 absolute 或 fixed\n- display 的值为 inline-block、tabl-cell、table-caption\n- overflow 的值不为 visible\n\n1. BFC 的使用场景\n\n- 去除边距重叠问题\n- 清除浮动（让父元素的高度包含子浮动元素）\n- 阻止元素被浮动元素覆盖\n\n\n\n## 14. 让一个元素水平/垂直居中\n\n1. 水平居中\n\n- 行内元素：`text-align: center;`\n- 对于确定宽度的块级元素\n  - width 和 margin 实现： `mragin: 0 auto;`\n  - 绝对定位和 margin-left 实现： `margin-left: (父width - 子 width)/2；`(前提是父元素相对定位)\n- 对于宽度未知的块级元素\n  - table 标签配合 margin 左右 auto 实现\n  - inline-block 实现：`display: inline-block; text-align: center;`\n  - 绝对定位和 transform 实现， translateX 可以移动本身元素的50%\n  - flex 布局 `justify-content: center`\n\n1. 垂直居中\n\n- 纯文字类，设置 line-height 等于 height\n- 子绝父相，子元素通过 margin 实现自适应居中\n- 子绝父相，通过位移 transform 实现\n- flex 布局，`align-items: center;`\n- table 布局，父级通过转换为表格形式，子级设置 vertical-align 实现\n\n## 15. flex 布局\n\nflex 布局，是一种弹性盒布局模型，给子元素提供了空间分布和对齐能力，由`container`（容器）及`item`（项目）组成。该布局模型提供了一种更加高效的方式来对容器中的项目进行布局、对齐和分配空间。适用于在不同尺寸的屏幕中创建可自动扩展和收缩布局，通常可用于`水平/垂直居中`，`两栏`、`三栏布局`等的场景里。\n\n其中`flex`属性是`flex-grow`，`flex-shrink`和`flex-basis`的简写，默认值为`0 1 auto`。**该属性有两个快捷值：`auto (1 1 auto)` 和 `none (0 0 auto)`。**\n\n- `flex-grow`：定义项目的放大比例，默认值为 0，即如果存在剩余空间，也不放大。如果所有项目的`flex-grow`属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的`flex-grow`属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。\n- `flex-shrink`：项目的缩小比例，默认为 1，即如果空间不足，项目将缩小。如果所有项目的`flex-shrink`属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的`flex-shrink`属性为 0，其他项目都为 1，则空间不足时，前者不缩小。\n- `flex-basis`：定义了在分配多余空间之前，项目占据的主轴空间。浏览器会根据该属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。当设置为 0 的是，会根据内容撑开。也可以设为跟`width`或`height`属性一样的值（比如 350px），则项目将占据固定空间。\n\n`flex`常用的属性值：\n\n- flex: 1 --> flex: 1 1 0%\n- flex: 2 --> flex: 2 1 0%\n- flex: auto --> flex: 1 1 auto\n- flex: none --> flex: 0 0 auto【常用于固定尺寸不伸缩】\n\n\n\n## 16. 清除浮动\n\n1. 直接把 \n\n   ```\n   <div style=\"clear: both;\"></div>\n   ```\n\n   作为最后一个子标签\n\n   - 优点：通俗易懂，容易掌握；\n   - 缺点：会添加较多无意义的空标签，有违结构与表现的分离，在后期维护中将是噩梦\n\n2. .clearfix { overflow: hidden; zoom: 1; }\n\n   - 优点：不存在结构和语义化问题，代码量极少\n   - 缺点：内容增多时容易造成不自动换行，导致内容被隐藏掉，无法显示需要溢出的元素\n\n3. 建立伪类选择器\n\n\n\n![image.png](https://raw.githubusercontent.com/why862555625/images/main/images/98e2353e3275475095bd26ecedfa32e9%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp)\n\n\n\n## 17. css 中优雅降级和渐进增强有什么区别？\n\n优雅降级和渐进增强是随着 css3 流出来的一个概念。由于低级浏览器不支持 css3， 但 css3 的效果又很优秀不忍放弃，所以在高级浏览器中使用 css3 ，而在低级浏览器只保证最基本的功能。二者最关键的区别是它们所侧重的内容，以及这种不同所造成的工作流程的差异。\n\n- `优雅降级`：一开始就构建完整的功能，然后针对浏览器测试和修复。\n- `渐进增强`：一开始就针对低版本浏览器进行构建页面，完成基本的功能，然后再针对高级浏览器进行效果、交互、追加功能以达到更好的体验。\n\n## 18. img 的 alt 和 title 的异同？实现图片懒加载的原理？\n\n- `alt`是图片加载失败时显示在网页上的替代文字；`title`是鼠标放在图片上面时显示的文字，是对图片的进一步描述和说明。\n- `alt`是 img 的必要属性；`title`不是。\n- 对于网站 SEO 优先来说，搜索引擎对图片意思的判断，主要是靠`alt`属性，所以在图片`alt`属性中以简要文字说明，同时包含关键字，也是页面优化的一部分。\n\n`懒加载原理`：先设置图片的 `data-set` 属性值（也可以是其他任意的，只要不发生 http 请求就可以，作用是为了存取值）为图片路径，由于不是 `src` 属性，故不会发生 http 请求。然后计算出页面的 scrollTop 的高度和浏览器的高度之和，如果图片距页面顶端距离小于前两者之和，说明图片要显示出来了，这时将 `data-set` 属性替换为 `src` 属性即可。\n\n## 19. css sprites （雪碧图/精灵图）\n\ncss sprites 就是把网页中一些小图片整合到一张图片文件中，再利用 css 的 background-image、background-repeat、background-position 的组合进行背景定位。\n\n优点： 减少图片体积；减少 http 请求次数\n\n缺点：维护比较麻烦；不能随便改变大小，会失真模糊\n\n## 20. 什么是字体图标？\n\n字体图标简单的说，就是一种特殊的字体，通过这种字体，显示给用户的就像一个个图片一样。字体图标最大的好处，在于它不会变形和加载速度快。字体图标可以像文字一样，随意通过 css 来控制它的大小和颜色，非常方便。\n\n## 21. 主流浏览器内核私有属性 css 前缀？\n\n- mozilla(firefox、flock等): -moz\n- webkit 内核(safari、chrome等): -webkit\n- opera 内核(opera浏览器): -o\n- trident 内核(ie 浏览器): -ms\n\n\n\n\n\n","source":"_posts/js/HTML&css复习.md","raw":"---\ntitle: HTML & CSS复习\ntags:\n  - 前端\n  - HTML\ncategories: HTML\nkeywords: '前端,面试,HTML'\ndescription: HTMLJS复习记录\ntop_img: 设置false不显示顶部图片\nsticky: 数值越大越靠前\ncover: 首页封面\ncomments: false评论\nabbrlink: d9795d88\ndate: 2023-05-23 15:21:13\nupdated: 2023-05-23 15:21:13\n---\n\nJS复习记录\n\n<!-- more -->\n\n\n\n# HTML\n\n## 1. 语义化\n\n1. 语义化，指对文本内容的结构化（内容语义化），选择合乎语义的标签（代码语义化）。\n\n2. 语义化标签：`header`、`nav`、`main`、`article`、`section`、`aside`、`footer`等。\n\n3. 优点：\n\n   - 代码结构清晰，易于阅读，有利于维护\n   - 方便其他设备解析（如：屏幕阅读器）\n   - 有利于搜索引擎优化（SEO），搜索引擎爬虫会根据不同的标签来赋予不同的权重\n\n   \n\n## 2. script 标签中属性 async 和 defer 的区别？\n\n- `script` 会阻碍 HTML 解析，只有下载好并执行完脚本才会继续解析 HTML\n- `async script`：解析 HTML 的过程中会进行脚本的异步下载，下载成功后立马执行，因此有可能会阻断 HTML 的解析。多个脚本的执行顺序无法保证。\n- `defer script`：也是异步下载脚步，加载完成后，如果此时 HTML 还没有解析完，浏览器不会暂停解析去执行 JS 代码，而是等待 HTML 解析完毕再执行 JS 代码，如果存在多个 `defer script `标签，浏览器（IE9及以下除外）会保证它们按照在 HTML 中出现的顺序执行，不会破坏 JS 脚本之间的依赖关系。\n\n\n\n## 3. DOCTYPE 的作用是什么？\n\n`<!DOCTYE>` 声明一般位于文档的第一行，它的作用主要是告诉浏览器以什么样的模式来解析文档。一般指定了之后会以“标准模式”进行文档解析，否则就以“兼容模式”进行解析。\n\n- 在`标准模式`下，浏览器的解析规则都是按照最新的标准进行解析的。\n- 而在`兼容模式`下，浏览器会以向后兼容的方式来模拟老式浏览器的行为，以保证一些老的网站能正常访问。\n\n## 4. SGML、HTML、XML 和 XHTML的区别\n\n- `SGML` 是标准通用标记语言，是一种定义电子文档结构和描述其内容的国际标准语言，是所有电子文档标记语言的起源。\n- `HTML` 是超文本标记语言，主要是用于规定怎样显示网页。\n- `XML` 是可扩展标记语言，是未来网页语言的发展方向，XML 和 HTML 的最大区别就在于 XML 的标签是可以自己创建的，数量无限多，而 HTML 的标签都是固定的而且数量有限。\n- `XHTML` 也是现在基本上所有网页都在用的标记语言，他其实和 HTML 没什么本质的区别，标签都一样，用法也都一样，就是比 HTML 更严格，比如标签必须都用小写，标签都必须有闭合标签等。\n\n\n\n## 5. HTML5 有哪些新特性、移除了哪些元素？\n\nHTML5 现在已经不是 SGML 的子集，主要是关于图像、位置、存储、多任务等功能的增加。\n\n新增的：\n\n- 绘图 `canvas`\n- 用于媒介回放的 `video` 和 `audio` 元素\n- 本地离线存储 `localStorage` 、`sessionStorage`\n- 语义化更好的内容元素，如：`header`、`article`、`nav`、`section`、`footer`等\n- 表单控件 `calendar`、`date`、`time`、`email`、`url`、`search` 等\n- 新的技术 `webworker`、`websocket`\n- 新的文档属性 `document.visibilityState`\n\n移除的：\n\n- 纯表现的元素：`basefont`、`big`、`center`、`s`、`tt`、`u`\n- 对可用性产生负面影响的元素：`frame`、`frameset`、`noframes`\n\n\n\n\n\n## 6. 对浏览器内核的理解\n\n主要分为两部分：渲染引擎和JS引擎。\n\n- `渲染引擎`：其职责就是渲染，即在浏览器窗口中显示所请求的内容。默认情况下，渲染引擎可以显示 HTML、 XML 文档及图片，它也可以借助一些浏览器扩展插件显示其他类型数据，如：使用PDF阅读器插件可以显示 PDF 格式。\n- `JS引擎`：解析和执行 JavaScript 来实现网页的动态效果。\n\n最开始渲染引擎和JS引擎并没有区分的很明显，后来JS引擎越来越独立，内核就倾向于只指渲染引擎了\n\n\n\n## 7. 什么是文档的预解析？\n\n当执行 JavaScript 脚本时，另一个线程解析剩下的文档，并加载后面需要通过网络加载的资源。这种方式可以使资源并行加载，从而使整体速度更快。\n\n需要注意的是，预解析并不改变DOM树，它将这个工作交给主解析过程，自己只解析外部资源的引用，比如：外部脚本、样式及图片。\n\n\n\n## 8. 浏览器的渲染原理\n\n简记： 生成DOM树 --> 生成CSS规则树 --> 构建渲染树 --> 布局 --> 绘制\n\n1. 首先解析收到的文档，根据文档定义构建一颗 `DOM 树`，DOM 树是由 DOM 元素及属性节点组成的。\n2. 然后对 CSS 进行解析，生成一颗 `CSS 规则树`。\n3. 根据 DOM 树和 CSS 规则树构建`渲染树`。渲染树的节点被称为渲染对象，它是一个包含有颜色等属性的矩形。渲染对象和 DOM 元素相对应，但这种关系不是一对一的，不可见的 DOM 元素不会插入渲染树。还有一些 DOM 元素对应几个可见对象，它们一般是一些具有复杂结构的元素，无法用一个矩形来描述。\n4. 当渲染对象被创建并添加到树中，它们没有位置和大小，所以当浏览器生成渲染树以后，就会根据渲染树来进行`布局`（也可以叫做回流）。这一阶段浏览器要做的是计算出各个节点在页面中确切位置和大小。通常这一行为也被称为自动重排。\n5. 布局阶段结束后是`绘制`阶段，遍历渲染树并调用渲染对象的 paint 方法将它们的内容显示到屏幕上。值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎会尽早的将内容呈现到屏幕上，并不会等到所有 HMTL 内容都解析完之后再去构建和布局渲染树，它是解析完一部分内容就显示一部分内容，同时，可能还通过网络下载其余内容。\n\n\n\n## 9. 什么是回流和重绘？\n\n1.概念：\n\n- `回流`：当 DOM 的变化影响了元素的几何信息，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做回流（也可以叫做重排）。表现为重新生成布局，重新排列元素。\n- `重绘`：当一个元素的外观发生改变，重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变。\n\n2.常见引起回流和重绘的属性和方法：\n\n任何会改变元素几何信息（元素的位置和尺寸大小）的操作都会触发回流。\n\n- 添加或删除可见的 DOM 元素\n- 元素尺寸改变--边距、填充、宽度、高度\n- 浏览器尺寸改变-- resize 事件发生时\n- 计算 offsetWidth 和 offsetHeight 属性\n- 设置 style 属性的值\n- 修改网页默认字体\n\n**回流必定会发生重绘，重绘不一定会引发回流。**\n\n**回流所需的成本比重绘高得多**\n\n建议阅读文章：[你真的了解回流和重绘吗](https://juejin.cn/post/6844903779700047885)\n\n\n\n## 10. 如何减少回流？\n\n- 使用 transform 代替 top\n- 不要把节点的属性值放在一个循环里，当成循环里的变量\n- 不要使用 table 布局，可能很小的一个改动会造成整个 table 的重新布局\n- 把 DOM 离线后修改。如：使用 documentFragment 对象在内存里操作 DOM\n- 不要一条一条的修改样式，可以预先定义好 class，然后修改 DOM 的 className\n- 使用 absolute 或 fixed 使元素脱离文档流\n\n\n\n## 11. sessionStorage，localStorage 和 cookie 的区别\n\n1. 共同点：都是保存在浏览器端，且同源的\n2. 区别:\n\n- cookie 始终在同源的 http 请求中携带（即使不需要），即 cookie 在浏览器和服务器之间来回传递；而 sessionStorage 和 localStorage 不会自动把数据发送到服务器，仅在本地保存。cookie 还有路径（path）的概念，可以限制 cookie 只属于某个路径下。\n- 存储大小限制不同。cookie 不能超过 4K，因为每次 http 请求都会携带 cookie，所以 cookie 只适合保存很小的数据，如：会话标识。sessionStorage 和 localStorage 虽然也有存储大小限制，但比 cookie 大得多，可以达到 5M 或更大。\n- 数据有效期不同。sessionStorage 仅在当前浏览器窗口关闭之前有效；localStorage 始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie 只在设置的 cookie 过期时间之前有效。\n- 作用域不同。sessionStorage 不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 和 cookie 在所有同源窗口中都是共享的。\n\n\n\n## 12. iframe 有哪些优缺点？\n\n优点：\n\n1. iframe 能原封不动的把嵌入的网页展现出来。\n2. 如果有多个网页引用 iframe，只需修改 iframe 的内容，就可以实现调用每一个页面的更改，方便快捷。\n\n缺点：\n\n1. iframe 会阻塞主页面的 onload 事件。\n2. iframe 和主页面共享链接池，而浏览器对相同域的链接有限制，所以会影响页面的并行加载。\n3. 不利于 SEO，代码复杂，无法一下被搜索引擎索引到。\n4. iframe 框架页面会增加服务器的 http 请求，对于大型网站不可取。\n5. 很多移动设备无法完全显示框架，设备兼容性差。\n\n注意：通过动态给 iframe 添加 src 属性值，可解决前两个问题。\n\n\n\n## 13. 什么是 canvas，基本用法是什么？\n\ncanvas 元素是 HTML5 的一部分，允许脚步语言动态渲染位图像。canvas 由一个可控制区域 HTML 代码中的属性定义决定高度和宽度。JavaScript 代码可以访问该区域，通过一套完整的绘图功能类似于其他通用二维的 API，从而生成动态的图形。\n\n1. 创建 canvas 标签\n\n```arduino\narduino\n复制代码<canvas id=\"myCanvas\" width=\"150\" height=\"150\">该浏览器不支持canvas</canvas>\n```\n\n1. 渲染上下文\n\n```ini\nini复制代码var canvas = document.getElementById('myCanvas');\nvar ctx = canvas.getContext('2d');\n```\n\n代码第一行通过使用 `document.getElementById()` 方法获取 `<canvas>` 元素对应的 DOM 对象，然后可以通过使用它的 `getContext()` 方法来绘制上下文。 创建 canvas 标签时可以在标签内写上不支持的提示信息；也可以通过 `getContext()` 方法判读是否支持编程。\n\n```ini\nini复制代码var canvas = document.getElementById('myCanvas');\nif (canvas.getContext) {\n  var ctx = canvas.getContext('2d');\n  // other code\n} else {\n  // 不支持 canvas 的其他代码\n}\n```\n\n用途：\n\ncanvas 可用于游戏和图表（echarts.js、heightchart.js 都是基于 canvas 来绘图）制作。\n\n# CSS\n\n## 1. css3 有哪些新特性？\n\n- rgba 和 透明度\n- background-image、background-origin、background-size、background-repeat\n- word-wrap: break-word（对长的不可分割的单词换行）\n- 文字阴影 text-shadow\n- font-face属性，定义自己的字体\n- border-radius\n- 边框图片 border-image\n- 盒阴影 box-shadow\n- 媒体查询：定义多套 css，当浏览器尺寸发生变化时采用不同的属性\n\n## 2. style 标签写在 body 后与 body 前有什么区别？\n\n1. 写在 body 标签前有利于浏览器逐步渲染： resources downloading --> cssDOM + DOM --> Render Tree --> layout --> paint\n2. 写在 body 标签后： 由于浏览器以逐行方式对 HTML 文档进行解析，当解析到写在尾部的样式表（外联或写在 style 标签）会导致浏览器停止之前的渲染，等待加载且解析样式完成后重新渲染；在 windows 的 IE 下可能出现样式失效导致的页面闪烁问题。\n\n## 3. CSS选择器及优先级\n\n1. 选择器\n   - id选择器(#myid)\n   - 类选择器(.myclass)\n   - 属性选择器(a[rel=\"external\"])\n   - 伪类选择器(a:hover, li:nth-child)\n   - 标签选择器(div, h1, p)\n   - 伪元素选择器(p::first-line)\n   - 相邻选择器（h1 + p）\n   - 子选择器(ul > li)\n   - 后代选择器(li a)\n   - 通配符选择器(*)\n2. 优先级\n   - `!important`\n   - 内联样式（1000）\n   - ID选择器（0100）\n   - 类选择器 / 属性选择器 / 伪类选择器（0010）\n   - 标签选择器 / 伪元素选择器（0001）\n   - 关系选择器 / 通配符选择器（0000）\n\n带 !important 标记的样式属性优先级最高；样式表的来源相同时：`!important > 行内样式> ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性`\n\n## 4. rgba() 和 opacity 设置透明度的区别是什么？\n\nrgba() 和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的所有内容的透明度；而 rgba() 只作用于元素的颜色或其背景色，设置 rgba() 透明的元素的子元素不会继承透明效果。\n\n## 5. 浏览器是如何解析 css 选择器的？\n\n`从右向左解析的。`若从左向右匹配，发现不符合规则，需要回溯，会损失很多性能。若从右向左匹配，先找到所有的最后节点，对于每一个节点，向上寻找其父节点直到查找至根元素或满足条件的匹配规则，则结束这个分支的遍历。\n\n在 css 解析完毕后，需将解析结果 css 规则树和 DOM Tree 一起进行分析建立一颗 Render Tree，最终用来进行绘图。\n\n## 6. display: none 和 visibility: hidden 两者的区别\n\n1. display: none 隐藏后不占用文档流；而 visibility: hidden 会占用文档流。\n2. visibility 具有继承性，给父元素设置 \"visibility: hidden\"，子元素也会继承该属性，但如果重新给子元素设置 \"visibility: visible\"，则子元素又会显示出来。\n3. visibility: hidden 不会影响计数器的计数，虽然隐藏了，但计数器依然运行着。\n4. 在 css3 中 transition 支持 visibility 属性，但不支持 display。因为 transition 可以延迟执行，因此配合 visibility 使用纯 css 延时显示效果可以提高用户体验。\n5. display: none 会引起回流（重排）和重绘；visibility: hidden 会引起重绘。\n\n\n\n## 7. 简述 transform，transition，animation 的作用\n\n1. `transform`：描述了元素的静态样式，本身不会呈现动画效果，可以对元素进行旋转 rotate、扭曲 skew、缩放 scale 和移动 translate 以及矩阵变形 matrix。`transition` 和 `animation` 两者都能实现动画效果。`transform` 常配合`transition` 和 `animation` 使用。\n2. `transition`：样式过渡，从一种效果逐渐改变为另一种效果，它是一个合写属性。transition: transition-property  transition-duration  transition-timing-function  transition-delay 从左到右，依次是：过渡效果的css属性名称、过渡效果花费时间、速度曲线、过渡开始的延迟时间  `transition` 通常和 hover 等事件配合使用，需要由事件来触发过渡。\n3. `animation`：动画，有 `@keyframes` 来描述每一帧的样式。\n\n区别：\n\n- `transform` 仅描述元素的静态样式，常配合`transition` 和 `animation` 使用。\n- `transition` 通常和 hover 等事件配合使用；`animation` 是自发的，立即播放。\n- `animation` 可以设置循环次数。\n- `animation` 可以设置每一帧的样式和时间，`transition` 只能设置头尾。\n- `transition` 可以与 js 配合使用， js 设定要变化的样式，`transition` 负责动画效果。\n\n\n\n## 8. line-height 如何继承？\n\n- 父元素的 `line-height` 是具体数值，则子元素 `line-height` 继承该值。\n- 父元素的 `line-height` 是比例值，如'2'，则子元素 `line-height` 继承该比例。\n- 父元素的 `line-height` 是百分比，则子元素 `line-height` 继承的是父元素的 font-size * 百分比 计算出来的值。\n\n## 9. 如何让 chrome 支持 10px 的文字？\n\n1. font-size: 12px; -webkit-transform: scale(0.84);\n2. font-size: 20px; -webkit-transform: scale(0.5);\n\n## 10. position 属性的值有哪些？\n\n1. `static`：默认定位。元素出现在正常的文档流中（忽略top，bottom，left，right 或 z-index声明）\n2. `relative`：相对定位。如果对一个元素进行相对定位，将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，使其“相对于”它的起点进行移动。使用相对定位时，无论是否移动，元素仍然占据原来的空间；移动元素会导致其覆盖其他元素。\n3. `absolute`：绝对定位。元素的位置相对于最近的已定位的父元素，如果元素没有已定位的父元素，则相对于根元素（即 html 元素）定位。绝对定位的元素会脱离文档流，不占据空间，会与其他元素重叠。\n4. `fixed`：固定定位。元素的位置相对于浏览器窗口是固定位置，即使窗口滚动它也不会移动。固定定位的元素会脱离文档流，不占据空间，会与其他元素重叠。\n5. `sticky`：粘性定位。粘性定位可以被认为是相对定位和固定定位的混合，元素在跨越特定阈值前为相对定位，之后为固定定位。top，right，buttom，left，必须指定这四个阈值中的一个，才可以使粘性定位生效，否则行为与其相对定位相同。\n6. `inherit`：规定应该从父元素继承 position 属性的值。\n\n## 11. css 盒模型？\n\n- `标准盒模型`，width 指 content 部分的宽度，总宽度 = width + border(左右) + padding（左右）+ margin（左右）；高度同理。\n- `怪异盒模型（IE盒模型）`，width 指 content + border（左右） + padding（左右）三部分的宽度，因此，总宽度 = width + margin（左右）；高度同理。\n\n## 12. box-sizing 属性\n\n1. `content-box`，对应标准盒模型。\n2. `border-box`，IE盒模型。\n3. `inherit`，继承父元素的 box-sizing 值。\n\n## 13. BFC（块级格式上下文）\n\n1. 概念： BFC（Block Formatting Context），块级格式上下文。BFC 是 css 布局的一个概念，是一个独立的渲染区域，规定了内部 box 如何布局，且这个区域内的子元素不会影响到外面的元素。\n2. 布局规则：\n\n- 内部的 box 会在垂直方向一个接一个的放置\n- box 垂直方向的距离由 margin 决定，同一个 BFC 相邻的 box 的 margin 会发生重叠\n- 每个 box 的 margin 左边，与包含块的左 border 相接触（对于从左往右的格式化，否则相反）\n- BFC 的区域不会与 float box 重叠\n- BFC 是一个独立容器，容器内的子元素不会影响到外面的元素\n- 计算 BFC 高度时，浮动元素也参与计算高度\n\n1. 如何创建 BFC ？\n\n- 根元素，即 html 元素\n- float 值不为 none\n- position 值为 absolute 或 fixed\n- display 的值为 inline-block、tabl-cell、table-caption\n- overflow 的值不为 visible\n\n1. BFC 的使用场景\n\n- 去除边距重叠问题\n- 清除浮动（让父元素的高度包含子浮动元素）\n- 阻止元素被浮动元素覆盖\n\n\n\n## 14. 让一个元素水平/垂直居中\n\n1. 水平居中\n\n- 行内元素：`text-align: center;`\n- 对于确定宽度的块级元素\n  - width 和 margin 实现： `mragin: 0 auto;`\n  - 绝对定位和 margin-left 实现： `margin-left: (父width - 子 width)/2；`(前提是父元素相对定位)\n- 对于宽度未知的块级元素\n  - table 标签配合 margin 左右 auto 实现\n  - inline-block 实现：`display: inline-block; text-align: center;`\n  - 绝对定位和 transform 实现， translateX 可以移动本身元素的50%\n  - flex 布局 `justify-content: center`\n\n1. 垂直居中\n\n- 纯文字类，设置 line-height 等于 height\n- 子绝父相，子元素通过 margin 实现自适应居中\n- 子绝父相，通过位移 transform 实现\n- flex 布局，`align-items: center;`\n- table 布局，父级通过转换为表格形式，子级设置 vertical-align 实现\n\n## 15. flex 布局\n\nflex 布局，是一种弹性盒布局模型，给子元素提供了空间分布和对齐能力，由`container`（容器）及`item`（项目）组成。该布局模型提供了一种更加高效的方式来对容器中的项目进行布局、对齐和分配空间。适用于在不同尺寸的屏幕中创建可自动扩展和收缩布局，通常可用于`水平/垂直居中`，`两栏`、`三栏布局`等的场景里。\n\n其中`flex`属性是`flex-grow`，`flex-shrink`和`flex-basis`的简写，默认值为`0 1 auto`。**该属性有两个快捷值：`auto (1 1 auto)` 和 `none (0 0 auto)`。**\n\n- `flex-grow`：定义项目的放大比例，默认值为 0，即如果存在剩余空间，也不放大。如果所有项目的`flex-grow`属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的`flex-grow`属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。\n- `flex-shrink`：项目的缩小比例，默认为 1，即如果空间不足，项目将缩小。如果所有项目的`flex-shrink`属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的`flex-shrink`属性为 0，其他项目都为 1，则空间不足时，前者不缩小。\n- `flex-basis`：定义了在分配多余空间之前，项目占据的主轴空间。浏览器会根据该属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。当设置为 0 的是，会根据内容撑开。也可以设为跟`width`或`height`属性一样的值（比如 350px），则项目将占据固定空间。\n\n`flex`常用的属性值：\n\n- flex: 1 --> flex: 1 1 0%\n- flex: 2 --> flex: 2 1 0%\n- flex: auto --> flex: 1 1 auto\n- flex: none --> flex: 0 0 auto【常用于固定尺寸不伸缩】\n\n\n\n## 16. 清除浮动\n\n1. 直接把 \n\n   ```\n   <div style=\"clear: both;\"></div>\n   ```\n\n   作为最后一个子标签\n\n   - 优点：通俗易懂，容易掌握；\n   - 缺点：会添加较多无意义的空标签，有违结构与表现的分离，在后期维护中将是噩梦\n\n2. .clearfix { overflow: hidden; zoom: 1; }\n\n   - 优点：不存在结构和语义化问题，代码量极少\n   - 缺点：内容增多时容易造成不自动换行，导致内容被隐藏掉，无法显示需要溢出的元素\n\n3. 建立伪类选择器\n\n\n\n![image.png](https://raw.githubusercontent.com/why862555625/images/main/images/98e2353e3275475095bd26ecedfa32e9%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp)\n\n\n\n## 17. css 中优雅降级和渐进增强有什么区别？\n\n优雅降级和渐进增强是随着 css3 流出来的一个概念。由于低级浏览器不支持 css3， 但 css3 的效果又很优秀不忍放弃，所以在高级浏览器中使用 css3 ，而在低级浏览器只保证最基本的功能。二者最关键的区别是它们所侧重的内容，以及这种不同所造成的工作流程的差异。\n\n- `优雅降级`：一开始就构建完整的功能，然后针对浏览器测试和修复。\n- `渐进增强`：一开始就针对低版本浏览器进行构建页面，完成基本的功能，然后再针对高级浏览器进行效果、交互、追加功能以达到更好的体验。\n\n## 18. img 的 alt 和 title 的异同？实现图片懒加载的原理？\n\n- `alt`是图片加载失败时显示在网页上的替代文字；`title`是鼠标放在图片上面时显示的文字，是对图片的进一步描述和说明。\n- `alt`是 img 的必要属性；`title`不是。\n- 对于网站 SEO 优先来说，搜索引擎对图片意思的判断，主要是靠`alt`属性，所以在图片`alt`属性中以简要文字说明，同时包含关键字，也是页面优化的一部分。\n\n`懒加载原理`：先设置图片的 `data-set` 属性值（也可以是其他任意的，只要不发生 http 请求就可以，作用是为了存取值）为图片路径，由于不是 `src` 属性，故不会发生 http 请求。然后计算出页面的 scrollTop 的高度和浏览器的高度之和，如果图片距页面顶端距离小于前两者之和，说明图片要显示出来了，这时将 `data-set` 属性替换为 `src` 属性即可。\n\n## 19. css sprites （雪碧图/精灵图）\n\ncss sprites 就是把网页中一些小图片整合到一张图片文件中，再利用 css 的 background-image、background-repeat、background-position 的组合进行背景定位。\n\n优点： 减少图片体积；减少 http 请求次数\n\n缺点：维护比较麻烦；不能随便改变大小，会失真模糊\n\n## 20. 什么是字体图标？\n\n字体图标简单的说，就是一种特殊的字体，通过这种字体，显示给用户的就像一个个图片一样。字体图标最大的好处，在于它不会变形和加载速度快。字体图标可以像文字一样，随意通过 css 来控制它的大小和颜色，非常方便。\n\n## 21. 主流浏览器内核私有属性 css 前缀？\n\n- mozilla(firefox、flock等): -moz\n- webkit 内核(safari、chrome等): -webkit\n- opera 内核(opera浏览器): -o\n- trident 内核(ie 浏览器): -ms\n\n\n\n\n\n","slug":"js/HTML&css复习","published":1,"layout":"post","photos":[],"link":"","_id":"cli311ue900166ojn8jsb45pn","content":"<p>JS复习记录</p>\n<span id=\"more\"></span>\n\n\n\n<h1 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h1><h2 id=\"1-语义化\"><a href=\"#1-语义化\" class=\"headerlink\" title=\"1. 语义化\"></a>1. 语义化</h2><ol>\n<li><p>语义化，指对文本内容的结构化（内容语义化），选择合乎语义的标签（代码语义化）。</p>\n</li>\n<li><p>语义化标签：<code>header</code>、<code>nav</code>、<code>main</code>、<code>article</code>、<code>section</code>、<code>aside</code>、<code>footer</code>等。</p>\n</li>\n<li><p>优点：</p>\n<ul>\n<li>代码结构清晰，易于阅读，有利于维护</li>\n<li>方便其他设备解析（如：屏幕阅读器）</li>\n<li>有利于搜索引擎优化（SEO），搜索引擎爬虫会根据不同的标签来赋予不同的权重</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-script-标签中属性-async-和-defer-的区别？\"><a href=\"#2-script-标签中属性-async-和-defer-的区别？\" class=\"headerlink\" title=\"2. script 标签中属性 async 和 defer 的区别？\"></a>2. script 标签中属性 async 和 defer 的区别？</h2><ul>\n<li><code>script</code> 会阻碍 HTML 解析，只有下载好并执行完脚本才会继续解析 HTML</li>\n<li><code>async script</code>：解析 HTML 的过程中会进行脚本的异步下载，下载成功后立马执行，因此有可能会阻断 HTML 的解析。多个脚本的执行顺序无法保证。</li>\n<li><code>defer script</code>：也是异步下载脚步，加载完成后，如果此时 HTML 还没有解析完，浏览器不会暂停解析去执行 JS 代码，而是等待 HTML 解析完毕再执行 JS 代码，如果存在多个 <code>defer script </code>标签，浏览器（IE9及以下除外）会保证它们按照在 HTML 中出现的顺序执行，不会破坏 JS 脚本之间的依赖关系。</li>\n</ul>\n<h2 id=\"3-DOCTYPE-的作用是什么？\"><a href=\"#3-DOCTYPE-的作用是什么？\" class=\"headerlink\" title=\"3. DOCTYPE 的作用是什么？\"></a>3. DOCTYPE 的作用是什么？</h2><p><code>&lt;!DOCTYE&gt;</code> 声明一般位于文档的第一行，它的作用主要是告诉浏览器以什么样的模式来解析文档。一般指定了之后会以“标准模式”进行文档解析，否则就以“兼容模式”进行解析。</p>\n<ul>\n<li>在<code>标准模式</code>下，浏览器的解析规则都是按照最新的标准进行解析的。</li>\n<li>而在<code>兼容模式</code>下，浏览器会以向后兼容的方式来模拟老式浏览器的行为，以保证一些老的网站能正常访问。</li>\n</ul>\n<h2 id=\"4-SGML、HTML、XML-和-XHTML的区别\"><a href=\"#4-SGML、HTML、XML-和-XHTML的区别\" class=\"headerlink\" title=\"4. SGML、HTML、XML 和 XHTML的区别\"></a>4. SGML、HTML、XML 和 XHTML的区别</h2><ul>\n<li><code>SGML</code> 是标准通用标记语言，是一种定义电子文档结构和描述其内容的国际标准语言，是所有电子文档标记语言的起源。</li>\n<li><code>HTML</code> 是超文本标记语言，主要是用于规定怎样显示网页。</li>\n<li><code>XML</code> 是可扩展标记语言，是未来网页语言的发展方向，XML 和 HTML 的最大区别就在于 XML 的标签是可以自己创建的，数量无限多，而 HTML 的标签都是固定的而且数量有限。</li>\n<li><code>XHTML</code> 也是现在基本上所有网页都在用的标记语言，他其实和 HTML 没什么本质的区别，标签都一样，用法也都一样，就是比 HTML 更严格，比如标签必须都用小写，标签都必须有闭合标签等。</li>\n</ul>\n<h2 id=\"5-HTML5-有哪些新特性、移除了哪些元素？\"><a href=\"#5-HTML5-有哪些新特性、移除了哪些元素？\" class=\"headerlink\" title=\"5. HTML5 有哪些新特性、移除了哪些元素？\"></a>5. HTML5 有哪些新特性、移除了哪些元素？</h2><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像、位置、存储、多任务等功能的增加。</p>\n<p>新增的：</p>\n<ul>\n<li>绘图 <code>canvas</code></li>\n<li>用于媒介回放的 <code>video</code> 和 <code>audio</code> 元素</li>\n<li>本地离线存储 <code>localStorage</code> 、<code>sessionStorage</code></li>\n<li>语义化更好的内容元素，如：<code>header</code>、<code>article</code>、<code>nav</code>、<code>section</code>、<code>footer</code>等</li>\n<li>表单控件 <code>calendar</code>、<code>date</code>、<code>time</code>、<code>email</code>、<code>url</code>、<code>search</code> 等</li>\n<li>新的技术 <code>webworker</code>、<code>websocket</code></li>\n<li>新的文档属性 <code>document.visibilityState</code></li>\n</ul>\n<p>移除的：</p>\n<ul>\n<li>纯表现的元素：<code>basefont</code>、<code>big</code>、<code>center</code>、<code>s</code>、<code>tt</code>、<code>u</code></li>\n<li>对可用性产生负面影响的元素：<code>frame</code>、<code>frameset</code>、<code>noframes</code></li>\n</ul>\n<h2 id=\"6-对浏览器内核的理解\"><a href=\"#6-对浏览器内核的理解\" class=\"headerlink\" title=\"6. 对浏览器内核的理解\"></a>6. 对浏览器内核的理解</h2><p>主要分为两部分：渲染引擎和JS引擎。</p>\n<ul>\n<li><code>渲染引擎</code>：其职责就是渲染，即在浏览器窗口中显示所请求的内容。默认情况下，渲染引擎可以显示 HTML、 XML 文档及图片，它也可以借助一些浏览器扩展插件显示其他类型数据，如：使用PDF阅读器插件可以显示 PDF 格式。</li>\n<li><code>JS引擎</code>：解析和执行 JavaScript 来实现网页的动态效果。</li>\n</ul>\n<p>最开始渲染引擎和JS引擎并没有区分的很明显，后来JS引擎越来越独立，内核就倾向于只指渲染引擎了</p>\n<h2 id=\"7-什么是文档的预解析？\"><a href=\"#7-什么是文档的预解析？\" class=\"headerlink\" title=\"7. 什么是文档的预解析？\"></a>7. 什么是文档的预解析？</h2><p>当执行 JavaScript 脚本时，另一个线程解析剩下的文档，并加载后面需要通过网络加载的资源。这种方式可以使资源并行加载，从而使整体速度更快。</p>\n<p>需要注意的是，预解析并不改变DOM树，它将这个工作交给主解析过程，自己只解析外部资源的引用，比如：外部脚本、样式及图片。</p>\n<h2 id=\"8-浏览器的渲染原理\"><a href=\"#8-浏览器的渲染原理\" class=\"headerlink\" title=\"8. 浏览器的渲染原理\"></a>8. 浏览器的渲染原理</h2><p>简记： 生成DOM树 –&gt; 生成CSS规则树 –&gt; 构建渲染树 –&gt; 布局 –&gt; 绘制</p>\n<ol>\n<li>首先解析收到的文档，根据文档定义构建一颗 <code>DOM 树</code>，DOM 树是由 DOM 元素及属性节点组成的。</li>\n<li>然后对 CSS 进行解析，生成一颗 <code>CSS 规则树</code>。</li>\n<li>根据 DOM 树和 CSS 规则树构建<code>渲染树</code>。渲染树的节点被称为渲染对象，它是一个包含有颜色等属性的矩形。渲染对象和 DOM 元素相对应，但这种关系不是一对一的，不可见的 DOM 元素不会插入渲染树。还有一些 DOM 元素对应几个可见对象，它们一般是一些具有复杂结构的元素，无法用一个矩形来描述。</li>\n<li>当渲染对象被创建并添加到树中，它们没有位置和大小，所以当浏览器生成渲染树以后，就会根据渲染树来进行<code>布局</code>（也可以叫做回流）。这一阶段浏览器要做的是计算出各个节点在页面中确切位置和大小。通常这一行为也被称为自动重排。</li>\n<li>布局阶段结束后是<code>绘制</code>阶段，遍历渲染树并调用渲染对象的 paint 方法将它们的内容显示到屏幕上。值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎会尽早的将内容呈现到屏幕上，并不会等到所有 HMTL 内容都解析完之后再去构建和布局渲染树，它是解析完一部分内容就显示一部分内容，同时，可能还通过网络下载其余内容。</li>\n</ol>\n<h2 id=\"9-什么是回流和重绘？\"><a href=\"#9-什么是回流和重绘？\" class=\"headerlink\" title=\"9. 什么是回流和重绘？\"></a>9. 什么是回流和重绘？</h2><p>1.概念：</p>\n<ul>\n<li><code>回流</code>：当 DOM 的变化影响了元素的几何信息，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做回流（也可以叫做重排）。表现为重新生成布局，重新排列元素。</li>\n<li><code>重绘</code>：当一个元素的外观发生改变，重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变。</li>\n</ul>\n<p>2.常见引起回流和重绘的属性和方法：</p>\n<p>任何会改变元素几何信息（元素的位置和尺寸大小）的操作都会触发回流。</p>\n<ul>\n<li>添加或删除可见的 DOM 元素</li>\n<li>元素尺寸改变–边距、填充、宽度、高度</li>\n<li>浏览器尺寸改变– resize 事件发生时</li>\n<li>计算 offsetWidth 和 offsetHeight 属性</li>\n<li>设置 style 属性的值</li>\n<li>修改网页默认字体</li>\n</ul>\n<p><strong>回流必定会发生重绘，重绘不一定会引发回流。</strong></p>\n<p><strong>回流所需的成本比重绘高得多</strong></p>\n<p>建议阅读文章：<a href=\"https://juejin.cn/post/6844903779700047885\">你真的了解回流和重绘吗</a></p>\n<h2 id=\"10-如何减少回流？\"><a href=\"#10-如何减少回流？\" class=\"headerlink\" title=\"10. 如何减少回流？\"></a>10. 如何减少回流？</h2><ul>\n<li>使用 transform 代替 top</li>\n<li>不要把节点的属性值放在一个循环里，当成循环里的变量</li>\n<li>不要使用 table 布局，可能很小的一个改动会造成整个 table 的重新布局</li>\n<li>把 DOM 离线后修改。如：使用 documentFragment 对象在内存里操作 DOM</li>\n<li>不要一条一条的修改样式，可以预先定义好 class，然后修改 DOM 的 className</li>\n<li>使用 absolute 或 fixed 使元素脱离文档流</li>\n</ul>\n<h2 id=\"11-sessionStorage，localStorage-和-cookie-的区别\"><a href=\"#11-sessionStorage，localStorage-和-cookie-的区别\" class=\"headerlink\" title=\"11. sessionStorage，localStorage 和 cookie 的区别\"></a>11. sessionStorage，localStorage 和 cookie 的区别</h2><ol>\n<li>共同点：都是保存在浏览器端，且同源的</li>\n<li>区别:</li>\n</ol>\n<ul>\n<li>cookie 始终在同源的 http 请求中携带（即使不需要），即 cookie 在浏览器和服务器之间来回传递；而 sessionStorage 和 localStorage 不会自动把数据发送到服务器，仅在本地保存。cookie 还有路径（path）的概念，可以限制 cookie 只属于某个路径下。</li>\n<li>存储大小限制不同。cookie 不能超过 4K，因为每次 http 请求都会携带 cookie，所以 cookie 只适合保存很小的数据，如：会话标识。sessionStorage 和 localStorage 虽然也有存储大小限制，但比 cookie 大得多，可以达到 5M 或更大。</li>\n<li>数据有效期不同。sessionStorage 仅在当前浏览器窗口关闭之前有效；localStorage 始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie 只在设置的 cookie 过期时间之前有效。</li>\n<li>作用域不同。sessionStorage 不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 和 cookie 在所有同源窗口中都是共享的。</li>\n</ul>\n<h2 id=\"12-iframe-有哪些优缺点？\"><a href=\"#12-iframe-有哪些优缺点？\" class=\"headerlink\" title=\"12. iframe 有哪些优缺点？\"></a>12. iframe 有哪些优缺点？</h2><p>优点：</p>\n<ol>\n<li>iframe 能原封不动的把嵌入的网页展现出来。</li>\n<li>如果有多个网页引用 iframe，只需修改 iframe 的内容，就可以实现调用每一个页面的更改，方便快捷。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>iframe 会阻塞主页面的 onload 事件。</li>\n<li>iframe 和主页面共享链接池，而浏览器对相同域的链接有限制，所以会影响页面的并行加载。</li>\n<li>不利于 SEO，代码复杂，无法一下被搜索引擎索引到。</li>\n<li>iframe 框架页面会增加服务器的 http 请求，对于大型网站不可取。</li>\n<li>很多移动设备无法完全显示框架，设备兼容性差。</li>\n</ol>\n<p>注意：通过动态给 iframe 添加 src 属性值，可解决前两个问题。</p>\n<h2 id=\"13-什么是-canvas，基本用法是什么？\"><a href=\"#13-什么是-canvas，基本用法是什么？\" class=\"headerlink\" title=\"13. 什么是 canvas，基本用法是什么？\"></a>13. 什么是 canvas，基本用法是什么？</h2><p>canvas 元素是 HTML5 的一部分，允许脚步语言动态渲染位图像。canvas 由一个可控制区域 HTML 代码中的属性定义决定高度和宽度。JavaScript 代码可以访问该区域，通过一套完整的绘图功能类似于其他通用二维的 API，从而生成动态的图形。</p>\n<ol>\n<li>创建 canvas 标签</li>\n</ol>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino</span><br><span class=\"line\">复制代码&lt;canvas id=<span class=\"string\">&quot;myCanvas&quot;</span> width=<span class=\"string\">&quot;150&quot;</span> height=<span class=\"string\">&quot;150&quot;</span>&gt;该浏览器不支持canvas&lt;/canvas&gt;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>渲染上下文</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码var <span class=\"attr\">canvas</span> = document.getElementById(<span class=\"string\">&#x27;myCanvas&#x27;</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">var <span class=\"attr\">ctx</span> = canvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<p>代码第一行通过使用 <code>document.getElementById()</code> 方法获取 <code>&lt;canvas&gt;</code> 元素对应的 DOM 对象，然后可以通过使用它的 <code>getContext()</code> 方法来绘制上下文。 创建 canvas 标签时可以在标签内写上不支持的提示信息；也可以通过 <code>getContext()</code> 方法判读是否支持编程。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码var <span class=\"attr\">canvas</span> = document.getElementById(<span class=\"string\">&#x27;myCanvas&#x27;</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">if (canvas.getContext) &#123;</span><br><span class=\"line\">  var <span class=\"attr\">ctx</span> = canvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">  // other code</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">  // 不支持 canvas 的其他代码</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>用途：</p>\n<p>canvas 可用于游戏和图表（echarts.js、heightchart.js 都是基于 canvas 来绘图）制作。</p>\n<h1 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h1><h2 id=\"1-css3-有哪些新特性？\"><a href=\"#1-css3-有哪些新特性？\" class=\"headerlink\" title=\"1. css3 有哪些新特性？\"></a>1. css3 有哪些新特性？</h2><ul>\n<li>rgba 和 透明度</li>\n<li>background-image、background-origin、background-size、background-repeat</li>\n<li>word-wrap: break-word（对长的不可分割的单词换行）</li>\n<li>文字阴影 text-shadow</li>\n<li>font-face属性，定义自己的字体</li>\n<li>border-radius</li>\n<li>边框图片 border-image</li>\n<li>盒阴影 box-shadow</li>\n<li>媒体查询：定义多套 css，当浏览器尺寸发生变化时采用不同的属性</li>\n</ul>\n<h2 id=\"2-style-标签写在-body-后与-body-前有什么区别？\"><a href=\"#2-style-标签写在-body-后与-body-前有什么区别？\" class=\"headerlink\" title=\"2. style 标签写在 body 后与 body 前有什么区别？\"></a>2. style 标签写在 body 后与 body 前有什么区别？</h2><ol>\n<li>写在 body 标签前有利于浏览器逐步渲染： resources downloading –&gt; cssDOM + DOM –&gt; Render Tree –&gt; layout –&gt; paint</li>\n<li>写在 body 标签后： 由于浏览器以逐行方式对 HTML 文档进行解析，当解析到写在尾部的样式表（外联或写在 style 标签）会导致浏览器停止之前的渲染，等待加载且解析样式完成后重新渲染；在 windows 的 IE 下可能出现样式失效导致的页面闪烁问题。</li>\n</ol>\n<h2 id=\"3-CSS选择器及优先级\"><a href=\"#3-CSS选择器及优先级\" class=\"headerlink\" title=\"3. CSS选择器及优先级\"></a>3. CSS选择器及优先级</h2><ol>\n<li>选择器<ul>\n<li>id选择器(#myid)</li>\n<li>类选择器(.myclass)</li>\n<li>属性选择器(a[rel=”external”])</li>\n<li>伪类选择器(a:hover, li:nth-child)</li>\n<li>标签选择器(div, h1, p)</li>\n<li>伪元素选择器(p::first-line)</li>\n<li>相邻选择器（h1 + p）</li>\n<li>子选择器(ul &gt; li)</li>\n<li>后代选择器(li a)</li>\n<li>通配符选择器(*)</li>\n</ul>\n</li>\n<li>优先级<ul>\n<li><code>!important</code></li>\n<li>内联样式（1000）</li>\n<li>ID选择器（0100）</li>\n<li>类选择器 / 属性选择器 / 伪类选择器（0010）</li>\n<li>标签选择器 / 伪元素选择器（0001）</li>\n<li>关系选择器 / 通配符选择器（0000）</li>\n</ul>\n</li>\n</ol>\n<p>带 !important 标记的样式属性优先级最高；样式表的来源相同时：<code>!important &gt; 行内样式&gt; ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性</code></p>\n<h2 id=\"4-rgba-和-opacity-设置透明度的区别是什么？\"><a href=\"#4-rgba-和-opacity-设置透明度的区别是什么？\" class=\"headerlink\" title=\"4. rgba() 和 opacity 设置透明度的区别是什么？\"></a>4. rgba() 和 opacity 设置透明度的区别是什么？</h2><p>rgba() 和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的所有内容的透明度；而 rgba() 只作用于元素的颜色或其背景色，设置 rgba() 透明的元素的子元素不会继承透明效果。</p>\n<h2 id=\"5-浏览器是如何解析-css-选择器的？\"><a href=\"#5-浏览器是如何解析-css-选择器的？\" class=\"headerlink\" title=\"5. 浏览器是如何解析 css 选择器的？\"></a>5. 浏览器是如何解析 css 选择器的？</h2><p><code>从右向左解析的。</code>若从左向右匹配，发现不符合规则，需要回溯，会损失很多性能。若从右向左匹配，先找到所有的最后节点，对于每一个节点，向上寻找其父节点直到查找至根元素或满足条件的匹配规则，则结束这个分支的遍历。</p>\n<p>在 css 解析完毕后，需将解析结果 css 规则树和 DOM Tree 一起进行分析建立一颗 Render Tree，最终用来进行绘图。</p>\n<h2 id=\"6-display-none-和-visibility-hidden-两者的区别\"><a href=\"#6-display-none-和-visibility-hidden-两者的区别\" class=\"headerlink\" title=\"6. display: none 和 visibility: hidden 两者的区别\"></a>6. display: none 和 visibility: hidden 两者的区别</h2><ol>\n<li>display: none 隐藏后不占用文档流；而 visibility: hidden 会占用文档流。</li>\n<li>visibility 具有继承性，给父元素设置 “visibility: hidden”，子元素也会继承该属性，但如果重新给子元素设置 “visibility: visible”，则子元素又会显示出来。</li>\n<li>visibility: hidden 不会影响计数器的计数，虽然隐藏了，但计数器依然运行着。</li>\n<li>在 css3 中 transition 支持 visibility 属性，但不支持 display。因为 transition 可以延迟执行，因此配合 visibility 使用纯 css 延时显示效果可以提高用户体验。</li>\n<li>display: none 会引起回流（重排）和重绘；visibility: hidden 会引起重绘。</li>\n</ol>\n<h2 id=\"7-简述-transform，transition，animation-的作用\"><a href=\"#7-简述-transform，transition，animation-的作用\" class=\"headerlink\" title=\"7. 简述 transform，transition，animation 的作用\"></a>7. 简述 transform，transition，animation 的作用</h2><ol>\n<li><code>transform</code>：描述了元素的静态样式，本身不会呈现动画效果，可以对元素进行旋转 rotate、扭曲 skew、缩放 scale 和移动 translate 以及矩阵变形 matrix。<code>transition</code> 和 <code>animation</code> 两者都能实现动画效果。<code>transform</code> 常配合<code>transition</code> 和 <code>animation</code> 使用。</li>\n<li><code>transition</code>：样式过渡，从一种效果逐渐改变为另一种效果，它是一个合写属性。transition: transition-property  transition-duration  transition-timing-function  transition-delay 从左到右，依次是：过渡效果的css属性名称、过渡效果花费时间、速度曲线、过渡开始的延迟时间  <code>transition</code> 通常和 hover 等事件配合使用，需要由事件来触发过渡。</li>\n<li><code>animation</code>：动画，有 <code>@keyframes</code> 来描述每一帧的样式。</li>\n</ol>\n<p>区别：</p>\n<ul>\n<li><code>transform</code> 仅描述元素的静态样式，常配合<code>transition</code> 和 <code>animation</code> 使用。</li>\n<li><code>transition</code> 通常和 hover 等事件配合使用；<code>animation</code> 是自发的，立即播放。</li>\n<li><code>animation</code> 可以设置循环次数。</li>\n<li><code>animation</code> 可以设置每一帧的样式和时间，<code>transition</code> 只能设置头尾。</li>\n<li><code>transition</code> 可以与 js 配合使用， js 设定要变化的样式，<code>transition</code> 负责动画效果。</li>\n</ul>\n<h2 id=\"8-line-height-如何继承？\"><a href=\"#8-line-height-如何继承？\" class=\"headerlink\" title=\"8. line-height 如何继承？\"></a>8. line-height 如何继承？</h2><ul>\n<li>父元素的 <code>line-height</code> 是具体数值，则子元素 <code>line-height</code> 继承该值。</li>\n<li>父元素的 <code>line-height</code> 是比例值，如’2’，则子元素 <code>line-height</code> 继承该比例。</li>\n<li>父元素的 <code>line-height</code> 是百分比，则子元素 <code>line-height</code> 继承的是父元素的 font-size * 百分比 计算出来的值。</li>\n</ul>\n<h2 id=\"9-如何让-chrome-支持-10px-的文字？\"><a href=\"#9-如何让-chrome-支持-10px-的文字？\" class=\"headerlink\" title=\"9. 如何让 chrome 支持 10px 的文字？\"></a>9. 如何让 chrome 支持 10px 的文字？</h2><ol>\n<li>font-size: 12px; -webkit-transform: scale(0.84);</li>\n<li>font-size: 20px; -webkit-transform: scale(0.5);</li>\n</ol>\n<h2 id=\"10-position-属性的值有哪些？\"><a href=\"#10-position-属性的值有哪些？\" class=\"headerlink\" title=\"10. position 属性的值有哪些？\"></a>10. position 属性的值有哪些？</h2><ol>\n<li><code>static</code>：默认定位。元素出现在正常的文档流中（忽略top，bottom，left，right 或 z-index声明）</li>\n<li><code>relative</code>：相对定位。如果对一个元素进行相对定位，将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，使其“相对于”它的起点进行移动。使用相对定位时，无论是否移动，元素仍然占据原来的空间；移动元素会导致其覆盖其他元素。</li>\n<li><code>absolute</code>：绝对定位。元素的位置相对于最近的已定位的父元素，如果元素没有已定位的父元素，则相对于根元素（即 html 元素）定位。绝对定位的元素会脱离文档流，不占据空间，会与其他元素重叠。</li>\n<li><code>fixed</code>：固定定位。元素的位置相对于浏览器窗口是固定位置，即使窗口滚动它也不会移动。固定定位的元素会脱离文档流，不占据空间，会与其他元素重叠。</li>\n<li><code>sticky</code>：粘性定位。粘性定位可以被认为是相对定位和固定定位的混合，元素在跨越特定阈值前为相对定位，之后为固定定位。top，right，buttom，left，必须指定这四个阈值中的一个，才可以使粘性定位生效，否则行为与其相对定位相同。</li>\n<li><code>inherit</code>：规定应该从父元素继承 position 属性的值。</li>\n</ol>\n<h2 id=\"11-css-盒模型？\"><a href=\"#11-css-盒模型？\" class=\"headerlink\" title=\"11. css 盒模型？\"></a>11. css 盒模型？</h2><ul>\n<li><code>标准盒模型</code>，width 指 content 部分的宽度，总宽度 = width + border(左右) + padding（左右）+ margin（左右）；高度同理。</li>\n<li><code>怪异盒模型（IE盒模型）</code>，width 指 content + border（左右） + padding（左右）三部分的宽度，因此，总宽度 = width + margin（左右）；高度同理。</li>\n</ul>\n<h2 id=\"12-box-sizing-属性\"><a href=\"#12-box-sizing-属性\" class=\"headerlink\" title=\"12. box-sizing 属性\"></a>12. box-sizing 属性</h2><ol>\n<li><code>content-box</code>，对应标准盒模型。</li>\n<li><code>border-box</code>，IE盒模型。</li>\n<li><code>inherit</code>，继承父元素的 box-sizing 值。</li>\n</ol>\n<h2 id=\"13-BFC（块级格式上下文）\"><a href=\"#13-BFC（块级格式上下文）\" class=\"headerlink\" title=\"13. BFC（块级格式上下文）\"></a>13. BFC（块级格式上下文）</h2><ol>\n<li>概念： BFC（Block Formatting Context），块级格式上下文。BFC 是 css 布局的一个概念，是一个独立的渲染区域，规定了内部 box 如何布局，且这个区域内的子元素不会影响到外面的元素。</li>\n<li>布局规则：</li>\n</ol>\n<ul>\n<li>内部的 box 会在垂直方向一个接一个的放置</li>\n<li>box 垂直方向的距离由 margin 决定，同一个 BFC 相邻的 box 的 margin 会发生重叠</li>\n<li>每个 box 的 margin 左边，与包含块的左 border 相接触（对于从左往右的格式化，否则相反）</li>\n<li>BFC 的区域不会与 float box 重叠</li>\n<li>BFC 是一个独立容器，容器内的子元素不会影响到外面的元素</li>\n<li>计算 BFC 高度时，浮动元素也参与计算高度</li>\n</ul>\n<ol>\n<li>如何创建 BFC ？</li>\n</ol>\n<ul>\n<li>根元素，即 html 元素</li>\n<li>float 值不为 none</li>\n<li>position 值为 absolute 或 fixed</li>\n<li>display 的值为 inline-block、tabl-cell、table-caption</li>\n<li>overflow 的值不为 visible</li>\n</ul>\n<ol>\n<li>BFC 的使用场景</li>\n</ol>\n<ul>\n<li>去除边距重叠问题</li>\n<li>清除浮动（让父元素的高度包含子浮动元素）</li>\n<li>阻止元素被浮动元素覆盖</li>\n</ul>\n<h2 id=\"14-让一个元素水平-垂直居中\"><a href=\"#14-让一个元素水平-垂直居中\" class=\"headerlink\" title=\"14. 让一个元素水平/垂直居中\"></a>14. 让一个元素水平/垂直居中</h2><ol>\n<li>水平居中</li>\n</ol>\n<ul>\n<li>行内元素：<code>text-align: center;</code></li>\n<li>对于确定宽度的块级元素<ul>\n<li>width 和 margin 实现： <code>mragin: 0 auto;</code></li>\n<li>绝对定位和 margin-left 实现： <code>margin-left: (父width - 子 width)/2；</code>(前提是父元素相对定位)</li>\n</ul>\n</li>\n<li>对于宽度未知的块级元素<ul>\n<li>table 标签配合 margin 左右 auto 实现</li>\n<li>inline-block 实现：<code>display: inline-block; text-align: center;</code></li>\n<li>绝对定位和 transform 实现， translateX 可以移动本身元素的50%</li>\n<li>flex 布局 <code>justify-content: center</code></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>垂直居中</li>\n</ol>\n<ul>\n<li>纯文字类，设置 line-height 等于 height</li>\n<li>子绝父相，子元素通过 margin 实现自适应居中</li>\n<li>子绝父相，通过位移 transform 实现</li>\n<li>flex 布局，<code>align-items: center;</code></li>\n<li>table 布局，父级通过转换为表格形式，子级设置 vertical-align 实现</li>\n</ul>\n<h2 id=\"15-flex-布局\"><a href=\"#15-flex-布局\" class=\"headerlink\" title=\"15. flex 布局\"></a>15. flex 布局</h2><p>flex 布局，是一种弹性盒布局模型，给子元素提供了空间分布和对齐能力，由<code>container</code>（容器）及<code>item</code>（项目）组成。该布局模型提供了一种更加高效的方式来对容器中的项目进行布局、对齐和分配空间。适用于在不同尺寸的屏幕中创建可自动扩展和收缩布局，通常可用于<code>水平/垂直居中</code>，<code>两栏</code>、<code>三栏布局</code>等的场景里。</p>\n<p>其中<code>flex</code>属性是<code>flex-grow</code>，<code>flex-shrink</code>和<code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。<strong>该属性有两个快捷值：<code>auto (1 1 auto)</code> 和 <code>none (0 0 auto)</code>。</strong></p>\n<ul>\n<li><code>flex-grow</code>：定义项目的放大比例，默认值为 0，即如果存在剩余空间，也不放大。如果所有项目的<code>flex-grow</code>属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。</li>\n<li><code>flex-shrink</code>：项目的缩小比例，默认为 1，即如果空间不足，项目将缩小。如果所有项目的<code>flex-shrink</code>属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为 0，其他项目都为 1，则空间不足时，前者不缩小。</li>\n<li><code>flex-basis</code>：定义了在分配多余空间之前，项目占据的主轴空间。浏览器会根据该属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。当设置为 0 的是，会根据内容撑开。也可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如 350px），则项目将占据固定空间。</li>\n</ul>\n<p><code>flex</code>常用的属性值：</p>\n<ul>\n<li>flex: 1 –&gt; flex: 1 1 0%</li>\n<li>flex: 2 –&gt; flex: 2 1 0%</li>\n<li>flex: auto –&gt; flex: 1 1 auto</li>\n<li>flex: none –&gt; flex: 0 0 auto【常用于固定尺寸不伸缩】</li>\n</ul>\n<h2 id=\"16-清除浮动\"><a href=\"#16-清除浮动\" class=\"headerlink\" title=\"16. 清除浮动\"></a>16. 清除浮动</h2><ol>\n<li><p>直接把 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>作为最后一个子标签</p>\n<ul>\n<li>优点：通俗易懂，容易掌握；</li>\n<li>缺点：会添加较多无意义的空标签，有违结构与表现的分离，在后期维护中将是噩梦</li>\n</ul>\n</li>\n<li><p>.clearfix { overflow: hidden; zoom: 1; }</p>\n<ul>\n<li>优点：不存在结构和语义化问题，代码量极少</li>\n<li>缺点：内容增多时容易造成不自动换行，导致内容被隐藏掉，无法显示需要溢出的元素</li>\n</ul>\n</li>\n<li><p>建立伪类选择器</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/98e2353e3275475095bd26ecedfa32e9%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp\" alt=\"image.png\"></p>\n<h2 id=\"17-css-中优雅降级和渐进增强有什么区别？\"><a href=\"#17-css-中优雅降级和渐进增强有什么区别？\" class=\"headerlink\" title=\"17. css 中优雅降级和渐进增强有什么区别？\"></a>17. css 中优雅降级和渐进增强有什么区别？</h2><p>优雅降级和渐进增强是随着 css3 流出来的一个概念。由于低级浏览器不支持 css3， 但 css3 的效果又很优秀不忍放弃，所以在高级浏览器中使用 css3 ，而在低级浏览器只保证最基本的功能。二者最关键的区别是它们所侧重的内容，以及这种不同所造成的工作流程的差异。</p>\n<ul>\n<li><code>优雅降级</code>：一开始就构建完整的功能，然后针对浏览器测试和修复。</li>\n<li><code>渐进增强</code>：一开始就针对低版本浏览器进行构建页面，完成基本的功能，然后再针对高级浏览器进行效果、交互、追加功能以达到更好的体验。</li>\n</ul>\n<h2 id=\"18-img-的-alt-和-title-的异同？实现图片懒加载的原理？\"><a href=\"#18-img-的-alt-和-title-的异同？实现图片懒加载的原理？\" class=\"headerlink\" title=\"18. img 的 alt 和 title 的异同？实现图片懒加载的原理？\"></a>18. img 的 alt 和 title 的异同？实现图片懒加载的原理？</h2><ul>\n<li><code>alt</code>是图片加载失败时显示在网页上的替代文字；<code>title</code>是鼠标放在图片上面时显示的文字，是对图片的进一步描述和说明。</li>\n<li><code>alt</code>是 img 的必要属性；<code>title</code>不是。</li>\n<li>对于网站 SEO 优先来说，搜索引擎对图片意思的判断，主要是靠<code>alt</code>属性，所以在图片<code>alt</code>属性中以简要文字说明，同时包含关键字，也是页面优化的一部分。</li>\n</ul>\n<p><code>懒加载原理</code>：先设置图片的 <code>data-set</code> 属性值（也可以是其他任意的，只要不发生 http 请求就可以，作用是为了存取值）为图片路径，由于不是 <code>src</code> 属性，故不会发生 http 请求。然后计算出页面的 scrollTop 的高度和浏览器的高度之和，如果图片距页面顶端距离小于前两者之和，说明图片要显示出来了，这时将 <code>data-set</code> 属性替换为 <code>src</code> 属性即可。</p>\n<h2 id=\"19-css-sprites-（雪碧图-精灵图）\"><a href=\"#19-css-sprites-（雪碧图-精灵图）\" class=\"headerlink\" title=\"19. css sprites （雪碧图/精灵图）\"></a>19. css sprites （雪碧图/精灵图）</h2><p>css sprites 就是把网页中一些小图片整合到一张图片文件中，再利用 css 的 background-image、background-repeat、background-position 的组合进行背景定位。</p>\n<p>优点： 减少图片体积；减少 http 请求次数</p>\n<p>缺点：维护比较麻烦；不能随便改变大小，会失真模糊</p>\n<h2 id=\"20-什么是字体图标？\"><a href=\"#20-什么是字体图标？\" class=\"headerlink\" title=\"20. 什么是字体图标？\"></a>20. 什么是字体图标？</h2><p>字体图标简单的说，就是一种特殊的字体，通过这种字体，显示给用户的就像一个个图片一样。字体图标最大的好处，在于它不会变形和加载速度快。字体图标可以像文字一样，随意通过 css 来控制它的大小和颜色，非常方便。</p>\n<h2 id=\"21-主流浏览器内核私有属性-css-前缀？\"><a href=\"#21-主流浏览器内核私有属性-css-前缀？\" class=\"headerlink\" title=\"21. 主流浏览器内核私有属性 css 前缀？\"></a>21. 主流浏览器内核私有属性 css 前缀？</h2><ul>\n<li>mozilla(firefox、flock等): -moz</li>\n<li>webkit 内核(safari、chrome等): -webkit</li>\n<li>opera 内核(opera浏览器): -o</li>\n<li>trident 内核(ie 浏览器): -ms</li>\n</ul>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"excerpt":"<p>JS复习记录</p>","more":"<h1 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h1><h2 id=\"1-语义化\"><a href=\"#1-语义化\" class=\"headerlink\" title=\"1. 语义化\"></a>1. 语义化</h2><ol>\n<li><p>语义化，指对文本内容的结构化（内容语义化），选择合乎语义的标签（代码语义化）。</p>\n</li>\n<li><p>语义化标签：<code>header</code>、<code>nav</code>、<code>main</code>、<code>article</code>、<code>section</code>、<code>aside</code>、<code>footer</code>等。</p>\n</li>\n<li><p>优点：</p>\n<ul>\n<li>代码结构清晰，易于阅读，有利于维护</li>\n<li>方便其他设备解析（如：屏幕阅读器）</li>\n<li>有利于搜索引擎优化（SEO），搜索引擎爬虫会根据不同的标签来赋予不同的权重</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-script-标签中属性-async-和-defer-的区别？\"><a href=\"#2-script-标签中属性-async-和-defer-的区别？\" class=\"headerlink\" title=\"2. script 标签中属性 async 和 defer 的区别？\"></a>2. script 标签中属性 async 和 defer 的区别？</h2><ul>\n<li><code>script</code> 会阻碍 HTML 解析，只有下载好并执行完脚本才会继续解析 HTML</li>\n<li><code>async script</code>：解析 HTML 的过程中会进行脚本的异步下载，下载成功后立马执行，因此有可能会阻断 HTML 的解析。多个脚本的执行顺序无法保证。</li>\n<li><code>defer script</code>：也是异步下载脚步，加载完成后，如果此时 HTML 还没有解析完，浏览器不会暂停解析去执行 JS 代码，而是等待 HTML 解析完毕再执行 JS 代码，如果存在多个 <code>defer script </code>标签，浏览器（IE9及以下除外）会保证它们按照在 HTML 中出现的顺序执行，不会破坏 JS 脚本之间的依赖关系。</li>\n</ul>\n<h2 id=\"3-DOCTYPE-的作用是什么？\"><a href=\"#3-DOCTYPE-的作用是什么？\" class=\"headerlink\" title=\"3. DOCTYPE 的作用是什么？\"></a>3. DOCTYPE 的作用是什么？</h2><p><code>&lt;!DOCTYE&gt;</code> 声明一般位于文档的第一行，它的作用主要是告诉浏览器以什么样的模式来解析文档。一般指定了之后会以“标准模式”进行文档解析，否则就以“兼容模式”进行解析。</p>\n<ul>\n<li>在<code>标准模式</code>下，浏览器的解析规则都是按照最新的标准进行解析的。</li>\n<li>而在<code>兼容模式</code>下，浏览器会以向后兼容的方式来模拟老式浏览器的行为，以保证一些老的网站能正常访问。</li>\n</ul>\n<h2 id=\"4-SGML、HTML、XML-和-XHTML的区别\"><a href=\"#4-SGML、HTML、XML-和-XHTML的区别\" class=\"headerlink\" title=\"4. SGML、HTML、XML 和 XHTML的区别\"></a>4. SGML、HTML、XML 和 XHTML的区别</h2><ul>\n<li><code>SGML</code> 是标准通用标记语言，是一种定义电子文档结构和描述其内容的国际标准语言，是所有电子文档标记语言的起源。</li>\n<li><code>HTML</code> 是超文本标记语言，主要是用于规定怎样显示网页。</li>\n<li><code>XML</code> 是可扩展标记语言，是未来网页语言的发展方向，XML 和 HTML 的最大区别就在于 XML 的标签是可以自己创建的，数量无限多，而 HTML 的标签都是固定的而且数量有限。</li>\n<li><code>XHTML</code> 也是现在基本上所有网页都在用的标记语言，他其实和 HTML 没什么本质的区别，标签都一样，用法也都一样，就是比 HTML 更严格，比如标签必须都用小写，标签都必须有闭合标签等。</li>\n</ul>\n<h2 id=\"5-HTML5-有哪些新特性、移除了哪些元素？\"><a href=\"#5-HTML5-有哪些新特性、移除了哪些元素？\" class=\"headerlink\" title=\"5. HTML5 有哪些新特性、移除了哪些元素？\"></a>5. HTML5 有哪些新特性、移除了哪些元素？</h2><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像、位置、存储、多任务等功能的增加。</p>\n<p>新增的：</p>\n<ul>\n<li>绘图 <code>canvas</code></li>\n<li>用于媒介回放的 <code>video</code> 和 <code>audio</code> 元素</li>\n<li>本地离线存储 <code>localStorage</code> 、<code>sessionStorage</code></li>\n<li>语义化更好的内容元素，如：<code>header</code>、<code>article</code>、<code>nav</code>、<code>section</code>、<code>footer</code>等</li>\n<li>表单控件 <code>calendar</code>、<code>date</code>、<code>time</code>、<code>email</code>、<code>url</code>、<code>search</code> 等</li>\n<li>新的技术 <code>webworker</code>、<code>websocket</code></li>\n<li>新的文档属性 <code>document.visibilityState</code></li>\n</ul>\n<p>移除的：</p>\n<ul>\n<li>纯表现的元素：<code>basefont</code>、<code>big</code>、<code>center</code>、<code>s</code>、<code>tt</code>、<code>u</code></li>\n<li>对可用性产生负面影响的元素：<code>frame</code>、<code>frameset</code>、<code>noframes</code></li>\n</ul>\n<h2 id=\"6-对浏览器内核的理解\"><a href=\"#6-对浏览器内核的理解\" class=\"headerlink\" title=\"6. 对浏览器内核的理解\"></a>6. 对浏览器内核的理解</h2><p>主要分为两部分：渲染引擎和JS引擎。</p>\n<ul>\n<li><code>渲染引擎</code>：其职责就是渲染，即在浏览器窗口中显示所请求的内容。默认情况下，渲染引擎可以显示 HTML、 XML 文档及图片，它也可以借助一些浏览器扩展插件显示其他类型数据，如：使用PDF阅读器插件可以显示 PDF 格式。</li>\n<li><code>JS引擎</code>：解析和执行 JavaScript 来实现网页的动态效果。</li>\n</ul>\n<p>最开始渲染引擎和JS引擎并没有区分的很明显，后来JS引擎越来越独立，内核就倾向于只指渲染引擎了</p>\n<h2 id=\"7-什么是文档的预解析？\"><a href=\"#7-什么是文档的预解析？\" class=\"headerlink\" title=\"7. 什么是文档的预解析？\"></a>7. 什么是文档的预解析？</h2><p>当执行 JavaScript 脚本时，另一个线程解析剩下的文档，并加载后面需要通过网络加载的资源。这种方式可以使资源并行加载，从而使整体速度更快。</p>\n<p>需要注意的是，预解析并不改变DOM树，它将这个工作交给主解析过程，自己只解析外部资源的引用，比如：外部脚本、样式及图片。</p>\n<h2 id=\"8-浏览器的渲染原理\"><a href=\"#8-浏览器的渲染原理\" class=\"headerlink\" title=\"8. 浏览器的渲染原理\"></a>8. 浏览器的渲染原理</h2><p>简记： 生成DOM树 –&gt; 生成CSS规则树 –&gt; 构建渲染树 –&gt; 布局 –&gt; 绘制</p>\n<ol>\n<li>首先解析收到的文档，根据文档定义构建一颗 <code>DOM 树</code>，DOM 树是由 DOM 元素及属性节点组成的。</li>\n<li>然后对 CSS 进行解析，生成一颗 <code>CSS 规则树</code>。</li>\n<li>根据 DOM 树和 CSS 规则树构建<code>渲染树</code>。渲染树的节点被称为渲染对象，它是一个包含有颜色等属性的矩形。渲染对象和 DOM 元素相对应，但这种关系不是一对一的，不可见的 DOM 元素不会插入渲染树。还有一些 DOM 元素对应几个可见对象，它们一般是一些具有复杂结构的元素，无法用一个矩形来描述。</li>\n<li>当渲染对象被创建并添加到树中，它们没有位置和大小，所以当浏览器生成渲染树以后，就会根据渲染树来进行<code>布局</code>（也可以叫做回流）。这一阶段浏览器要做的是计算出各个节点在页面中确切位置和大小。通常这一行为也被称为自动重排。</li>\n<li>布局阶段结束后是<code>绘制</code>阶段，遍历渲染树并调用渲染对象的 paint 方法将它们的内容显示到屏幕上。值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎会尽早的将内容呈现到屏幕上，并不会等到所有 HMTL 内容都解析完之后再去构建和布局渲染树，它是解析完一部分内容就显示一部分内容，同时，可能还通过网络下载其余内容。</li>\n</ol>\n<h2 id=\"9-什么是回流和重绘？\"><a href=\"#9-什么是回流和重绘？\" class=\"headerlink\" title=\"9. 什么是回流和重绘？\"></a>9. 什么是回流和重绘？</h2><p>1.概念：</p>\n<ul>\n<li><code>回流</code>：当 DOM 的变化影响了元素的几何信息，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做回流（也可以叫做重排）。表现为重新生成布局，重新排列元素。</li>\n<li><code>重绘</code>：当一个元素的外观发生改变，重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变。</li>\n</ul>\n<p>2.常见引起回流和重绘的属性和方法：</p>\n<p>任何会改变元素几何信息（元素的位置和尺寸大小）的操作都会触发回流。</p>\n<ul>\n<li>添加或删除可见的 DOM 元素</li>\n<li>元素尺寸改变–边距、填充、宽度、高度</li>\n<li>浏览器尺寸改变– resize 事件发生时</li>\n<li>计算 offsetWidth 和 offsetHeight 属性</li>\n<li>设置 style 属性的值</li>\n<li>修改网页默认字体</li>\n</ul>\n<p><strong>回流必定会发生重绘，重绘不一定会引发回流。</strong></p>\n<p><strong>回流所需的成本比重绘高得多</strong></p>\n<p>建议阅读文章：<a href=\"https://juejin.cn/post/6844903779700047885\">你真的了解回流和重绘吗</a></p>\n<h2 id=\"10-如何减少回流？\"><a href=\"#10-如何减少回流？\" class=\"headerlink\" title=\"10. 如何减少回流？\"></a>10. 如何减少回流？</h2><ul>\n<li>使用 transform 代替 top</li>\n<li>不要把节点的属性值放在一个循环里，当成循环里的变量</li>\n<li>不要使用 table 布局，可能很小的一个改动会造成整个 table 的重新布局</li>\n<li>把 DOM 离线后修改。如：使用 documentFragment 对象在内存里操作 DOM</li>\n<li>不要一条一条的修改样式，可以预先定义好 class，然后修改 DOM 的 className</li>\n<li>使用 absolute 或 fixed 使元素脱离文档流</li>\n</ul>\n<h2 id=\"11-sessionStorage，localStorage-和-cookie-的区别\"><a href=\"#11-sessionStorage，localStorage-和-cookie-的区别\" class=\"headerlink\" title=\"11. sessionStorage，localStorage 和 cookie 的区别\"></a>11. sessionStorage，localStorage 和 cookie 的区别</h2><ol>\n<li>共同点：都是保存在浏览器端，且同源的</li>\n<li>区别:</li>\n</ol>\n<ul>\n<li>cookie 始终在同源的 http 请求中携带（即使不需要），即 cookie 在浏览器和服务器之间来回传递；而 sessionStorage 和 localStorage 不会自动把数据发送到服务器，仅在本地保存。cookie 还有路径（path）的概念，可以限制 cookie 只属于某个路径下。</li>\n<li>存储大小限制不同。cookie 不能超过 4K，因为每次 http 请求都会携带 cookie，所以 cookie 只适合保存很小的数据，如：会话标识。sessionStorage 和 localStorage 虽然也有存储大小限制，但比 cookie 大得多，可以达到 5M 或更大。</li>\n<li>数据有效期不同。sessionStorage 仅在当前浏览器窗口关闭之前有效；localStorage 始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie 只在设置的 cookie 过期时间之前有效。</li>\n<li>作用域不同。sessionStorage 不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 和 cookie 在所有同源窗口中都是共享的。</li>\n</ul>\n<h2 id=\"12-iframe-有哪些优缺点？\"><a href=\"#12-iframe-有哪些优缺点？\" class=\"headerlink\" title=\"12. iframe 有哪些优缺点？\"></a>12. iframe 有哪些优缺点？</h2><p>优点：</p>\n<ol>\n<li>iframe 能原封不动的把嵌入的网页展现出来。</li>\n<li>如果有多个网页引用 iframe，只需修改 iframe 的内容，就可以实现调用每一个页面的更改，方便快捷。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>iframe 会阻塞主页面的 onload 事件。</li>\n<li>iframe 和主页面共享链接池，而浏览器对相同域的链接有限制，所以会影响页面的并行加载。</li>\n<li>不利于 SEO，代码复杂，无法一下被搜索引擎索引到。</li>\n<li>iframe 框架页面会增加服务器的 http 请求，对于大型网站不可取。</li>\n<li>很多移动设备无法完全显示框架，设备兼容性差。</li>\n</ol>\n<p>注意：通过动态给 iframe 添加 src 属性值，可解决前两个问题。</p>\n<h2 id=\"13-什么是-canvas，基本用法是什么？\"><a href=\"#13-什么是-canvas，基本用法是什么？\" class=\"headerlink\" title=\"13. 什么是 canvas，基本用法是什么？\"></a>13. 什么是 canvas，基本用法是什么？</h2><p>canvas 元素是 HTML5 的一部分，允许脚步语言动态渲染位图像。canvas 由一个可控制区域 HTML 代码中的属性定义决定高度和宽度。JavaScript 代码可以访问该区域，通过一套完整的绘图功能类似于其他通用二维的 API，从而生成动态的图形。</p>\n<ol>\n<li>创建 canvas 标签</li>\n</ol>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino</span><br><span class=\"line\">复制代码&lt;canvas id=<span class=\"string\">&quot;myCanvas&quot;</span> width=<span class=\"string\">&quot;150&quot;</span> height=<span class=\"string\">&quot;150&quot;</span>&gt;该浏览器不支持canvas&lt;/canvas&gt;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>渲染上下文</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码var <span class=\"attr\">canvas</span> = document.getElementById(<span class=\"string\">&#x27;myCanvas&#x27;</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">var <span class=\"attr\">ctx</span> = canvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<p>代码第一行通过使用 <code>document.getElementById()</code> 方法获取 <code>&lt;canvas&gt;</code> 元素对应的 DOM 对象，然后可以通过使用它的 <code>getContext()</code> 方法来绘制上下文。 创建 canvas 标签时可以在标签内写上不支持的提示信息；也可以通过 <code>getContext()</code> 方法判读是否支持编程。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码var <span class=\"attr\">canvas</span> = document.getElementById(<span class=\"string\">&#x27;myCanvas&#x27;</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">if (canvas.getContext) &#123;</span><br><span class=\"line\">  var <span class=\"attr\">ctx</span> = canvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">  // other code</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">  // 不支持 canvas 的其他代码</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>用途：</p>\n<p>canvas 可用于游戏和图表（echarts.js、heightchart.js 都是基于 canvas 来绘图）制作。</p>\n<h1 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h1><h2 id=\"1-css3-有哪些新特性？\"><a href=\"#1-css3-有哪些新特性？\" class=\"headerlink\" title=\"1. css3 有哪些新特性？\"></a>1. css3 有哪些新特性？</h2><ul>\n<li>rgba 和 透明度</li>\n<li>background-image、background-origin、background-size、background-repeat</li>\n<li>word-wrap: break-word（对长的不可分割的单词换行）</li>\n<li>文字阴影 text-shadow</li>\n<li>font-face属性，定义自己的字体</li>\n<li>border-radius</li>\n<li>边框图片 border-image</li>\n<li>盒阴影 box-shadow</li>\n<li>媒体查询：定义多套 css，当浏览器尺寸发生变化时采用不同的属性</li>\n</ul>\n<h2 id=\"2-style-标签写在-body-后与-body-前有什么区别？\"><a href=\"#2-style-标签写在-body-后与-body-前有什么区别？\" class=\"headerlink\" title=\"2. style 标签写在 body 后与 body 前有什么区别？\"></a>2. style 标签写在 body 后与 body 前有什么区别？</h2><ol>\n<li>写在 body 标签前有利于浏览器逐步渲染： resources downloading –&gt; cssDOM + DOM –&gt; Render Tree –&gt; layout –&gt; paint</li>\n<li>写在 body 标签后： 由于浏览器以逐行方式对 HTML 文档进行解析，当解析到写在尾部的样式表（外联或写在 style 标签）会导致浏览器停止之前的渲染，等待加载且解析样式完成后重新渲染；在 windows 的 IE 下可能出现样式失效导致的页面闪烁问题。</li>\n</ol>\n<h2 id=\"3-CSS选择器及优先级\"><a href=\"#3-CSS选择器及优先级\" class=\"headerlink\" title=\"3. CSS选择器及优先级\"></a>3. CSS选择器及优先级</h2><ol>\n<li>选择器<ul>\n<li>id选择器(#myid)</li>\n<li>类选择器(.myclass)</li>\n<li>属性选择器(a[rel=”external”])</li>\n<li>伪类选择器(a:hover, li:nth-child)</li>\n<li>标签选择器(div, h1, p)</li>\n<li>伪元素选择器(p::first-line)</li>\n<li>相邻选择器（h1 + p）</li>\n<li>子选择器(ul &gt; li)</li>\n<li>后代选择器(li a)</li>\n<li>通配符选择器(*)</li>\n</ul>\n</li>\n<li>优先级<ul>\n<li><code>!important</code></li>\n<li>内联样式（1000）</li>\n<li>ID选择器（0100）</li>\n<li>类选择器 / 属性选择器 / 伪类选择器（0010）</li>\n<li>标签选择器 / 伪元素选择器（0001）</li>\n<li>关系选择器 / 通配符选择器（0000）</li>\n</ul>\n</li>\n</ol>\n<p>带 !important 标记的样式属性优先级最高；样式表的来源相同时：<code>!important &gt; 行内样式&gt; ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性</code></p>\n<h2 id=\"4-rgba-和-opacity-设置透明度的区别是什么？\"><a href=\"#4-rgba-和-opacity-设置透明度的区别是什么？\" class=\"headerlink\" title=\"4. rgba() 和 opacity 设置透明度的区别是什么？\"></a>4. rgba() 和 opacity 设置透明度的区别是什么？</h2><p>rgba() 和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的所有内容的透明度；而 rgba() 只作用于元素的颜色或其背景色，设置 rgba() 透明的元素的子元素不会继承透明效果。</p>\n<h2 id=\"5-浏览器是如何解析-css-选择器的？\"><a href=\"#5-浏览器是如何解析-css-选择器的？\" class=\"headerlink\" title=\"5. 浏览器是如何解析 css 选择器的？\"></a>5. 浏览器是如何解析 css 选择器的？</h2><p><code>从右向左解析的。</code>若从左向右匹配，发现不符合规则，需要回溯，会损失很多性能。若从右向左匹配，先找到所有的最后节点，对于每一个节点，向上寻找其父节点直到查找至根元素或满足条件的匹配规则，则结束这个分支的遍历。</p>\n<p>在 css 解析完毕后，需将解析结果 css 规则树和 DOM Tree 一起进行分析建立一颗 Render Tree，最终用来进行绘图。</p>\n<h2 id=\"6-display-none-和-visibility-hidden-两者的区别\"><a href=\"#6-display-none-和-visibility-hidden-两者的区别\" class=\"headerlink\" title=\"6. display: none 和 visibility: hidden 两者的区别\"></a>6. display: none 和 visibility: hidden 两者的区别</h2><ol>\n<li>display: none 隐藏后不占用文档流；而 visibility: hidden 会占用文档流。</li>\n<li>visibility 具有继承性，给父元素设置 “visibility: hidden”，子元素也会继承该属性，但如果重新给子元素设置 “visibility: visible”，则子元素又会显示出来。</li>\n<li>visibility: hidden 不会影响计数器的计数，虽然隐藏了，但计数器依然运行着。</li>\n<li>在 css3 中 transition 支持 visibility 属性，但不支持 display。因为 transition 可以延迟执行，因此配合 visibility 使用纯 css 延时显示效果可以提高用户体验。</li>\n<li>display: none 会引起回流（重排）和重绘；visibility: hidden 会引起重绘。</li>\n</ol>\n<h2 id=\"7-简述-transform，transition，animation-的作用\"><a href=\"#7-简述-transform，transition，animation-的作用\" class=\"headerlink\" title=\"7. 简述 transform，transition，animation 的作用\"></a>7. 简述 transform，transition，animation 的作用</h2><ol>\n<li><code>transform</code>：描述了元素的静态样式，本身不会呈现动画效果，可以对元素进行旋转 rotate、扭曲 skew、缩放 scale 和移动 translate 以及矩阵变形 matrix。<code>transition</code> 和 <code>animation</code> 两者都能实现动画效果。<code>transform</code> 常配合<code>transition</code> 和 <code>animation</code> 使用。</li>\n<li><code>transition</code>：样式过渡，从一种效果逐渐改变为另一种效果，它是一个合写属性。transition: transition-property  transition-duration  transition-timing-function  transition-delay 从左到右，依次是：过渡效果的css属性名称、过渡效果花费时间、速度曲线、过渡开始的延迟时间  <code>transition</code> 通常和 hover 等事件配合使用，需要由事件来触发过渡。</li>\n<li><code>animation</code>：动画，有 <code>@keyframes</code> 来描述每一帧的样式。</li>\n</ol>\n<p>区别：</p>\n<ul>\n<li><code>transform</code> 仅描述元素的静态样式，常配合<code>transition</code> 和 <code>animation</code> 使用。</li>\n<li><code>transition</code> 通常和 hover 等事件配合使用；<code>animation</code> 是自发的，立即播放。</li>\n<li><code>animation</code> 可以设置循环次数。</li>\n<li><code>animation</code> 可以设置每一帧的样式和时间，<code>transition</code> 只能设置头尾。</li>\n<li><code>transition</code> 可以与 js 配合使用， js 设定要变化的样式，<code>transition</code> 负责动画效果。</li>\n</ul>\n<h2 id=\"8-line-height-如何继承？\"><a href=\"#8-line-height-如何继承？\" class=\"headerlink\" title=\"8. line-height 如何继承？\"></a>8. line-height 如何继承？</h2><ul>\n<li>父元素的 <code>line-height</code> 是具体数值，则子元素 <code>line-height</code> 继承该值。</li>\n<li>父元素的 <code>line-height</code> 是比例值，如’2’，则子元素 <code>line-height</code> 继承该比例。</li>\n<li>父元素的 <code>line-height</code> 是百分比，则子元素 <code>line-height</code> 继承的是父元素的 font-size * 百分比 计算出来的值。</li>\n</ul>\n<h2 id=\"9-如何让-chrome-支持-10px-的文字？\"><a href=\"#9-如何让-chrome-支持-10px-的文字？\" class=\"headerlink\" title=\"9. 如何让 chrome 支持 10px 的文字？\"></a>9. 如何让 chrome 支持 10px 的文字？</h2><ol>\n<li>font-size: 12px; -webkit-transform: scale(0.84);</li>\n<li>font-size: 20px; -webkit-transform: scale(0.5);</li>\n</ol>\n<h2 id=\"10-position-属性的值有哪些？\"><a href=\"#10-position-属性的值有哪些？\" class=\"headerlink\" title=\"10. position 属性的值有哪些？\"></a>10. position 属性的值有哪些？</h2><ol>\n<li><code>static</code>：默认定位。元素出现在正常的文档流中（忽略top，bottom，left，right 或 z-index声明）</li>\n<li><code>relative</code>：相对定位。如果对一个元素进行相对定位，将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，使其“相对于”它的起点进行移动。使用相对定位时，无论是否移动，元素仍然占据原来的空间；移动元素会导致其覆盖其他元素。</li>\n<li><code>absolute</code>：绝对定位。元素的位置相对于最近的已定位的父元素，如果元素没有已定位的父元素，则相对于根元素（即 html 元素）定位。绝对定位的元素会脱离文档流，不占据空间，会与其他元素重叠。</li>\n<li><code>fixed</code>：固定定位。元素的位置相对于浏览器窗口是固定位置，即使窗口滚动它也不会移动。固定定位的元素会脱离文档流，不占据空间，会与其他元素重叠。</li>\n<li><code>sticky</code>：粘性定位。粘性定位可以被认为是相对定位和固定定位的混合，元素在跨越特定阈值前为相对定位，之后为固定定位。top，right，buttom，left，必须指定这四个阈值中的一个，才可以使粘性定位生效，否则行为与其相对定位相同。</li>\n<li><code>inherit</code>：规定应该从父元素继承 position 属性的值。</li>\n</ol>\n<h2 id=\"11-css-盒模型？\"><a href=\"#11-css-盒模型？\" class=\"headerlink\" title=\"11. css 盒模型？\"></a>11. css 盒模型？</h2><ul>\n<li><code>标准盒模型</code>，width 指 content 部分的宽度，总宽度 = width + border(左右) + padding（左右）+ margin（左右）；高度同理。</li>\n<li><code>怪异盒模型（IE盒模型）</code>，width 指 content + border（左右） + padding（左右）三部分的宽度，因此，总宽度 = width + margin（左右）；高度同理。</li>\n</ul>\n<h2 id=\"12-box-sizing-属性\"><a href=\"#12-box-sizing-属性\" class=\"headerlink\" title=\"12. box-sizing 属性\"></a>12. box-sizing 属性</h2><ol>\n<li><code>content-box</code>，对应标准盒模型。</li>\n<li><code>border-box</code>，IE盒模型。</li>\n<li><code>inherit</code>，继承父元素的 box-sizing 值。</li>\n</ol>\n<h2 id=\"13-BFC（块级格式上下文）\"><a href=\"#13-BFC（块级格式上下文）\" class=\"headerlink\" title=\"13. BFC（块级格式上下文）\"></a>13. BFC（块级格式上下文）</h2><ol>\n<li>概念： BFC（Block Formatting Context），块级格式上下文。BFC 是 css 布局的一个概念，是一个独立的渲染区域，规定了内部 box 如何布局，且这个区域内的子元素不会影响到外面的元素。</li>\n<li>布局规则：</li>\n</ol>\n<ul>\n<li>内部的 box 会在垂直方向一个接一个的放置</li>\n<li>box 垂直方向的距离由 margin 决定，同一个 BFC 相邻的 box 的 margin 会发生重叠</li>\n<li>每个 box 的 margin 左边，与包含块的左 border 相接触（对于从左往右的格式化，否则相反）</li>\n<li>BFC 的区域不会与 float box 重叠</li>\n<li>BFC 是一个独立容器，容器内的子元素不会影响到外面的元素</li>\n<li>计算 BFC 高度时，浮动元素也参与计算高度</li>\n</ul>\n<ol>\n<li>如何创建 BFC ？</li>\n</ol>\n<ul>\n<li>根元素，即 html 元素</li>\n<li>float 值不为 none</li>\n<li>position 值为 absolute 或 fixed</li>\n<li>display 的值为 inline-block、tabl-cell、table-caption</li>\n<li>overflow 的值不为 visible</li>\n</ul>\n<ol>\n<li>BFC 的使用场景</li>\n</ol>\n<ul>\n<li>去除边距重叠问题</li>\n<li>清除浮动（让父元素的高度包含子浮动元素）</li>\n<li>阻止元素被浮动元素覆盖</li>\n</ul>\n<h2 id=\"14-让一个元素水平-垂直居中\"><a href=\"#14-让一个元素水平-垂直居中\" class=\"headerlink\" title=\"14. 让一个元素水平/垂直居中\"></a>14. 让一个元素水平/垂直居中</h2><ol>\n<li>水平居中</li>\n</ol>\n<ul>\n<li>行内元素：<code>text-align: center;</code></li>\n<li>对于确定宽度的块级元素<ul>\n<li>width 和 margin 实现： <code>mragin: 0 auto;</code></li>\n<li>绝对定位和 margin-left 实现： <code>margin-left: (父width - 子 width)/2；</code>(前提是父元素相对定位)</li>\n</ul>\n</li>\n<li>对于宽度未知的块级元素<ul>\n<li>table 标签配合 margin 左右 auto 实现</li>\n<li>inline-block 实现：<code>display: inline-block; text-align: center;</code></li>\n<li>绝对定位和 transform 实现， translateX 可以移动本身元素的50%</li>\n<li>flex 布局 <code>justify-content: center</code></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>垂直居中</li>\n</ol>\n<ul>\n<li>纯文字类，设置 line-height 等于 height</li>\n<li>子绝父相，子元素通过 margin 实现自适应居中</li>\n<li>子绝父相，通过位移 transform 实现</li>\n<li>flex 布局，<code>align-items: center;</code></li>\n<li>table 布局，父级通过转换为表格形式，子级设置 vertical-align 实现</li>\n</ul>\n<h2 id=\"15-flex-布局\"><a href=\"#15-flex-布局\" class=\"headerlink\" title=\"15. flex 布局\"></a>15. flex 布局</h2><p>flex 布局，是一种弹性盒布局模型，给子元素提供了空间分布和对齐能力，由<code>container</code>（容器）及<code>item</code>（项目）组成。该布局模型提供了一种更加高效的方式来对容器中的项目进行布局、对齐和分配空间。适用于在不同尺寸的屏幕中创建可自动扩展和收缩布局，通常可用于<code>水平/垂直居中</code>，<code>两栏</code>、<code>三栏布局</code>等的场景里。</p>\n<p>其中<code>flex</code>属性是<code>flex-grow</code>，<code>flex-shrink</code>和<code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。<strong>该属性有两个快捷值：<code>auto (1 1 auto)</code> 和 <code>none (0 0 auto)</code>。</strong></p>\n<ul>\n<li><code>flex-grow</code>：定义项目的放大比例，默认值为 0，即如果存在剩余空间，也不放大。如果所有项目的<code>flex-grow</code>属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。</li>\n<li><code>flex-shrink</code>：项目的缩小比例，默认为 1，即如果空间不足，项目将缩小。如果所有项目的<code>flex-shrink</code>属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为 0，其他项目都为 1，则空间不足时，前者不缩小。</li>\n<li><code>flex-basis</code>：定义了在分配多余空间之前，项目占据的主轴空间。浏览器会根据该属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。当设置为 0 的是，会根据内容撑开。也可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如 350px），则项目将占据固定空间。</li>\n</ul>\n<p><code>flex</code>常用的属性值：</p>\n<ul>\n<li>flex: 1 –&gt; flex: 1 1 0%</li>\n<li>flex: 2 –&gt; flex: 2 1 0%</li>\n<li>flex: auto –&gt; flex: 1 1 auto</li>\n<li>flex: none –&gt; flex: 0 0 auto【常用于固定尺寸不伸缩】</li>\n</ul>\n<h2 id=\"16-清除浮动\"><a href=\"#16-清除浮动\" class=\"headerlink\" title=\"16. 清除浮动\"></a>16. 清除浮动</h2><ol>\n<li><p>直接把 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>作为最后一个子标签</p>\n<ul>\n<li>优点：通俗易懂，容易掌握；</li>\n<li>缺点：会添加较多无意义的空标签，有违结构与表现的分离，在后期维护中将是噩梦</li>\n</ul>\n</li>\n<li><p>.clearfix { overflow: hidden; zoom: 1; }</p>\n<ul>\n<li>优点：不存在结构和语义化问题，代码量极少</li>\n<li>缺点：内容增多时容易造成不自动换行，导致内容被隐藏掉，无法显示需要溢出的元素</li>\n</ul>\n</li>\n<li><p>建立伪类选择器</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/why862555625/images/main/images/98e2353e3275475095bd26ecedfa32e9%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp\" alt=\"image.png\"></p>\n<h2 id=\"17-css-中优雅降级和渐进增强有什么区别？\"><a href=\"#17-css-中优雅降级和渐进增强有什么区别？\" class=\"headerlink\" title=\"17. css 中优雅降级和渐进增强有什么区别？\"></a>17. css 中优雅降级和渐进增强有什么区别？</h2><p>优雅降级和渐进增强是随着 css3 流出来的一个概念。由于低级浏览器不支持 css3， 但 css3 的效果又很优秀不忍放弃，所以在高级浏览器中使用 css3 ，而在低级浏览器只保证最基本的功能。二者最关键的区别是它们所侧重的内容，以及这种不同所造成的工作流程的差异。</p>\n<ul>\n<li><code>优雅降级</code>：一开始就构建完整的功能，然后针对浏览器测试和修复。</li>\n<li><code>渐进增强</code>：一开始就针对低版本浏览器进行构建页面，完成基本的功能，然后再针对高级浏览器进行效果、交互、追加功能以达到更好的体验。</li>\n</ul>\n<h2 id=\"18-img-的-alt-和-title-的异同？实现图片懒加载的原理？\"><a href=\"#18-img-的-alt-和-title-的异同？实现图片懒加载的原理？\" class=\"headerlink\" title=\"18. img 的 alt 和 title 的异同？实现图片懒加载的原理？\"></a>18. img 的 alt 和 title 的异同？实现图片懒加载的原理？</h2><ul>\n<li><code>alt</code>是图片加载失败时显示在网页上的替代文字；<code>title</code>是鼠标放在图片上面时显示的文字，是对图片的进一步描述和说明。</li>\n<li><code>alt</code>是 img 的必要属性；<code>title</code>不是。</li>\n<li>对于网站 SEO 优先来说，搜索引擎对图片意思的判断，主要是靠<code>alt</code>属性，所以在图片<code>alt</code>属性中以简要文字说明，同时包含关键字，也是页面优化的一部分。</li>\n</ul>\n<p><code>懒加载原理</code>：先设置图片的 <code>data-set</code> 属性值（也可以是其他任意的，只要不发生 http 请求就可以，作用是为了存取值）为图片路径，由于不是 <code>src</code> 属性，故不会发生 http 请求。然后计算出页面的 scrollTop 的高度和浏览器的高度之和，如果图片距页面顶端距离小于前两者之和，说明图片要显示出来了，这时将 <code>data-set</code> 属性替换为 <code>src</code> 属性即可。</p>\n<h2 id=\"19-css-sprites-（雪碧图-精灵图）\"><a href=\"#19-css-sprites-（雪碧图-精灵图）\" class=\"headerlink\" title=\"19. css sprites （雪碧图/精灵图）\"></a>19. css sprites （雪碧图/精灵图）</h2><p>css sprites 就是把网页中一些小图片整合到一张图片文件中，再利用 css 的 background-image、background-repeat、background-position 的组合进行背景定位。</p>\n<p>优点： 减少图片体积；减少 http 请求次数</p>\n<p>缺点：维护比较麻烦；不能随便改变大小，会失真模糊</p>\n<h2 id=\"20-什么是字体图标？\"><a href=\"#20-什么是字体图标？\" class=\"headerlink\" title=\"20. 什么是字体图标？\"></a>20. 什么是字体图标？</h2><p>字体图标简单的说，就是一种特殊的字体，通过这种字体，显示给用户的就像一个个图片一样。字体图标最大的好处，在于它不会变形和加载速度快。字体图标可以像文字一样，随意通过 css 来控制它的大小和颜色，非常方便。</p>\n<h2 id=\"21-主流浏览器内核私有属性-css-前缀？\"><a href=\"#21-主流浏览器内核私有属性-css-前缀？\" class=\"headerlink\" title=\"21. 主流浏览器内核私有属性 css 前缀？\"></a>21. 主流浏览器内核私有属性 css 前缀？</h2><ul>\n<li>mozilla(firefox、flock等): -moz</li>\n<li>webkit 内核(safari、chrome等): -webkit</li>\n<li>opera 内核(opera浏览器): -o</li>\n<li>trident 内核(ie 浏览器): -ms</li>\n</ul>"},{"title":"JS复习","keywords":"前端,面试,JS","description":"JS复习记录","top_img":"设置false不显示顶部图片","sticky":"数值越大越靠前","cover":"首页封面","comments":1,"abbrlink":"d9795d86","date":"2023-05-23T07:21:13.000Z","updated":"2023-05-23T07:21:13.000Z","_content":"\nJS复习记录\n\n<!-- more -->\n# 1. JS 的数据类型有哪些？\n- 基本数据类型（值类型）：Number、String、Boolean、Null、Undefined、Symbol、BigInt。保存在栈内存中。\n- 复杂数据类型（引用类型）：Object、Function、Array、RegExp、Date 基本包装类型及单体内置对象(Global、Math)等。\n\n>基本数据类型保存在栈里面，可以直接访问它的值；引用数据类型保存在堆里面，栈里面保存的是地址，通过栈里面的地址去访问堆里面的值。\n\n# 2.null 和 undefined 的区别？\n- null表示一个对象被定义了，值为“空值”。用法：\n① 作为函数的参数，表示该函数的参数不是对象。\n② 作为对象原型链的终点。\n- undefined表示不存在这个值。就是此处应该有一个值，但是还没有定义，当尝试读取时就会返回 undefined。用法：\n① 函数没有返回值时，默认返回 undefined。\n② 变量已声明，没有赋值时，为 undefined。\n③ 对象中没有赋值的属性，该属性的值为 undefined。\n④ 调用函数时，应该提供的参数没有提供，该参数等于 undefined。\n\n# 3. 如何判断 JS 的数据类型？\n\n\n\n## 1.typeof\n\ntypeof可以区分除了Null类型以外的其他基本数据类型，以及从对象类型中识别出函数（function）。\n其返回值有：number、string、boolean、undefined、symbol、bigint、function、object。\n其中, typeof null返回 \"object\"\n如果要识别null，可直接使用===全等运算符来判断。\n\n```js\ntypeof 1 // 'number'\ntypeof '1' // 'string'\ntypeof true // 'boolean'\ntypeof undefined // 'undefined'\ntypeof Symbol() // 'symbol'\ntypeof null // 'object'\ntypeof [] // 'object'\ntypeof {} // 'object'\ntypeof console // 'object'\ntypeof console.log // 'function'\n\n```\n\n## 2.instanceof\ninstanceof一般是用来判断引用数据类型，但不能正确判断基本数据类型，根据在原型链中查找判断当前数据的原型对象是否存在返回布尔类型。\n```js\n1 instanceof Number; // false\ntrue instanceof Boolean; // false\n'str' instanceof String; // false\n[] instanceof Array; // true\nfunction(){} instanceof Function; // true\n{} instanceof Object; // true\nlet date = new Date();\ndate instance of Date; // true\n```\n\n## 3. Object.prototype.toString\n\n```js\nObject.prototype.toString({}) // \"[object Object]\"\nObject.prototype.toString.call({}) // 同上结果，加上call也ok\nObject.prototype.toString.call(1) // \"[object Number]\"\nObject.prototype.toString.call('1') // \"[object String]\"\nObject.prototype.toString.call(true) // \"[object Boolean]\"\nObject.prototype.toString.call(function () {}) // \"[object Function]\"\nObject.prototype.toString.call(null) //\"[object Null]\"\nObject.prototype.toString.call(undefined) //\"[object Undefined]\"\nObject.prototype.toString.call(/123/g) //\"[object RegExp]\"\nObject.prototype.toString.call(new Date()) //\"[object Date]\"\nObject.prototype.toString.call([]) //\"[object Array]\"\nObject.prototype.toString.call(document) //\"[object HTMLDocument]\"\nObject.prototype.toString.call(window) //\"[object Window]\"\n```\n## 4. Array.isArray\nArray.isArray(value)可以判断 value 是否为数组。\n\n```js\nArray.isArray([]); // true\nArray.isArray({}); // false\nArray.isArray(1); // false\nArray.isArray('string'); // false\nArray.isArray(true); // false\n```\n# 3.如何遍历对象的属性？\n- 遍历自身可枚举的属性（可枚举、非继承属性）：Object.keys() 方法,该方法会返回一个由给定对象的自身可枚举属性组成的数组。\n- 遍历自身的所有属性（可枚举、不可枚举、非继承属性）：Object.getOwnPropertyNames()方法，该方法会返回一个由指定对象的所有自身属性组成的数组\n- 遍历可枚举的自身属性和继承属性：for ... in ...\n\n# 4. == 和 === 的区别？\n- ==：两个等号称为等值符，当等号两边的值为相同类型时比较值是否相同，类型不同时会发生类型的自动转换，转换为相同的类型后再做比较。\n- ===：三个等号称为等同符，当等号两边的值为相同类型时，直接比较等号两边的值，值相同则返回 true；若等号两边值的类型不同时直接返回 false。也就是三个等号既要判断类型也要判断值是否相等。\n\n# 5.如何判断两个对象是否相等？\n 1. Object.is(obj1, obj2)，判断两个对象都引用地址是否一致，true 则一致，false 不一致。\n\n2. 判断两个对象内容是否一致，思路是遍历对象的所有键名和键值是否都一致\n① 判断两个对象是否指向同一内存\n② 使用 Object.getOwnPropertyNames 获取对象所有键名数组\n③ 判断两个对象的键名数组是否相等\n④ 遍历键名，判断键值是否都相等\n\n```js\nfunction isObjValueEqual(a, b) {\n  // 判断两个对象是否指向同一内存，指向同一内存返回 true\n  if (a === b) return true;\n  // 获取两个对象的键名数组\n  let aProps = Object.getOwnPropertyNames(a);\n  let bProps = Object.getOwnPropertyNames(b);\n  // 判断两键名数组长度是否一致，不一致返回 false\n  if (aProps.length !== bProps.length) return false;\n  // 遍历对象的键值\n  for (let prop in a) {\n    // 判断 a 的键名，在 b 中是否存在，不存在，直接返回 false\n    if (b.hasOwnProperty(prop)) {\n      // 判断 a 的键值是否为对象，是对象的话需要递归；\n      // 不是对象，直接判断键值是否相等，不相等则返回 false\n      if (typeof a[prop] === 'object') {\n        if (!isObjValueEqual(a[prop], b[prop])) return false;\n      } else if (a[prop] !== b[prop]){\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n  return true;\n}\n```\n\n# 6. 强制类型转换和隐式类型转换有哪些\n- 强制：\n转换成字符串: toString()、String()\n转换成数字：Number()、parseInt()、parseFloat()\n转换成布尔类型：Boolean()\n- 隐式：\n拼接字符串：let str = 1 + \"\";\n\n# 7. JS 中的作用域和作用域链\n\n- 作用域，即变量（变量作用域又称上下文）和函数生效（能被访问）的区域或集合。作用域决定了代码区块中变量和其他资源的可见性。一般可分为：全局作用域、局部作用域（函数作用域）、块级作用域。\n\n- 全局作用域：任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问。\n- 局部作用域：也叫做函数作用域，如果一个变量是在函数内部声明的，它就在一个函数作用域下面。这些变量只能在函数内部访问，不能在函数以外去访问。\n块级作用域：凡是代码块就可以划分变量的作用域，这种作用域的规则就叫做块级作用域。\n\n- 作用域链：当在 JS 中使用一个变量时，JS 引擎会尝试在当前作用域下寻找该变量，如果没找到，再到它的上层作用域寻找，以此类推，直至找到该变量或是查找至全局作用域，如果在全局作用域里仍然找不到该变量，它就会在全局范围内隐式声明该变量(非严格模式下)或是直接报错。\n- js 采用的是静态作用域，所以函数的作用域在函数定义时就确定了\n\n# 8. JS 的预解析\n\nJS 代码的执行是由浏览器中的 JS 解析器来执行的，JS 解析器执行 JS 代码时，分为两个过程：预解析过程和代码执行过程。预解析分为变量预解析（变量提升）和函数预解析（函数提升）；代码执行是指按顺序从上至下执行。\n\n- 变量提升：把变量的声明提升到当前作用域的最前面，只提升声明，不提升赋值；\n- 函数提升：把函数的声明提升到当前作用域的最前面，只提升声明，不提升调用；\n\n>函数表达式的写法不存在函数提升\n\n>函数提升优先级高于变量提升，即函数提升在变量提升之上，且不会被同名变量声明时覆盖，但是会被同名变量赋值后覆盖\n\n# 9. 原型和原型链\n\nJS是面向对象的，每个实例对象都有一个__proto__属性，该属性指向它的原型对象。该实例的构造函数有一个原型属性prototype，与实例的__proto__属性指向同一个对象。同时，原型对象的constructor 指向构造函数本身。\n\n当一个对象在查找一个属性时，自身没有就会根据__proto__属性向它的原型进行查找，如果还是没有，则向它的原型的原型继续查找，直至查到Object.prototype.__proto__也就是null，这样就形成了原型链。\n\n# 10. 闭包\n\n在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。可以在一个内层函数中访问到其外层函数的作用域。\n\n闭包就是能够读取其他函数内部变量的函数。主要作用是解决变量污染问题，也可以用来延长局部变量的生命周期。\n- 优点：延长局部变量的生命周期\n- 缺点：会导致函数的变量一直保存在内存中，过多的闭包可能会导致内存泄漏\n\n# 11. new 操作符的实现机制\n\n1. 首先创建了一个新的空对象\n2. 设置原型，将对象的原型设置为函数的prototype对象。\n3. 让函数的this指向这个对象，执行构造函数的代码（为这个新对象添加属性）\n4. 判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象。\n\n```js\nfunction myNew(context) {\n  const obj = new Object();\n  obj.__proto__ = context.prototype;\n  const res = context.apply(obj, [...arguments].slice(1));\n  return typeof res === \"object\" ? res : obj;\n}\n```\n# 12. this 的理解？\n\n1. 概念：\nthis是 JS 的一个关键字，它是函数运行时，自动生成的一个内部对象，只能在函数内部使用，随着函数使用场合的不同，this的值会发生变化，但有一个总的原则：this指的是调用函数的那个对象。\n2. this的指向：\n- ① 作为普通函数执行时，this指向window，但在严格模式下this指向undefined。\n- ② 函数作为对象里的方法被调用时，this指向该对象.\n- ③ 当用new运算符调用构造函数时，this指向返回的这个对象。\n- ④ 箭头函数的this绑定看的是this所在函数定义在哪个对象下，就绑定哪个对象。- 如果存在嵌套，则this绑定到最近的一层对象上。\n- ⑤ call()、apply()、bind()是函数的三个方法，都可以显式的指定调用函数的this指向。\n\n\n # 13.call、apply、bind的区别以及手写实现\n\n- `call()`可以传递两个参数，第一个参数是指定函数内部中`this`的指向，第二个参数是函数调用时需要传递的参数。改变`this`指向后原函数会立即执行，且此方法只是临时改变`this`指向一次。\n\n```javascript\njavascript复制代码// 实现call方法\nFunction.prototype.myCall = function (context) {\n  // 判断调用对象\n  if (typeof this != \"function\") {\n    throw new Error(\"type error\");\n  }\n  // 首先获取参数\n  let args = [...arguments].slice(1);\n  let res = null;\n  // 判断context是否传入，如果没有，就设置为window\n  context = context || window;\n  // 将被调用的方法置入context的属性\n  // this 即为要调用的方法\n  context.fn = this;\n  // 执行要被调用的方法\n  res = context.fn(...args);\n  // 删除手动增加的属性方法\n  delete context.fn;\n  // 执行结果返回\n  return res;\n}\n```\n\n- `apply()`接受两个参数，第一个参数是`this`的指向，第二个参数是函数接受的参数，以`数组`的形式传入。改变`this`指向后原函数会立即执行，且此方法只是临时改变`this`指向一次。\n\n```javascript\njavascript复制代码// 实现apply方法\nFunction.prototype.myApply = function(context) {\n  if (typeof this != \"function\") {\n    throw new Error(\"type error\");\n  }\n  let res = null;\n  context = context || window;\n  // 使用 symbol 来保证属性唯一\n  // 也就是保证不会重写用户自己原来定义在context中的同名属性\n  const fnSymbol = Symbol();\n  context[fnSymbol] = this;\n  // 执行被调用的方法\n  if (arguments[1]) {\n    res = context[fnSymbol](...arguments[1]);\n  } else {\n    res = context[fnSymbol]();\n  }\n  delete context[fnSymbol];\n  return res;\n}\n```\n\n- `bind()`方法的第一参数也是`this`的指向，后面传入的也是一个参数列表(但是这个参数列表可以分多次传入)。改变`this`指向后不会立即执行，而是返回一个永久改变`this`指向的函数。\n\n```javascript\njavascript复制代码// 实现bind方法\nFunction.prototype.myBind = function (context) {\n  if (typeof this != \"function\") {\n    throw new Error(\"type error\");\n  }\n  let args = [...arguments].slice(1);\n  const fn = this;\n  return function Fn() {\n    return fn.apply(\n      this instanceof Fn ? this : context,\n      // 当前这个 arguments 是指 Fn 的参数\n      args.concat(...arguments)\n    );\n  };\n}\n```\n\n------\n\n共同点：改变函数执行时的上下文，简而言之就是改变函数运行时的`this`指向。\n 不同：\n\n- `call()`和`bind()`第二个参数是列表形式的；`apply()`第二个参数是数组形式。\n- `call()`和`apply()`是立即执行；`bind()`不会立即执行而是生成一个修改`this`之后的新函数。\n\n# 14. 箭头函数\n\n1. 箭头函数是定义函数一种新的方式，比普通函数定义更加方便和简单。\n2. 箭头函数不绑定`this`，会捕获其所在上下文的`this`，作为自己的`this`。\n3. 箭头函数不能用作构造函数，也就是说不可以使用`new`命令，否则会抛出错误。\n4. 箭头函数不绑定`arguments`，取而代之用`rest`参数解决，同时没有`super`和`new.target`。\n5. 使用`call`，`apply`，`bind`并不会改变箭头函数中的`this`指向。对箭头函数使用`call`或`apply`方法时，只会传入参数并调用函数；对箭头函数使用`bind`方法时，只会返回一个预设参数的新函数，并不会改变这个新函数的`this`指向。\n\n## \n\n# 15. 浅拷贝和深拷贝的实现\n\n\n\n`浅拷贝`：如果属性是基本类型，拷贝的就是基本类型的值；如果属性是引用类型，拷贝的就是内存地址。即浅拷贝是`拷贝一层`，深层次的引用类型则共享内存地址。常用的方法有：object.assign，扩展运算符等等\n\n```ini\nini复制代码var a = { count: 1, deep: { count: 2 } };\nvar b = Object.assign({}, a);\n// 或者\nvar c = {...a};\n\n// 实现一个浅拷贝\nfunction shallowClone(obj) {\n  const newObj = {};\n  for (let prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      newObj[prop] = obj[prop];\n    }\n  }\n  return newObj\n}\n```\n\n`深拷贝`：开辟一个新的栈，两个对象的属性完全相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性。\n\n```javascript\njavascript复制代码/**\n * 深拷贝\n * @param {Object} obj 要拷贝的对象\n * @param {Map} map 用于存储循环引用对象的地址\n */\n\nfunction deepClone(obj = {}, map = new Map()) {\n  if (obj === null) return obj // 如果是null或者undefined我就不进行拷贝操作\n  if (obj instanceof Date) return new Date(obj)\n  if (obj instanceof RegExp) return new RegExp(obj)\n  // 可能是对象或者普通的值  如果是函数的话是不需要深拷贝\n  if (typeof obj !== 'object') return obj\n  if (map.get(obj)) {\n    return map.get(obj);\n  }\n  let result = {}; // 初始化返回结果\n  if (\n    obj instanceof Array ||\n    // 加 || 的原因是为了防止 Array 的 prototype 被重写，Array.isArray 也是如此\n    Object.prototype.toString(obj) === \"[object Array]\"\n  ) {\n    result = [];\n  }\n  // 防止循环引用\n \n  for (const key in obj) {\n    // 保证 key 不是原型属性\n    if (obj.hasOwnProperty(key)) {\n      // 递归调用\n      result[key] = deepClone(obj[key], map);\n    }\n  }\n  return result;\n}\n```\n\n\n\n\n\n # 16. JavaScript 中内存泄漏的几种情况\n\n`内存泄漏`一般是指系统进程不再用到的内存，没有及时释放，造成内存资源浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。\n\n造成内存泄漏的原因有：\n\n1. `全局变量。`在局部作用域中，函数执行完毕后，变量就没有存在的必要了，垃圾回收机制很快的做出判断并回收；但是对于全局变量，很难判断什么时候不用这些变量，无法正常回收。\n    解决办法：\n    ① 尽量少使用全局变量；\n    ② 使用严格模式，在 js 文件头部或者函数的顶部加上`use strict`。\n2. `闭包引起的内存泄露。`闭包可以读取函数内部的变量，然后让这些变量始终保存在内存中，如果在使用结束后没有将局部变量清除，就可能导致内存泄露。\n    解决办法：将事件处理函数定义在外部，解除闭包。\n3. `被遗忘的定时器。`定时器`setInterval`或者`setTimeout`不再需要使用时，且没有被清除，导致定时器的回调函数及其内部依赖的变量都不能被回收，就会造成内存泄漏。\n    解决办法：当不需要定时器的时候，调用`clearInterval`或者`clearTimeout`手动清除。\n4. `事件监听。`垃圾回收机制不好判断事件是否需要被解除，导致`callback`不能被释放，此时需要手动解除绑定。\n    解决办法：及时使用`removeEventListener`移除事件监听。\n5. `元素引用没有清理。`\n    解决办法：移除元素后，手动设置元素的引用为`null`。\n6. `console`。传递给`console.log`的对象是不能被垃圾回收，可能会存在内存泄漏。\n    解决办法：清除不必要的`console`。\n\n# 17. 防抖和节流的区别，以及手写实现\n\n\n\n\n\n`防抖`：多次触发事件，事件处理函数只执行一次，并且是在触发操作结束时执行。也就是说，当一个事件被触发，准备执行事件函数前，会等待一定的时间，在这个等待时间内，如果没有再次被触发，那么就执行，如果又触发了，那就本次作废，重置等待时间，直到最终能执行。\n 主要应用场景：搜索框搜索输入，用户最后一次输入完，再发送请求；手机号、邮箱验证输入检测\n\n`节流`：事件触发后，规定时间内，事件处理函数不能再次被调用。也就是说在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。\n 主要应用场景：高频点击、表单重复提交等。\n\n```javascript\njavascript复制代码/*** 防抖函数 n 秒后再执行该事件，若在 n 秒内被重复触发，则重新计时\n   * @param func 要被防抖的函数\n   * @param wait 规定的时间\n   */\nfunction debounce(func, wait) {\n  let timeout;\n  return function () {\n    let context = this; // 保存this指向\n    let args = arguments; // 拿到event对象\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      func.apply(context, args)\n    }, wait)\n  }\n}\n/*** 节流函数 n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效\n   * @param fn 要被节流的函数\n   * @param wait 规定的时间\n   */\nfunction throttled(fn, wait) {\n  let timer = null;\n  return function (...args) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        timer = null;\n      }, wait);\n    }\n  }\n}\n```\n\n# 18. EventLoop 事件循环\n\njs 是单线程运行的，当遇到一个异步事件后并不会一直等待其返回结果，而是会将这个事件挂起，继续执行执行栈中的其他任务。当一个异步事件返回结果后，js会将这个事件加入与当前执行栈不同的另一个队列--`事件队列（Task Queue）`。被放入事件队列不会立刻执行其回调，而是等待当前执行栈中的所有任务都执行完毕， 主线程处于闲置状态时，主线程会去查找事件队列是否有任务。如果有，那么主线程会从中取出排在第一位的事件，并把这个事件对应的回调放入执行栈中，然后执行其中的同步代码...，如此反复，这样就形成了一个无限的循环，这个过程被称为`事件循环（Event Loop）`。\n\n实际上,异步任务之间并不相同，它们的执行优先级也有区别。异步任务分两类：`微任务（micro task`）和`宏任务（macro task）`。\n\n微任务包括： `promise 的回调`、node 中的 `process.nextTick` 、对 Dom 变化监听的 `MutationObserver`。\n\n宏任务包括： script 脚本的执行，`setTimeout` 、`setInterval` 和`setImmediate` 一类的定时事件，还有如 I/O 操作，UI 渲染等。\n\n在一个事件循环中，异步事件返回结果后会被放到一个事件队列中。然而，根据这个异步事件的类型，这个事件实际上会被对应的`宏任务队列`或者`微任务队列`中去。并且在当前执行栈为空的时候，主线程会查看微任务队列是否有事件存在。如果不存在，那么再去宏任务队列中取出一个事件并把对应的回调加入当前执行栈；如果存在，则会依次执行队列中事件对应的回调，直到微任务队列为空，然后去宏任务队列中取出最前面的一个事件，把对应的回调加入当前执行栈...如此反复，进入循环。\n\n**在当前执行栈执行完毕时会立刻先处理所有微任务队列中的事件，然后再去宏任务队列中取出一个事件。同一次事件循环中，微任务永远在宏任务之前执行**。\n\n# 19. Promise\n\n`Promise`异步编程的一种解决方案。`Promise`是一个构造函数，接收一个函数作为参数，返回一个 Promise 实例。一个 Promise 实例有三种状态，分别是`pending`、`fulfilled`和`rejected`，分别代表了进行中、已成功和已失败。实例的状态只能由 pending 转变 fulfilled 或者 rejected 状态，并且状态一经改变，就无法再改变了。状态的改变是通过`resolve()`和`reject()`函数来实现的，可以在异步操作结束后调用这两个函数改变 Promise 实例的状态。Promise 的原型上定义了一个 `then`方法，使用这个 then 方法可以为两个状态的改变注册回调函数。这个回调函数属于微任务，会在本轮事件循环的末尾执行。\n\n","source":"_posts/js/JS复习.md","raw":"---\ntitle: JS复习\ntags:\n  - 前端\n  - JS\ncategories: JS\nkeywords: '前端,面试,JS'\ndescription: JS复习记录\ntop_img: 设置false不显示顶部图片\nsticky: 数值越大越靠前\ncover: 首页封面\ncomments: false评论\nabbrlink: d9795d86\ndate: 2023-05-23 15:21:13\nupdated: 2023-05-23 15:21:13\n---\n\nJS复习记录\n\n<!-- more -->\n# 1. JS 的数据类型有哪些？\n- 基本数据类型（值类型）：Number、String、Boolean、Null、Undefined、Symbol、BigInt。保存在栈内存中。\n- 复杂数据类型（引用类型）：Object、Function、Array、RegExp、Date 基本包装类型及单体内置对象(Global、Math)等。\n\n>基本数据类型保存在栈里面，可以直接访问它的值；引用数据类型保存在堆里面，栈里面保存的是地址，通过栈里面的地址去访问堆里面的值。\n\n# 2.null 和 undefined 的区别？\n- null表示一个对象被定义了，值为“空值”。用法：\n① 作为函数的参数，表示该函数的参数不是对象。\n② 作为对象原型链的终点。\n- undefined表示不存在这个值。就是此处应该有一个值，但是还没有定义，当尝试读取时就会返回 undefined。用法：\n① 函数没有返回值时，默认返回 undefined。\n② 变量已声明，没有赋值时，为 undefined。\n③ 对象中没有赋值的属性，该属性的值为 undefined。\n④ 调用函数时，应该提供的参数没有提供，该参数等于 undefined。\n\n# 3. 如何判断 JS 的数据类型？\n\n\n\n## 1.typeof\n\ntypeof可以区分除了Null类型以外的其他基本数据类型，以及从对象类型中识别出函数（function）。\n其返回值有：number、string、boolean、undefined、symbol、bigint、function、object。\n其中, typeof null返回 \"object\"\n如果要识别null，可直接使用===全等运算符来判断。\n\n```js\ntypeof 1 // 'number'\ntypeof '1' // 'string'\ntypeof true // 'boolean'\ntypeof undefined // 'undefined'\ntypeof Symbol() // 'symbol'\ntypeof null // 'object'\ntypeof [] // 'object'\ntypeof {} // 'object'\ntypeof console // 'object'\ntypeof console.log // 'function'\n\n```\n\n## 2.instanceof\ninstanceof一般是用来判断引用数据类型，但不能正确判断基本数据类型，根据在原型链中查找判断当前数据的原型对象是否存在返回布尔类型。\n```js\n1 instanceof Number; // false\ntrue instanceof Boolean; // false\n'str' instanceof String; // false\n[] instanceof Array; // true\nfunction(){} instanceof Function; // true\n{} instanceof Object; // true\nlet date = new Date();\ndate instance of Date; // true\n```\n\n## 3. Object.prototype.toString\n\n```js\nObject.prototype.toString({}) // \"[object Object]\"\nObject.prototype.toString.call({}) // 同上结果，加上call也ok\nObject.prototype.toString.call(1) // \"[object Number]\"\nObject.prototype.toString.call('1') // \"[object String]\"\nObject.prototype.toString.call(true) // \"[object Boolean]\"\nObject.prototype.toString.call(function () {}) // \"[object Function]\"\nObject.prototype.toString.call(null) //\"[object Null]\"\nObject.prototype.toString.call(undefined) //\"[object Undefined]\"\nObject.prototype.toString.call(/123/g) //\"[object RegExp]\"\nObject.prototype.toString.call(new Date()) //\"[object Date]\"\nObject.prototype.toString.call([]) //\"[object Array]\"\nObject.prototype.toString.call(document) //\"[object HTMLDocument]\"\nObject.prototype.toString.call(window) //\"[object Window]\"\n```\n## 4. Array.isArray\nArray.isArray(value)可以判断 value 是否为数组。\n\n```js\nArray.isArray([]); // true\nArray.isArray({}); // false\nArray.isArray(1); // false\nArray.isArray('string'); // false\nArray.isArray(true); // false\n```\n# 3.如何遍历对象的属性？\n- 遍历自身可枚举的属性（可枚举、非继承属性）：Object.keys() 方法,该方法会返回一个由给定对象的自身可枚举属性组成的数组。\n- 遍历自身的所有属性（可枚举、不可枚举、非继承属性）：Object.getOwnPropertyNames()方法，该方法会返回一个由指定对象的所有自身属性组成的数组\n- 遍历可枚举的自身属性和继承属性：for ... in ...\n\n# 4. == 和 === 的区别？\n- ==：两个等号称为等值符，当等号两边的值为相同类型时比较值是否相同，类型不同时会发生类型的自动转换，转换为相同的类型后再做比较。\n- ===：三个等号称为等同符，当等号两边的值为相同类型时，直接比较等号两边的值，值相同则返回 true；若等号两边值的类型不同时直接返回 false。也就是三个等号既要判断类型也要判断值是否相等。\n\n# 5.如何判断两个对象是否相等？\n 1. Object.is(obj1, obj2)，判断两个对象都引用地址是否一致，true 则一致，false 不一致。\n\n2. 判断两个对象内容是否一致，思路是遍历对象的所有键名和键值是否都一致\n① 判断两个对象是否指向同一内存\n② 使用 Object.getOwnPropertyNames 获取对象所有键名数组\n③ 判断两个对象的键名数组是否相等\n④ 遍历键名，判断键值是否都相等\n\n```js\nfunction isObjValueEqual(a, b) {\n  // 判断两个对象是否指向同一内存，指向同一内存返回 true\n  if (a === b) return true;\n  // 获取两个对象的键名数组\n  let aProps = Object.getOwnPropertyNames(a);\n  let bProps = Object.getOwnPropertyNames(b);\n  // 判断两键名数组长度是否一致，不一致返回 false\n  if (aProps.length !== bProps.length) return false;\n  // 遍历对象的键值\n  for (let prop in a) {\n    // 判断 a 的键名，在 b 中是否存在，不存在，直接返回 false\n    if (b.hasOwnProperty(prop)) {\n      // 判断 a 的键值是否为对象，是对象的话需要递归；\n      // 不是对象，直接判断键值是否相等，不相等则返回 false\n      if (typeof a[prop] === 'object') {\n        if (!isObjValueEqual(a[prop], b[prop])) return false;\n      } else if (a[prop] !== b[prop]){\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n  return true;\n}\n```\n\n# 6. 强制类型转换和隐式类型转换有哪些\n- 强制：\n转换成字符串: toString()、String()\n转换成数字：Number()、parseInt()、parseFloat()\n转换成布尔类型：Boolean()\n- 隐式：\n拼接字符串：let str = 1 + \"\";\n\n# 7. JS 中的作用域和作用域链\n\n- 作用域，即变量（变量作用域又称上下文）和函数生效（能被访问）的区域或集合。作用域决定了代码区块中变量和其他资源的可见性。一般可分为：全局作用域、局部作用域（函数作用域）、块级作用域。\n\n- 全局作用域：任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问。\n- 局部作用域：也叫做函数作用域，如果一个变量是在函数内部声明的，它就在一个函数作用域下面。这些变量只能在函数内部访问，不能在函数以外去访问。\n块级作用域：凡是代码块就可以划分变量的作用域，这种作用域的规则就叫做块级作用域。\n\n- 作用域链：当在 JS 中使用一个变量时，JS 引擎会尝试在当前作用域下寻找该变量，如果没找到，再到它的上层作用域寻找，以此类推，直至找到该变量或是查找至全局作用域，如果在全局作用域里仍然找不到该变量，它就会在全局范围内隐式声明该变量(非严格模式下)或是直接报错。\n- js 采用的是静态作用域，所以函数的作用域在函数定义时就确定了\n\n# 8. JS 的预解析\n\nJS 代码的执行是由浏览器中的 JS 解析器来执行的，JS 解析器执行 JS 代码时，分为两个过程：预解析过程和代码执行过程。预解析分为变量预解析（变量提升）和函数预解析（函数提升）；代码执行是指按顺序从上至下执行。\n\n- 变量提升：把变量的声明提升到当前作用域的最前面，只提升声明，不提升赋值；\n- 函数提升：把函数的声明提升到当前作用域的最前面，只提升声明，不提升调用；\n\n>函数表达式的写法不存在函数提升\n\n>函数提升优先级高于变量提升，即函数提升在变量提升之上，且不会被同名变量声明时覆盖，但是会被同名变量赋值后覆盖\n\n# 9. 原型和原型链\n\nJS是面向对象的，每个实例对象都有一个__proto__属性，该属性指向它的原型对象。该实例的构造函数有一个原型属性prototype，与实例的__proto__属性指向同一个对象。同时，原型对象的constructor 指向构造函数本身。\n\n当一个对象在查找一个属性时，自身没有就会根据__proto__属性向它的原型进行查找，如果还是没有，则向它的原型的原型继续查找，直至查到Object.prototype.__proto__也就是null，这样就形成了原型链。\n\n# 10. 闭包\n\n在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。可以在一个内层函数中访问到其外层函数的作用域。\n\n闭包就是能够读取其他函数内部变量的函数。主要作用是解决变量污染问题，也可以用来延长局部变量的生命周期。\n- 优点：延长局部变量的生命周期\n- 缺点：会导致函数的变量一直保存在内存中，过多的闭包可能会导致内存泄漏\n\n# 11. new 操作符的实现机制\n\n1. 首先创建了一个新的空对象\n2. 设置原型，将对象的原型设置为函数的prototype对象。\n3. 让函数的this指向这个对象，执行构造函数的代码（为这个新对象添加属性）\n4. 判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象。\n\n```js\nfunction myNew(context) {\n  const obj = new Object();\n  obj.__proto__ = context.prototype;\n  const res = context.apply(obj, [...arguments].slice(1));\n  return typeof res === \"object\" ? res : obj;\n}\n```\n# 12. this 的理解？\n\n1. 概念：\nthis是 JS 的一个关键字，它是函数运行时，自动生成的一个内部对象，只能在函数内部使用，随着函数使用场合的不同，this的值会发生变化，但有一个总的原则：this指的是调用函数的那个对象。\n2. this的指向：\n- ① 作为普通函数执行时，this指向window，但在严格模式下this指向undefined。\n- ② 函数作为对象里的方法被调用时，this指向该对象.\n- ③ 当用new运算符调用构造函数时，this指向返回的这个对象。\n- ④ 箭头函数的this绑定看的是this所在函数定义在哪个对象下，就绑定哪个对象。- 如果存在嵌套，则this绑定到最近的一层对象上。\n- ⑤ call()、apply()、bind()是函数的三个方法，都可以显式的指定调用函数的this指向。\n\n\n # 13.call、apply、bind的区别以及手写实现\n\n- `call()`可以传递两个参数，第一个参数是指定函数内部中`this`的指向，第二个参数是函数调用时需要传递的参数。改变`this`指向后原函数会立即执行，且此方法只是临时改变`this`指向一次。\n\n```javascript\njavascript复制代码// 实现call方法\nFunction.prototype.myCall = function (context) {\n  // 判断调用对象\n  if (typeof this != \"function\") {\n    throw new Error(\"type error\");\n  }\n  // 首先获取参数\n  let args = [...arguments].slice(1);\n  let res = null;\n  // 判断context是否传入，如果没有，就设置为window\n  context = context || window;\n  // 将被调用的方法置入context的属性\n  // this 即为要调用的方法\n  context.fn = this;\n  // 执行要被调用的方法\n  res = context.fn(...args);\n  // 删除手动增加的属性方法\n  delete context.fn;\n  // 执行结果返回\n  return res;\n}\n```\n\n- `apply()`接受两个参数，第一个参数是`this`的指向，第二个参数是函数接受的参数，以`数组`的形式传入。改变`this`指向后原函数会立即执行，且此方法只是临时改变`this`指向一次。\n\n```javascript\njavascript复制代码// 实现apply方法\nFunction.prototype.myApply = function(context) {\n  if (typeof this != \"function\") {\n    throw new Error(\"type error\");\n  }\n  let res = null;\n  context = context || window;\n  // 使用 symbol 来保证属性唯一\n  // 也就是保证不会重写用户自己原来定义在context中的同名属性\n  const fnSymbol = Symbol();\n  context[fnSymbol] = this;\n  // 执行被调用的方法\n  if (arguments[1]) {\n    res = context[fnSymbol](...arguments[1]);\n  } else {\n    res = context[fnSymbol]();\n  }\n  delete context[fnSymbol];\n  return res;\n}\n```\n\n- `bind()`方法的第一参数也是`this`的指向，后面传入的也是一个参数列表(但是这个参数列表可以分多次传入)。改变`this`指向后不会立即执行，而是返回一个永久改变`this`指向的函数。\n\n```javascript\njavascript复制代码// 实现bind方法\nFunction.prototype.myBind = function (context) {\n  if (typeof this != \"function\") {\n    throw new Error(\"type error\");\n  }\n  let args = [...arguments].slice(1);\n  const fn = this;\n  return function Fn() {\n    return fn.apply(\n      this instanceof Fn ? this : context,\n      // 当前这个 arguments 是指 Fn 的参数\n      args.concat(...arguments)\n    );\n  };\n}\n```\n\n------\n\n共同点：改变函数执行时的上下文，简而言之就是改变函数运行时的`this`指向。\n 不同：\n\n- `call()`和`bind()`第二个参数是列表形式的；`apply()`第二个参数是数组形式。\n- `call()`和`apply()`是立即执行；`bind()`不会立即执行而是生成一个修改`this`之后的新函数。\n\n# 14. 箭头函数\n\n1. 箭头函数是定义函数一种新的方式，比普通函数定义更加方便和简单。\n2. 箭头函数不绑定`this`，会捕获其所在上下文的`this`，作为自己的`this`。\n3. 箭头函数不能用作构造函数，也就是说不可以使用`new`命令，否则会抛出错误。\n4. 箭头函数不绑定`arguments`，取而代之用`rest`参数解决，同时没有`super`和`new.target`。\n5. 使用`call`，`apply`，`bind`并不会改变箭头函数中的`this`指向。对箭头函数使用`call`或`apply`方法时，只会传入参数并调用函数；对箭头函数使用`bind`方法时，只会返回一个预设参数的新函数，并不会改变这个新函数的`this`指向。\n\n## \n\n# 15. 浅拷贝和深拷贝的实现\n\n\n\n`浅拷贝`：如果属性是基本类型，拷贝的就是基本类型的值；如果属性是引用类型，拷贝的就是内存地址。即浅拷贝是`拷贝一层`，深层次的引用类型则共享内存地址。常用的方法有：object.assign，扩展运算符等等\n\n```ini\nini复制代码var a = { count: 1, deep: { count: 2 } };\nvar b = Object.assign({}, a);\n// 或者\nvar c = {...a};\n\n// 实现一个浅拷贝\nfunction shallowClone(obj) {\n  const newObj = {};\n  for (let prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      newObj[prop] = obj[prop];\n    }\n  }\n  return newObj\n}\n```\n\n`深拷贝`：开辟一个新的栈，两个对象的属性完全相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性。\n\n```javascript\njavascript复制代码/**\n * 深拷贝\n * @param {Object} obj 要拷贝的对象\n * @param {Map} map 用于存储循环引用对象的地址\n */\n\nfunction deepClone(obj = {}, map = new Map()) {\n  if (obj === null) return obj // 如果是null或者undefined我就不进行拷贝操作\n  if (obj instanceof Date) return new Date(obj)\n  if (obj instanceof RegExp) return new RegExp(obj)\n  // 可能是对象或者普通的值  如果是函数的话是不需要深拷贝\n  if (typeof obj !== 'object') return obj\n  if (map.get(obj)) {\n    return map.get(obj);\n  }\n  let result = {}; // 初始化返回结果\n  if (\n    obj instanceof Array ||\n    // 加 || 的原因是为了防止 Array 的 prototype 被重写，Array.isArray 也是如此\n    Object.prototype.toString(obj) === \"[object Array]\"\n  ) {\n    result = [];\n  }\n  // 防止循环引用\n \n  for (const key in obj) {\n    // 保证 key 不是原型属性\n    if (obj.hasOwnProperty(key)) {\n      // 递归调用\n      result[key] = deepClone(obj[key], map);\n    }\n  }\n  return result;\n}\n```\n\n\n\n\n\n # 16. JavaScript 中内存泄漏的几种情况\n\n`内存泄漏`一般是指系统进程不再用到的内存，没有及时释放，造成内存资源浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。\n\n造成内存泄漏的原因有：\n\n1. `全局变量。`在局部作用域中，函数执行完毕后，变量就没有存在的必要了，垃圾回收机制很快的做出判断并回收；但是对于全局变量，很难判断什么时候不用这些变量，无法正常回收。\n    解决办法：\n    ① 尽量少使用全局变量；\n    ② 使用严格模式，在 js 文件头部或者函数的顶部加上`use strict`。\n2. `闭包引起的内存泄露。`闭包可以读取函数内部的变量，然后让这些变量始终保存在内存中，如果在使用结束后没有将局部变量清除，就可能导致内存泄露。\n    解决办法：将事件处理函数定义在外部，解除闭包。\n3. `被遗忘的定时器。`定时器`setInterval`或者`setTimeout`不再需要使用时，且没有被清除，导致定时器的回调函数及其内部依赖的变量都不能被回收，就会造成内存泄漏。\n    解决办法：当不需要定时器的时候，调用`clearInterval`或者`clearTimeout`手动清除。\n4. `事件监听。`垃圾回收机制不好判断事件是否需要被解除，导致`callback`不能被释放，此时需要手动解除绑定。\n    解决办法：及时使用`removeEventListener`移除事件监听。\n5. `元素引用没有清理。`\n    解决办法：移除元素后，手动设置元素的引用为`null`。\n6. `console`。传递给`console.log`的对象是不能被垃圾回收，可能会存在内存泄漏。\n    解决办法：清除不必要的`console`。\n\n# 17. 防抖和节流的区别，以及手写实现\n\n\n\n\n\n`防抖`：多次触发事件，事件处理函数只执行一次，并且是在触发操作结束时执行。也就是说，当一个事件被触发，准备执行事件函数前，会等待一定的时间，在这个等待时间内，如果没有再次被触发，那么就执行，如果又触发了，那就本次作废，重置等待时间，直到最终能执行。\n 主要应用场景：搜索框搜索输入，用户最后一次输入完，再发送请求；手机号、邮箱验证输入检测\n\n`节流`：事件触发后，规定时间内，事件处理函数不能再次被调用。也就是说在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。\n 主要应用场景：高频点击、表单重复提交等。\n\n```javascript\njavascript复制代码/*** 防抖函数 n 秒后再执行该事件，若在 n 秒内被重复触发，则重新计时\n   * @param func 要被防抖的函数\n   * @param wait 规定的时间\n   */\nfunction debounce(func, wait) {\n  let timeout;\n  return function () {\n    let context = this; // 保存this指向\n    let args = arguments; // 拿到event对象\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      func.apply(context, args)\n    }, wait)\n  }\n}\n/*** 节流函数 n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效\n   * @param fn 要被节流的函数\n   * @param wait 规定的时间\n   */\nfunction throttled(fn, wait) {\n  let timer = null;\n  return function (...args) {\n    if (!timer) {\n      timer = setTimeout(() => {\n        fn.apply(this, args);\n        timer = null;\n      }, wait);\n    }\n  }\n}\n```\n\n# 18. EventLoop 事件循环\n\njs 是单线程运行的，当遇到一个异步事件后并不会一直等待其返回结果，而是会将这个事件挂起，继续执行执行栈中的其他任务。当一个异步事件返回结果后，js会将这个事件加入与当前执行栈不同的另一个队列--`事件队列（Task Queue）`。被放入事件队列不会立刻执行其回调，而是等待当前执行栈中的所有任务都执行完毕， 主线程处于闲置状态时，主线程会去查找事件队列是否有任务。如果有，那么主线程会从中取出排在第一位的事件，并把这个事件对应的回调放入执行栈中，然后执行其中的同步代码...，如此反复，这样就形成了一个无限的循环，这个过程被称为`事件循环（Event Loop）`。\n\n实际上,异步任务之间并不相同，它们的执行优先级也有区别。异步任务分两类：`微任务（micro task`）和`宏任务（macro task）`。\n\n微任务包括： `promise 的回调`、node 中的 `process.nextTick` 、对 Dom 变化监听的 `MutationObserver`。\n\n宏任务包括： script 脚本的执行，`setTimeout` 、`setInterval` 和`setImmediate` 一类的定时事件，还有如 I/O 操作，UI 渲染等。\n\n在一个事件循环中，异步事件返回结果后会被放到一个事件队列中。然而，根据这个异步事件的类型，这个事件实际上会被对应的`宏任务队列`或者`微任务队列`中去。并且在当前执行栈为空的时候，主线程会查看微任务队列是否有事件存在。如果不存在，那么再去宏任务队列中取出一个事件并把对应的回调加入当前执行栈；如果存在，则会依次执行队列中事件对应的回调，直到微任务队列为空，然后去宏任务队列中取出最前面的一个事件，把对应的回调加入当前执行栈...如此反复，进入循环。\n\n**在当前执行栈执行完毕时会立刻先处理所有微任务队列中的事件，然后再去宏任务队列中取出一个事件。同一次事件循环中，微任务永远在宏任务之前执行**。\n\n# 19. Promise\n\n`Promise`异步编程的一种解决方案。`Promise`是一个构造函数，接收一个函数作为参数，返回一个 Promise 实例。一个 Promise 实例有三种状态，分别是`pending`、`fulfilled`和`rejected`，分别代表了进行中、已成功和已失败。实例的状态只能由 pending 转变 fulfilled 或者 rejected 状态，并且状态一经改变，就无法再改变了。状态的改变是通过`resolve()`和`reject()`函数来实现的，可以在异步操作结束后调用这两个函数改变 Promise 实例的状态。Promise 的原型上定义了一个 `then`方法，使用这个 then 方法可以为两个状态的改变注册回调函数。这个回调函数属于微任务，会在本轮事件循环的末尾执行。\n\n","slug":"js/JS复习","published":1,"layout":"post","photos":[],"link":"","_id":"cli311ue900176ojn6dghfpna","content":"<p>JS复习记录</p>\n<span id=\"more\"></span>\n<h1 id=\"1-JS-的数据类型有哪些？\"><a href=\"#1-JS-的数据类型有哪些？\" class=\"headerlink\" title=\"1. JS 的数据类型有哪些？\"></a>1. JS 的数据类型有哪些？</h1><ul>\n<li>基本数据类型（值类型）：Number、String、Boolean、Null、Undefined、Symbol、BigInt。保存在栈内存中。</li>\n<li>复杂数据类型（引用类型）：Object、Function、Array、RegExp、Date 基本包装类型及单体内置对象(Global、Math)等。</li>\n</ul>\n<blockquote>\n<p>基本数据类型保存在栈里面，可以直接访问它的值；引用数据类型保存在堆里面，栈里面保存的是地址，通过栈里面的地址去访问堆里面的值。</p>\n</blockquote>\n<h1 id=\"2-null-和-undefined-的区别？\"><a href=\"#2-null-和-undefined-的区别？\" class=\"headerlink\" title=\"2.null 和 undefined 的区别？\"></a>2.null 和 undefined 的区别？</h1><ul>\n<li>null表示一个对象被定义了，值为“空值”。用法：<br>① 作为函数的参数，表示该函数的参数不是对象。<br>② 作为对象原型链的终点。</li>\n<li>undefined表示不存在这个值。就是此处应该有一个值，但是还没有定义，当尝试读取时就会返回 undefined。用法：<br>① 函数没有返回值时，默认返回 undefined。<br>② 变量已声明，没有赋值时，为 undefined。<br>③ 对象中没有赋值的属性，该属性的值为 undefined。<br>④ 调用函数时，应该提供的参数没有提供，该参数等于 undefined。</li>\n</ul>\n<h1 id=\"3-如何判断-JS-的数据类型？\"><a href=\"#3-如何判断-JS-的数据类型？\" class=\"headerlink\" title=\"3. 如何判断 JS 的数据类型？\"></a>3. 如何判断 JS 的数据类型？</h1><h2 id=\"1-typeof\"><a href=\"#1-typeof\" class=\"headerlink\" title=\"1.typeof\"></a>1.typeof</h2><p>typeof可以区分除了Null类型以外的其他基本数据类型，以及从对象类型中识别出函数（function）。<br>其返回值有：number、string、boolean、undefined、symbol、bigint、function、object。<br>其中, typeof null返回 “object”<br>如果要识别null，可直接使用===全等运算符来判断。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">1</span> <span class=\"comment\">// &#x27;number&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">&#x27;1&#x27;</span> <span class=\"comment\">// &#x27;string&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">true</span> <span class=\"comment\">// &#x27;boolean&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span> <span class=\"comment\">// &#x27;undefined&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"title class_\">Symbol</span>() <span class=\"comment\">// &#x27;symbol&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">null</span> <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> [] <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> &#123;&#125; <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"variable language_\">console</span> <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"variable language_\">console</span>.<span class=\"property\">log</span> <span class=\"comment\">// &#x27;function&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-instanceof\"><a href=\"#2-instanceof\" class=\"headerlink\" title=\"2.instanceof\"></a>2.instanceof</h2><p>instanceof一般是用来判断引用数据类型，但不能正确判断基本数据类型，根据在原型链中查找判断当前数据的原型对象是否存在返回布尔类型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Number</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">true</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Boolean</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"string\">&#x27;str&#x27;</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\">[] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Function</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\">&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">date instance <span class=\"keyword\">of</span> <span class=\"title class_\">Date</span>; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Object-prototype-toString\"><a href=\"#3-Object-prototype-toString\" class=\"headerlink\" title=\"3. Object.prototype.toString\"></a>3. Object.prototype.toString</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"title function_\">toString</span>(&#123;&#125;) <span class=\"comment\">// &quot;[object Object]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(&#123;&#125;) <span class=\"comment\">// 同上结果，加上call也ok</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"number\">1</span>) <span class=\"comment\">// &quot;[object Number]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"string\">&#x27;1&#x27;</span>) <span class=\"comment\">// &quot;[object String]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"literal\">true</span>) <span class=\"comment\">// &quot;[object Boolean]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;) <span class=\"comment\">// &quot;[object Function]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"literal\">null</span>) <span class=\"comment\">//&quot;[object Null]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"literal\">undefined</span>) <span class=\"comment\">//&quot;[object Undefined]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"regexp\">/123/g</span>) <span class=\"comment\">//&quot;[object RegExp]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) <span class=\"comment\">//&quot;[object Date]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>([]) <span class=\"comment\">//&quot;[object Array]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">document</span>) <span class=\"comment\">//&quot;[object HTMLDocument]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">window</span>) <span class=\"comment\">//&quot;[object Window]&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Array-isArray\"><a href=\"#4-Array-isArray\" class=\"headerlink\" title=\"4. Array.isArray\"></a>4. Array.isArray</h2><p>Array.isArray(value)可以判断 value 是否为数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>([]); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(&#123;&#125;); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"number\">1</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"string\">&#x27;string&#x27;</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"3-如何遍历对象的属性？\"><a href=\"#3-如何遍历对象的属性？\" class=\"headerlink\" title=\"3.如何遍历对象的属性？\"></a>3.如何遍历对象的属性？</h1><ul>\n<li>遍历自身可枚举的属性（可枚举、非继承属性）：Object.keys() 方法,该方法会返回一个由给定对象的自身可枚举属性组成的数组。</li>\n<li>遍历自身的所有属性（可枚举、不可枚举、非继承属性）：Object.getOwnPropertyNames()方法，该方法会返回一个由指定对象的所有自身属性组成的数组</li>\n<li>遍历可枚举的自身属性和继承属性：for … in …</li>\n</ul>\n<h1 id=\"4-和-的区别？\"><a href=\"#4-和-的区别？\" class=\"headerlink\" title=\"4. == 和 === 的区别？\"></a>4. == 和 === 的区别？</h1><ul>\n<li>==：两个等号称为等值符，当等号两边的值为相同类型时比较值是否相同，类型不同时会发生类型的自动转换，转换为相同的类型后再做比较。</li>\n<li>===：三个等号称为等同符，当等号两边的值为相同类型时，直接比较等号两边的值，值相同则返回 true；若等号两边值的类型不同时直接返回 false。也就是三个等号既要判断类型也要判断值是否相等。</li>\n</ul>\n<h1 id=\"5-如何判断两个对象是否相等？\"><a href=\"#5-如何判断两个对象是否相等？\" class=\"headerlink\" title=\"5.如何判断两个对象是否相等？\"></a>5.如何判断两个对象是否相等？</h1><ol>\n<li><p>Object.is(obj1, obj2)，判断两个对象都引用地址是否一致，true 则一致，false 不一致。</p>\n</li>\n<li><p>判断两个对象内容是否一致，思路是遍历对象的所有键名和键值是否都一致<br>① 判断两个对象是否指向同一内存<br>② 使用 Object.getOwnPropertyNames 获取对象所有键名数组<br>③ 判断两个对象的键名数组是否相等<br>④ 遍历键名，判断键值是否都相等</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isObjValueEqual</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判断两个对象是否指向同一内存，指向同一内存返回 true</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a === b) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 获取两个对象的键名数组</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> aProps = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyNames</span>(a);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> bProps = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyNames</span>(b);</span><br><span class=\"line\">  <span class=\"comment\">// 判断两键名数组长度是否一致，不一致返回 false</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (aProps.<span class=\"property\">length</span> !== bProps.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 遍历对象的键值</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> prop <span class=\"keyword\">in</span> a) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断 a 的键名，在 b 中是否存在，不存在，直接返回 false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (b.<span class=\"title function_\">hasOwnProperty</span>(prop)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 判断 a 的键值是否为对象，是对象的话需要递归；</span></span><br><span class=\"line\">      <span class=\"comment\">// 不是对象，直接判断键值是否相等，不相等则返回 false</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> a[prop] === <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_\">isObjValueEqual</span>(a[prop], b[prop])) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[prop] !== b[prop])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-强制类型转换和隐式类型转换有哪些\"><a href=\"#6-强制类型转换和隐式类型转换有哪些\" class=\"headerlink\" title=\"6. 强制类型转换和隐式类型转换有哪些\"></a>6. 强制类型转换和隐式类型转换有哪些</h1><ul>\n<li>强制：<br>转换成字符串: toString()、String()<br>转换成数字：Number()、parseInt()、parseFloat()<br>转换成布尔类型：Boolean()</li>\n<li>隐式：<br>拼接字符串：let str = 1 + “”;</li>\n</ul>\n<h1 id=\"7-JS-中的作用域和作用域链\"><a href=\"#7-JS-中的作用域和作用域链\" class=\"headerlink\" title=\"7. JS 中的作用域和作用域链\"></a>7. JS 中的作用域和作用域链</h1><ul>\n<li><p>作用域，即变量（变量作用域又称上下文）和函数生效（能被访问）的区域或集合。作用域决定了代码区块中变量和其他资源的可见性。一般可分为：全局作用域、局部作用域（函数作用域）、块级作用域。</p>\n</li>\n<li><p>全局作用域：任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问。</p>\n</li>\n<li><p>局部作用域：也叫做函数作用域，如果一个变量是在函数内部声明的，它就在一个函数作用域下面。这些变量只能在函数内部访问，不能在函数以外去访问。<br>块级作用域：凡是代码块就可以划分变量的作用域，这种作用域的规则就叫做块级作用域。</p>\n</li>\n<li><p>作用域链：当在 JS 中使用一个变量时，JS 引擎会尝试在当前作用域下寻找该变量，如果没找到，再到它的上层作用域寻找，以此类推，直至找到该变量或是查找至全局作用域，如果在全局作用域里仍然找不到该变量，它就会在全局范围内隐式声明该变量(非严格模式下)或是直接报错。</p>\n</li>\n<li><p>js 采用的是静态作用域，所以函数的作用域在函数定义时就确定了</p>\n</li>\n</ul>\n<h1 id=\"8-JS-的预解析\"><a href=\"#8-JS-的预解析\" class=\"headerlink\" title=\"8. JS 的预解析\"></a>8. JS 的预解析</h1><p>JS 代码的执行是由浏览器中的 JS 解析器来执行的，JS 解析器执行 JS 代码时，分为两个过程：预解析过程和代码执行过程。预解析分为变量预解析（变量提升）和函数预解析（函数提升）；代码执行是指按顺序从上至下执行。</p>\n<ul>\n<li>变量提升：把变量的声明提升到当前作用域的最前面，只提升声明，不提升赋值；</li>\n<li>函数提升：把函数的声明提升到当前作用域的最前面，只提升声明，不提升调用；</li>\n</ul>\n<blockquote>\n<p>函数表达式的写法不存在函数提升</p>\n</blockquote>\n<blockquote>\n<p>函数提升优先级高于变量提升，即函数提升在变量提升之上，且不会被同名变量声明时覆盖，但是会被同名变量赋值后覆盖</p>\n</blockquote>\n<h1 id=\"9-原型和原型链\"><a href=\"#9-原型和原型链\" class=\"headerlink\" title=\"9. 原型和原型链\"></a>9. 原型和原型链</h1><p>JS是面向对象的，每个实例对象都有一个__proto__属性，该属性指向它的原型对象。该实例的构造函数有一个原型属性prototype，与实例的__proto__属性指向同一个对象。同时，原型对象的constructor 指向构造函数本身。</p>\n<p>当一个对象在查找一个属性时，自身没有就会根据__proto__属性向它的原型进行查找，如果还是没有，则向它的原型的原型继续查找，直至查到Object.prototype.__proto__也就是null，这样就形成了原型链。</p>\n<h1 id=\"10-闭包\"><a href=\"#10-闭包\" class=\"headerlink\" title=\"10. 闭包\"></a>10. 闭包</h1><p>在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。可以在一个内层函数中访问到其外层函数的作用域。</p>\n<p>闭包就是能够读取其他函数内部变量的函数。主要作用是解决变量污染问题，也可以用来延长局部变量的生命周期。</p>\n<ul>\n<li>优点：延长局部变量的生命周期</li>\n<li>缺点：会导致函数的变量一直保存在内存中，过多的闭包可能会导致内存泄漏</li>\n</ul>\n<h1 id=\"11-new-操作符的实现机制\"><a href=\"#11-new-操作符的实现机制\" class=\"headerlink\" title=\"11. new 操作符的实现机制\"></a>11. new 操作符的实现机制</h1><ol>\n<li>首先创建了一个新的空对象</li>\n<li>设置原型，将对象的原型设置为函数的prototype对象。</li>\n<li>让函数的this指向这个对象，执行构造函数的代码（为这个新对象添加属性）</li>\n<li>判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myNew</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">  obj.<span class=\"property\">__proto__</span> = context.<span class=\"property\"><span class=\"keyword\">prototype</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = context.<span class=\"title function_\">apply</span>(obj, [...<span class=\"variable language_\">arguments</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> res === <span class=\"string\">&quot;object&quot;</span> ? res : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"12-this-的理解？\"><a href=\"#12-this-的理解？\" class=\"headerlink\" title=\"12. this 的理解？\"></a>12. this 的理解？</h1><ol>\n<li>概念：<br>this是 JS 的一个关键字，它是函数运行时，自动生成的一个内部对象，只能在函数内部使用，随着函数使用场合的不同，this的值会发生变化，但有一个总的原则：this指的是调用函数的那个对象。</li>\n<li>this的指向：</li>\n</ol>\n<ul>\n<li>① 作为普通函数执行时，this指向window，但在严格模式下this指向undefined。</li>\n<li>② 函数作为对象里的方法被调用时，this指向该对象.</li>\n<li>③ 当用new运算符调用构造函数时，this指向返回的这个对象。</li>\n<li>④ 箭头函数的this绑定看的是this所在函数定义在哪个对象下，就绑定哪个对象。- 如果存在嵌套，则this绑定到最近的一层对象上。</li>\n<li>⑤ call()、apply()、bind()是函数的三个方法，都可以显式的指定调用函数的this指向。</li>\n</ul>\n<h1 id=\"13-call、apply、bind的区别以及手写实现\"><a href=\"#13-call、apply、bind的区别以及手写实现\" class=\"headerlink\" title=\"13.call、apply、bind的区别以及手写实现\"></a>13.call、apply、bind的区别以及手写实现</h1><ul>\n<li><code>call()</code>可以传递两个参数，第一个参数是指定函数内部中<code>this</code>的指向，第二个参数是函数调用时需要传递的参数。改变<code>this</code>指向后原函数会立即执行，且此方法只是临时改变<code>this</code>指向一次。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 实现call方法</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myCall</span> = <span class=\"keyword\">function</span> (<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判断调用对象</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span> != <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;type error&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 首先获取参数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> args = [...<span class=\"variable language_\">arguments</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 判断context是否传入，如果没有，就设置为window</span></span><br><span class=\"line\">  context = context || <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 将被调用的方法置入context的属性</span></span><br><span class=\"line\">  <span class=\"comment\">// this 即为要调用的方法</span></span><br><span class=\"line\">  context.<span class=\"property\">fn</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 执行要被调用的方法</span></span><br><span class=\"line\">  res = context.<span class=\"title function_\">fn</span>(...args);</span><br><span class=\"line\">  <span class=\"comment\">// 删除手动增加的属性方法</span></span><br><span class=\"line\">  <span class=\"keyword\">delete</span> context.<span class=\"property\">fn</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 执行结果返回</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>apply()</code>接受两个参数，第一个参数是<code>this</code>的指向，第二个参数是函数接受的参数，以<code>数组</code>的形式传入。改变<code>this</code>指向后原函数会立即执行，且此方法只是临时改变<code>this</code>指向一次。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 实现apply方法</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myApply</span> = <span class=\"keyword\">function</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span> != <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;type error&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  context = context || <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 使用 symbol 来保证属性唯一</span></span><br><span class=\"line\">  <span class=\"comment\">// 也就是保证不会重写用户自己原来定义在context中的同名属性</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> fnSymbol = <span class=\"title class_\">Symbol</span>();</span><br><span class=\"line\">  context[fnSymbol] = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 执行被调用的方法</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">arguments</span>[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">    res = context[fnSymbol](...<span class=\"variable language_\">arguments</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res = context[fnSymbol]();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> context[fnSymbol];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>bind()</code>方法的第一参数也是<code>this</code>的指向，后面传入的也是一个参数列表(但是这个参数列表可以分多次传入)。改变<code>this</code>指向后不会立即执行，而是返回一个永久改变<code>this</code>指向的函数。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 实现bind方法</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myBind</span> = <span class=\"keyword\">function</span> (<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span> != <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;type error&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> args = [...<span class=\"variable language_\">arguments</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fn = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn.<span class=\"title function_\">apply</span>(</span><br><span class=\"line\">      <span class=\"variable language_\">this</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Fn</span> ? <span class=\"variable language_\">this</span> : context,</span><br><span class=\"line\">      <span class=\"comment\">// 当前这个 arguments 是指 Fn 的参数</span></span><br><span class=\"line\">      args.<span class=\"title function_\">concat</span>(...<span class=\"variable language_\">arguments</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>共同点：改变函数执行时的上下文，简而言之就是改变函数运行时的<code>this</code>指向。<br> 不同：</p>\n<ul>\n<li><code>call()</code>和<code>bind()</code>第二个参数是列表形式的；<code>apply()</code>第二个参数是数组形式。</li>\n<li><code>call()</code>和<code>apply()</code>是立即执行；<code>bind()</code>不会立即执行而是生成一个修改<code>this</code>之后的新函数。</li>\n</ul>\n<h1 id=\"14-箭头函数\"><a href=\"#14-箭头函数\" class=\"headerlink\" title=\"14. 箭头函数\"></a>14. 箭头函数</h1><ol>\n<li>箭头函数是定义函数一种新的方式，比普通函数定义更加方便和简单。</li>\n<li>箭头函数不绑定<code>this</code>，会捕获其所在上下文的<code>this</code>，作为自己的<code>this</code>。</li>\n<li>箭头函数不能用作构造函数，也就是说不可以使用<code>new</code>命令，否则会抛出错误。</li>\n<li>箭头函数不绑定<code>arguments</code>，取而代之用<code>rest</code>参数解决，同时没有<code>super</code>和<code>new.target</code>。</li>\n<li>使用<code>call</code>，<code>apply</code>，<code>bind</code>并不会改变箭头函数中的<code>this</code>指向。对箭头函数使用<code>call</code>或<code>apply</code>方法时，只会传入参数并调用函数；对箭头函数使用<code>bind</code>方法时，只会返回一个预设参数的新函数，并不会改变这个新函数的<code>this</code>指向。</li>\n</ol>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"15-浅拷贝和深拷贝的实现\"><a href=\"#15-浅拷贝和深拷贝的实现\" class=\"headerlink\" title=\"15. 浅拷贝和深拷贝的实现\"></a>15. 浅拷贝和深拷贝的实现</h1><p><code>浅拷贝</code>：如果属性是基本类型，拷贝的就是基本类型的值；如果属性是引用类型，拷贝的就是内存地址。即浅拷贝是<code>拷贝一层</code>，深层次的引用类型则共享内存地址。常用的方法有：object.assign，扩展运算符等等</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码var <span class=\"attr\">a</span> = &#123; count: <span class=\"number\">1</span>, deep: &#123; count: <span class=\"number\">2</span> &#125; &#125;<span class=\"comment\">;</span></span><br><span class=\"line\">var <span class=\"attr\">b</span> = Object.assign(&#123;&#125;, a)<span class=\"comment\">;</span></span><br><span class=\"line\">// 或者</span><br><span class=\"line\">var <span class=\"attr\">c</span> = &#123;...a&#125;<span class=\"comment\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 实现一个浅拷贝</span><br><span class=\"line\">function shallowClone(obj) &#123;</span><br><span class=\"line\">  const <span class=\"attr\">newObj</span> = &#123;&#125;<span class=\"comment\">;</span></span><br><span class=\"line\">  for (let prop in obj) &#123;</span><br><span class=\"line\">    if (obj.hasOwnProperty(prop)) &#123;</span><br><span class=\"line\">      newObj<span class=\"section\">[prop]</span> = obj<span class=\"section\">[prop]</span><span class=\"comment\">;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return newObj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>深拷贝</code>：开辟一个新的栈，两个对象的属性完全相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 深拷贝</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Object</span>&#125; obj 要拷贝的对象</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Map</span>&#125; map 用于存储循环引用对象的地址</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deepClone</span>(<span class=\"params\">obj = &#123;&#125;, map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj === <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> obj <span class=\"comment\">// 如果是null或者undefined我就不进行拷贝操作</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Date</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(obj)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">RegExp</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(obj)</span><br><span class=\"line\">  <span class=\"comment\">// 可能是对象或者普通的值  如果是函数的话是不需要深拷贝</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">&#x27;object&#x27;</span>) <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (map.<span class=\"title function_\">get</span>(obj)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> map.<span class=\"title function_\">get</span>(obj);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = &#123;&#125;; <span class=\"comment\">// 初始化返回结果</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">    obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span> ||</span><br><span class=\"line\">    <span class=\"comment\">// 加 || 的原因是为了防止 Array 的 prototype 被重写，Array.isArray 也是如此</span></span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"title function_\">toString</span>(obj) === <span class=\"string\">&quot;[object Array]&quot;</span></span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    result = [];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 防止循环引用</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 保证 key 不是原型属性</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 递归调用</span></span><br><span class=\"line\">      result[key] = <span class=\"title function_\">deepClone</span>(obj[key], map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"16-JavaScript-中内存泄漏的几种情况\"><a href=\"#16-JavaScript-中内存泄漏的几种情况\" class=\"headerlink\" title=\"16. JavaScript 中内存泄漏的几种情况\"></a>16. JavaScript 中内存泄漏的几种情况</h1><p><code>内存泄漏</code>一般是指系统进程不再用到的内存，没有及时释放，造成内存资源浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。</p>\n<p>造成内存泄漏的原因有：</p>\n<ol>\n<li><code>全局变量。</code>在局部作用域中，函数执行完毕后，变量就没有存在的必要了，垃圾回收机制很快的做出判断并回收；但是对于全局变量，很难判断什么时候不用这些变量，无法正常回收。<br> 解决办法：<br> ① 尽量少使用全局变量；<br> ② 使用严格模式，在 js 文件头部或者函数的顶部加上<code>use strict</code>。</li>\n<li><code>闭包引起的内存泄露。</code>闭包可以读取函数内部的变量，然后让这些变量始终保存在内存中，如果在使用结束后没有将局部变量清除，就可能导致内存泄露。<br> 解决办法：将事件处理函数定义在外部，解除闭包。</li>\n<li><code>被遗忘的定时器。</code>定时器<code>setInterval</code>或者<code>setTimeout</code>不再需要使用时，且没有被清除，导致定时器的回调函数及其内部依赖的变量都不能被回收，就会造成内存泄漏。<br> 解决办法：当不需要定时器的时候，调用<code>clearInterval</code>或者<code>clearTimeout</code>手动清除。</li>\n<li><code>事件监听。</code>垃圾回收机制不好判断事件是否需要被解除，导致<code>callback</code>不能被释放，此时需要手动解除绑定。<br> 解决办法：及时使用<code>removeEventListener</code>移除事件监听。</li>\n<li><code>元素引用没有清理。</code><br> 解决办法：移除元素后，手动设置元素的引用为<code>null</code>。</li>\n<li><code>console</code>。传递给<code>console.log</code>的对象是不能被垃圾回收，可能会存在内存泄漏。<br> 解决办法：清除不必要的<code>console</code>。</li>\n</ol>\n<h1 id=\"17-防抖和节流的区别，以及手写实现\"><a href=\"#17-防抖和节流的区别，以及手写实现\" class=\"headerlink\" title=\"17. 防抖和节流的区别，以及手写实现\"></a>17. 防抖和节流的区别，以及手写实现</h1><p><code>防抖</code>：多次触发事件，事件处理函数只执行一次，并且是在触发操作结束时执行。也就是说，当一个事件被触发，准备执行事件函数前，会等待一定的时间，在这个等待时间内，如果没有再次被触发，那么就执行，如果又触发了，那就本次作废，重置等待时间，直到最终能执行。<br> 主要应用场景：搜索框搜索输入，用户最后一次输入完，再发送请求；手机号、邮箱验证输入检测</p>\n<p><code>节流</code>：事件触发后，规定时间内，事件处理函数不能再次被调用。也就是说在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。<br> 主要应用场景：高频点击、表单重复提交等。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">/*** 防抖函数 n 秒后再执行该事件，若在 n 秒内被重复触发，则重新计时</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> func 要被防抖的函数</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> wait 规定的时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>; <span class=\"comment\">// 保存this指向</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>; <span class=\"comment\">// 拿到event对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">    &#125;, wait)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*** 节流函数 n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> fn 要被节流的函数</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> wait 规定的时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttled</span>(<span class=\"params\">fn, wait</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!timer) &#123;</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args);</span><br><span class=\"line\">        timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      &#125;, wait);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-EventLoop-事件循环\"><a href=\"#18-EventLoop-事件循环\" class=\"headerlink\" title=\"18. EventLoop 事件循环\"></a>18. EventLoop 事件循环</h1><p>js 是单线程运行的，当遇到一个异步事件后并不会一直等待其返回结果，而是会将这个事件挂起，继续执行执行栈中的其他任务。当一个异步事件返回结果后，js会将这个事件加入与当前执行栈不同的另一个队列–<code>事件队列（Task Queue）</code>。被放入事件队列不会立刻执行其回调，而是等待当前执行栈中的所有任务都执行完毕， 主线程处于闲置状态时，主线程会去查找事件队列是否有任务。如果有，那么主线程会从中取出排在第一位的事件，并把这个事件对应的回调放入执行栈中，然后执行其中的同步代码…，如此反复，这样就形成了一个无限的循环，这个过程被称为<code>事件循环（Event Loop）</code>。</p>\n<p>实际上,异步任务之间并不相同，它们的执行优先级也有区别。异步任务分两类：<code>微任务（micro task</code>）和<code>宏任务（macro task）</code>。</p>\n<p>微任务包括： <code>promise 的回调</code>、node 中的 <code>process.nextTick</code> 、对 Dom 变化监听的 <code>MutationObserver</code>。</p>\n<p>宏任务包括： script 脚本的执行，<code>setTimeout</code> 、<code>setInterval</code> 和<code>setImmediate</code> 一类的定时事件，还有如 I/O 操作，UI 渲染等。</p>\n<p>在一个事件循环中，异步事件返回结果后会被放到一个事件队列中。然而，根据这个异步事件的类型，这个事件实际上会被对应的<code>宏任务队列</code>或者<code>微任务队列</code>中去。并且在当前执行栈为空的时候，主线程会查看微任务队列是否有事件存在。如果不存在，那么再去宏任务队列中取出一个事件并把对应的回调加入当前执行栈；如果存在，则会依次执行队列中事件对应的回调，直到微任务队列为空，然后去宏任务队列中取出最前面的一个事件，把对应的回调加入当前执行栈…如此反复，进入循环。</p>\n<p><strong>在当前执行栈执行完毕时会立刻先处理所有微任务队列中的事件，然后再去宏任务队列中取出一个事件。同一次事件循环中，微任务永远在宏任务之前执行</strong>。</p>\n<h1 id=\"19-Promise\"><a href=\"#19-Promise\" class=\"headerlink\" title=\"19. Promise\"></a>19. Promise</h1><p><code>Promise</code>异步编程的一种解决方案。<code>Promise</code>是一个构造函数，接收一个函数作为参数，返回一个 Promise 实例。一个 Promise 实例有三种状态，分别是<code>pending</code>、<code>fulfilled</code>和<code>rejected</code>，分别代表了进行中、已成功和已失败。实例的状态只能由 pending 转变 fulfilled 或者 rejected 状态，并且状态一经改变，就无法再改变了。状态的改变是通过<code>resolve()</code>和<code>reject()</code>函数来实现的，可以在异步操作结束后调用这两个函数改变 Promise 实例的状态。Promise 的原型上定义了一个 <code>then</code>方法，使用这个 then 方法可以为两个状态的改变注册回调函数。这个回调函数属于微任务，会在本轮事件循环的末尾执行。</p>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"excerpt":"<p>JS复习记录</p>","more":"<h1 id=\"1-JS-的数据类型有哪些？\"><a href=\"#1-JS-的数据类型有哪些？\" class=\"headerlink\" title=\"1. JS 的数据类型有哪些？\"></a>1. JS 的数据类型有哪些？</h1><ul>\n<li>基本数据类型（值类型）：Number、String、Boolean、Null、Undefined、Symbol、BigInt。保存在栈内存中。</li>\n<li>复杂数据类型（引用类型）：Object、Function、Array、RegExp、Date 基本包装类型及单体内置对象(Global、Math)等。</li>\n</ul>\n<blockquote>\n<p>基本数据类型保存在栈里面，可以直接访问它的值；引用数据类型保存在堆里面，栈里面保存的是地址，通过栈里面的地址去访问堆里面的值。</p>\n</blockquote>\n<h1 id=\"2-null-和-undefined-的区别？\"><a href=\"#2-null-和-undefined-的区别？\" class=\"headerlink\" title=\"2.null 和 undefined 的区别？\"></a>2.null 和 undefined 的区别？</h1><ul>\n<li>null表示一个对象被定义了，值为“空值”。用法：<br>① 作为函数的参数，表示该函数的参数不是对象。<br>② 作为对象原型链的终点。</li>\n<li>undefined表示不存在这个值。就是此处应该有一个值，但是还没有定义，当尝试读取时就会返回 undefined。用法：<br>① 函数没有返回值时，默认返回 undefined。<br>② 变量已声明，没有赋值时，为 undefined。<br>③ 对象中没有赋值的属性，该属性的值为 undefined。<br>④ 调用函数时，应该提供的参数没有提供，该参数等于 undefined。</li>\n</ul>\n<h1 id=\"3-如何判断-JS-的数据类型？\"><a href=\"#3-如何判断-JS-的数据类型？\" class=\"headerlink\" title=\"3. 如何判断 JS 的数据类型？\"></a>3. 如何判断 JS 的数据类型？</h1><h2 id=\"1-typeof\"><a href=\"#1-typeof\" class=\"headerlink\" title=\"1.typeof\"></a>1.typeof</h2><p>typeof可以区分除了Null类型以外的其他基本数据类型，以及从对象类型中识别出函数（function）。<br>其返回值有：number、string、boolean、undefined、symbol、bigint、function、object。<br>其中, typeof null返回 “object”<br>如果要识别null，可直接使用===全等运算符来判断。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">1</span> <span class=\"comment\">// &#x27;number&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">&#x27;1&#x27;</span> <span class=\"comment\">// &#x27;string&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">true</span> <span class=\"comment\">// &#x27;boolean&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span> <span class=\"comment\">// &#x27;undefined&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"title class_\">Symbol</span>() <span class=\"comment\">// &#x27;symbol&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">null</span> <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> [] <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> &#123;&#125; <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"variable language_\">console</span> <span class=\"comment\">// &#x27;object&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"variable language_\">console</span>.<span class=\"property\">log</span> <span class=\"comment\">// &#x27;function&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-instanceof\"><a href=\"#2-instanceof\" class=\"headerlink\" title=\"2.instanceof\"></a>2.instanceof</h2><p>instanceof一般是用来判断引用数据类型，但不能正确判断基本数据类型，根据在原型链中查找判断当前数据的原型对象是否存在返回布尔类型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Number</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">true</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Boolean</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"string\">&#x27;str&#x27;</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\">[] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Function</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\">&#123;&#125; <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">date instance <span class=\"keyword\">of</span> <span class=\"title class_\">Date</span>; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Object-prototype-toString\"><a href=\"#3-Object-prototype-toString\" class=\"headerlink\" title=\"3. Object.prototype.toString\"></a>3. Object.prototype.toString</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"title function_\">toString</span>(&#123;&#125;) <span class=\"comment\">// &quot;[object Object]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(&#123;&#125;) <span class=\"comment\">// 同上结果，加上call也ok</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"number\">1</span>) <span class=\"comment\">// &quot;[object Number]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"string\">&#x27;1&#x27;</span>) <span class=\"comment\">// &quot;[object String]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"literal\">true</span>) <span class=\"comment\">// &quot;[object Boolean]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;) <span class=\"comment\">// &quot;[object Function]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"literal\">null</span>) <span class=\"comment\">//&quot;[object Null]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"literal\">undefined</span>) <span class=\"comment\">//&quot;[object Undefined]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"regexp\">/123/g</span>) <span class=\"comment\">//&quot;[object RegExp]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) <span class=\"comment\">//&quot;[object Date]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>([]) <span class=\"comment\">//&quot;[object Array]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">document</span>) <span class=\"comment\">//&quot;[object HTMLDocument]&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">window</span>) <span class=\"comment\">//&quot;[object Window]&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Array-isArray\"><a href=\"#4-Array-isArray\" class=\"headerlink\" title=\"4. Array.isArray\"></a>4. Array.isArray</h2><p>Array.isArray(value)可以判断 value 是否为数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>([]); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(&#123;&#125;); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"number\">1</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"string\">&#x27;string&#x27;</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"literal\">true</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"3-如何遍历对象的属性？\"><a href=\"#3-如何遍历对象的属性？\" class=\"headerlink\" title=\"3.如何遍历对象的属性？\"></a>3.如何遍历对象的属性？</h1><ul>\n<li>遍历自身可枚举的属性（可枚举、非继承属性）：Object.keys() 方法,该方法会返回一个由给定对象的自身可枚举属性组成的数组。</li>\n<li>遍历自身的所有属性（可枚举、不可枚举、非继承属性）：Object.getOwnPropertyNames()方法，该方法会返回一个由指定对象的所有自身属性组成的数组</li>\n<li>遍历可枚举的自身属性和继承属性：for … in …</li>\n</ul>\n<h1 id=\"4-和-的区别？\"><a href=\"#4-和-的区别？\" class=\"headerlink\" title=\"4. == 和 === 的区别？\"></a>4. == 和 === 的区别？</h1><ul>\n<li>==：两个等号称为等值符，当等号两边的值为相同类型时比较值是否相同，类型不同时会发生类型的自动转换，转换为相同的类型后再做比较。</li>\n<li>===：三个等号称为等同符，当等号两边的值为相同类型时，直接比较等号两边的值，值相同则返回 true；若等号两边值的类型不同时直接返回 false。也就是三个等号既要判断类型也要判断值是否相等。</li>\n</ul>\n<h1 id=\"5-如何判断两个对象是否相等？\"><a href=\"#5-如何判断两个对象是否相等？\" class=\"headerlink\" title=\"5.如何判断两个对象是否相等？\"></a>5.如何判断两个对象是否相等？</h1><ol>\n<li><p>Object.is(obj1, obj2)，判断两个对象都引用地址是否一致，true 则一致，false 不一致。</p>\n</li>\n<li><p>判断两个对象内容是否一致，思路是遍历对象的所有键名和键值是否都一致<br>① 判断两个对象是否指向同一内存<br>② 使用 Object.getOwnPropertyNames 获取对象所有键名数组<br>③ 判断两个对象的键名数组是否相等<br>④ 遍历键名，判断键值是否都相等</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isObjValueEqual</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判断两个对象是否指向同一内存，指向同一内存返回 true</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a === b) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 获取两个对象的键名数组</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> aProps = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyNames</span>(a);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> bProps = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyNames</span>(b);</span><br><span class=\"line\">  <span class=\"comment\">// 判断两键名数组长度是否一致，不一致返回 false</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (aProps.<span class=\"property\">length</span> !== bProps.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 遍历对象的键值</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> prop <span class=\"keyword\">in</span> a) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断 a 的键名，在 b 中是否存在，不存在，直接返回 false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (b.<span class=\"title function_\">hasOwnProperty</span>(prop)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 判断 a 的键值是否为对象，是对象的话需要递归；</span></span><br><span class=\"line\">      <span class=\"comment\">// 不是对象，直接判断键值是否相等，不相等则返回 false</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> a[prop] === <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_\">isObjValueEqual</span>(a[prop], b[prop])) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[prop] !== b[prop])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-强制类型转换和隐式类型转换有哪些\"><a href=\"#6-强制类型转换和隐式类型转换有哪些\" class=\"headerlink\" title=\"6. 强制类型转换和隐式类型转换有哪些\"></a>6. 强制类型转换和隐式类型转换有哪些</h1><ul>\n<li>强制：<br>转换成字符串: toString()、String()<br>转换成数字：Number()、parseInt()、parseFloat()<br>转换成布尔类型：Boolean()</li>\n<li>隐式：<br>拼接字符串：let str = 1 + “”;</li>\n</ul>\n<h1 id=\"7-JS-中的作用域和作用域链\"><a href=\"#7-JS-中的作用域和作用域链\" class=\"headerlink\" title=\"7. JS 中的作用域和作用域链\"></a>7. JS 中的作用域和作用域链</h1><ul>\n<li><p>作用域，即变量（变量作用域又称上下文）和函数生效（能被访问）的区域或集合。作用域决定了代码区块中变量和其他资源的可见性。一般可分为：全局作用域、局部作用域（函数作用域）、块级作用域。</p>\n</li>\n<li><p>全局作用域：任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问。</p>\n</li>\n<li><p>局部作用域：也叫做函数作用域，如果一个变量是在函数内部声明的，它就在一个函数作用域下面。这些变量只能在函数内部访问，不能在函数以外去访问。<br>块级作用域：凡是代码块就可以划分变量的作用域，这种作用域的规则就叫做块级作用域。</p>\n</li>\n<li><p>作用域链：当在 JS 中使用一个变量时，JS 引擎会尝试在当前作用域下寻找该变量，如果没找到，再到它的上层作用域寻找，以此类推，直至找到该变量或是查找至全局作用域，如果在全局作用域里仍然找不到该变量，它就会在全局范围内隐式声明该变量(非严格模式下)或是直接报错。</p>\n</li>\n<li><p>js 采用的是静态作用域，所以函数的作用域在函数定义时就确定了</p>\n</li>\n</ul>\n<h1 id=\"8-JS-的预解析\"><a href=\"#8-JS-的预解析\" class=\"headerlink\" title=\"8. JS 的预解析\"></a>8. JS 的预解析</h1><p>JS 代码的执行是由浏览器中的 JS 解析器来执行的，JS 解析器执行 JS 代码时，分为两个过程：预解析过程和代码执行过程。预解析分为变量预解析（变量提升）和函数预解析（函数提升）；代码执行是指按顺序从上至下执行。</p>\n<ul>\n<li>变量提升：把变量的声明提升到当前作用域的最前面，只提升声明，不提升赋值；</li>\n<li>函数提升：把函数的声明提升到当前作用域的最前面，只提升声明，不提升调用；</li>\n</ul>\n<blockquote>\n<p>函数表达式的写法不存在函数提升</p>\n</blockquote>\n<blockquote>\n<p>函数提升优先级高于变量提升，即函数提升在变量提升之上，且不会被同名变量声明时覆盖，但是会被同名变量赋值后覆盖</p>\n</blockquote>\n<h1 id=\"9-原型和原型链\"><a href=\"#9-原型和原型链\" class=\"headerlink\" title=\"9. 原型和原型链\"></a>9. 原型和原型链</h1><p>JS是面向对象的，每个实例对象都有一个__proto__属性，该属性指向它的原型对象。该实例的构造函数有一个原型属性prototype，与实例的__proto__属性指向同一个对象。同时，原型对象的constructor 指向构造函数本身。</p>\n<p>当一个对象在查找一个属性时，自身没有就会根据__proto__属性向它的原型进行查找，如果还是没有，则向它的原型的原型继续查找，直至查到Object.prototype.__proto__也就是null，这样就形成了原型链。</p>\n<h1 id=\"10-闭包\"><a href=\"#10-闭包\" class=\"headerlink\" title=\"10. 闭包\"></a>10. 闭包</h1><p>在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。可以在一个内层函数中访问到其外层函数的作用域。</p>\n<p>闭包就是能够读取其他函数内部变量的函数。主要作用是解决变量污染问题，也可以用来延长局部变量的生命周期。</p>\n<ul>\n<li>优点：延长局部变量的生命周期</li>\n<li>缺点：会导致函数的变量一直保存在内存中，过多的闭包可能会导致内存泄漏</li>\n</ul>\n<h1 id=\"11-new-操作符的实现机制\"><a href=\"#11-new-操作符的实现机制\" class=\"headerlink\" title=\"11. new 操作符的实现机制\"></a>11. new 操作符的实现机制</h1><ol>\n<li>首先创建了一个新的空对象</li>\n<li>设置原型，将对象的原型设置为函数的prototype对象。</li>\n<li>让函数的this指向这个对象，执行构造函数的代码（为这个新对象添加属性）</li>\n<li>判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">myNew</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> obj = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">  obj.<span class=\"property\">__proto__</span> = context.<span class=\"property\"><span class=\"keyword\">prototype</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = context.<span class=\"title function_\">apply</span>(obj, [...<span class=\"variable language_\">arguments</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> res === <span class=\"string\">&quot;object&quot;</span> ? res : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"12-this-的理解？\"><a href=\"#12-this-的理解？\" class=\"headerlink\" title=\"12. this 的理解？\"></a>12. this 的理解？</h1><ol>\n<li>概念：<br>this是 JS 的一个关键字，它是函数运行时，自动生成的一个内部对象，只能在函数内部使用，随着函数使用场合的不同，this的值会发生变化，但有一个总的原则：this指的是调用函数的那个对象。</li>\n<li>this的指向：</li>\n</ol>\n<ul>\n<li>① 作为普通函数执行时，this指向window，但在严格模式下this指向undefined。</li>\n<li>② 函数作为对象里的方法被调用时，this指向该对象.</li>\n<li>③ 当用new运算符调用构造函数时，this指向返回的这个对象。</li>\n<li>④ 箭头函数的this绑定看的是this所在函数定义在哪个对象下，就绑定哪个对象。- 如果存在嵌套，则this绑定到最近的一层对象上。</li>\n<li>⑤ call()、apply()、bind()是函数的三个方法，都可以显式的指定调用函数的this指向。</li>\n</ul>\n<h1 id=\"13-call、apply、bind的区别以及手写实现\"><a href=\"#13-call、apply、bind的区别以及手写实现\" class=\"headerlink\" title=\"13.call、apply、bind的区别以及手写实现\"></a>13.call、apply、bind的区别以及手写实现</h1><ul>\n<li><code>call()</code>可以传递两个参数，第一个参数是指定函数内部中<code>this</code>的指向，第二个参数是函数调用时需要传递的参数。改变<code>this</code>指向后原函数会立即执行，且此方法只是临时改变<code>this</code>指向一次。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 实现call方法</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myCall</span> = <span class=\"keyword\">function</span> (<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判断调用对象</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span> != <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;type error&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 首先获取参数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> args = [...<span class=\"variable language_\">arguments</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 判断context是否传入，如果没有，就设置为window</span></span><br><span class=\"line\">  context = context || <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 将被调用的方法置入context的属性</span></span><br><span class=\"line\">  <span class=\"comment\">// this 即为要调用的方法</span></span><br><span class=\"line\">  context.<span class=\"property\">fn</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 执行要被调用的方法</span></span><br><span class=\"line\">  res = context.<span class=\"title function_\">fn</span>(...args);</span><br><span class=\"line\">  <span class=\"comment\">// 删除手动增加的属性方法</span></span><br><span class=\"line\">  <span class=\"keyword\">delete</span> context.<span class=\"property\">fn</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 执行结果返回</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>apply()</code>接受两个参数，第一个参数是<code>this</code>的指向，第二个参数是函数接受的参数，以<code>数组</code>的形式传入。改变<code>this</code>指向后原函数会立即执行，且此方法只是临时改变<code>this</code>指向一次。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 实现apply方法</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myApply</span> = <span class=\"keyword\">function</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span> != <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;type error&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  context = context || <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 使用 symbol 来保证属性唯一</span></span><br><span class=\"line\">  <span class=\"comment\">// 也就是保证不会重写用户自己原来定义在context中的同名属性</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> fnSymbol = <span class=\"title class_\">Symbol</span>();</span><br><span class=\"line\">  context[fnSymbol] = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 执行被调用的方法</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">arguments</span>[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">    res = context[fnSymbol](...<span class=\"variable language_\">arguments</span>[<span class=\"number\">1</span>]);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res = context[fnSymbol]();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">delete</span> context[fnSymbol];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>bind()</code>方法的第一参数也是<code>this</code>的指向，后面传入的也是一个参数列表(但是这个参数列表可以分多次传入)。改变<code>this</code>指向后不会立即执行，而是返回一个永久改变<code>this</code>指向的函数。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 实现bind方法</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myBind</span> = <span class=\"keyword\">function</span> (<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span> != <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;type error&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> args = [...<span class=\"variable language_\">arguments</span>].<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> fn = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Fn</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn.<span class=\"title function_\">apply</span>(</span><br><span class=\"line\">      <span class=\"variable language_\">this</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Fn</span> ? <span class=\"variable language_\">this</span> : context,</span><br><span class=\"line\">      <span class=\"comment\">// 当前这个 arguments 是指 Fn 的参数</span></span><br><span class=\"line\">      args.<span class=\"title function_\">concat</span>(...<span class=\"variable language_\">arguments</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>共同点：改变函数执行时的上下文，简而言之就是改变函数运行时的<code>this</code>指向。<br> 不同：</p>\n<ul>\n<li><code>call()</code>和<code>bind()</code>第二个参数是列表形式的；<code>apply()</code>第二个参数是数组形式。</li>\n<li><code>call()</code>和<code>apply()</code>是立即执行；<code>bind()</code>不会立即执行而是生成一个修改<code>this</code>之后的新函数。</li>\n</ul>\n<h1 id=\"14-箭头函数\"><a href=\"#14-箭头函数\" class=\"headerlink\" title=\"14. 箭头函数\"></a>14. 箭头函数</h1><ol>\n<li>箭头函数是定义函数一种新的方式，比普通函数定义更加方便和简单。</li>\n<li>箭头函数不绑定<code>this</code>，会捕获其所在上下文的<code>this</code>，作为自己的<code>this</code>。</li>\n<li>箭头函数不能用作构造函数，也就是说不可以使用<code>new</code>命令，否则会抛出错误。</li>\n<li>箭头函数不绑定<code>arguments</code>，取而代之用<code>rest</code>参数解决，同时没有<code>super</code>和<code>new.target</code>。</li>\n<li>使用<code>call</code>，<code>apply</code>，<code>bind</code>并不会改变箭头函数中的<code>this</code>指向。对箭头函数使用<code>call</code>或<code>apply</code>方法时，只会传入参数并调用函数；对箭头函数使用<code>bind</code>方法时，只会返回一个预设参数的新函数，并不会改变这个新函数的<code>this</code>指向。</li>\n</ol>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"15-浅拷贝和深拷贝的实现\"><a href=\"#15-浅拷贝和深拷贝的实现\" class=\"headerlink\" title=\"15. 浅拷贝和深拷贝的实现\"></a>15. 浅拷贝和深拷贝的实现</h1><p><code>浅拷贝</code>：如果属性是基本类型，拷贝的就是基本类型的值；如果属性是引用类型，拷贝的就是内存地址。即浅拷贝是<code>拷贝一层</code>，深层次的引用类型则共享内存地址。常用的方法有：object.assign，扩展运算符等等</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码var <span class=\"attr\">a</span> = &#123; count: <span class=\"number\">1</span>, deep: &#123; count: <span class=\"number\">2</span> &#125; &#125;<span class=\"comment\">;</span></span><br><span class=\"line\">var <span class=\"attr\">b</span> = Object.assign(&#123;&#125;, a)<span class=\"comment\">;</span></span><br><span class=\"line\">// 或者</span><br><span class=\"line\">var <span class=\"attr\">c</span> = &#123;...a&#125;<span class=\"comment\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 实现一个浅拷贝</span><br><span class=\"line\">function shallowClone(obj) &#123;</span><br><span class=\"line\">  const <span class=\"attr\">newObj</span> = &#123;&#125;<span class=\"comment\">;</span></span><br><span class=\"line\">  for (let prop in obj) &#123;</span><br><span class=\"line\">    if (obj.hasOwnProperty(prop)) &#123;</span><br><span class=\"line\">      newObj<span class=\"section\">[prop]</span> = obj<span class=\"section\">[prop]</span><span class=\"comment\">;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return newObj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>深拷贝</code>：开辟一个新的栈，两个对象的属性完全相同，但是对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 深拷贝</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Object</span>&#125; obj 要拷贝的对象</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Map</span>&#125; map 用于存储循环引用对象的地址</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deepClone</span>(<span class=\"params\">obj = &#123;&#125;, map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj === <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> obj <span class=\"comment\">// 如果是null或者undefined我就不进行拷贝操作</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Date</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(obj)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">RegExp</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(obj)</span><br><span class=\"line\">  <span class=\"comment\">// 可能是对象或者普通的值  如果是函数的话是不需要深拷贝</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">&#x27;object&#x27;</span>) <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (map.<span class=\"title function_\">get</span>(obj)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> map.<span class=\"title function_\">get</span>(obj);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = &#123;&#125;; <span class=\"comment\">// 初始化返回结果</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">    obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span> ||</span><br><span class=\"line\">    <span class=\"comment\">// 加 || 的原因是为了防止 Array 的 prototype 被重写，Array.isArray 也是如此</span></span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"title function_\">toString</span>(obj) === <span class=\"string\">&quot;[object Array]&quot;</span></span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    result = [];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 防止循环引用</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 保证 key 不是原型属性</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 递归调用</span></span><br><span class=\"line\">      result[key] = <span class=\"title function_\">deepClone</span>(obj[key], map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"16-JavaScript-中内存泄漏的几种情况\"><a href=\"#16-JavaScript-中内存泄漏的几种情况\" class=\"headerlink\" title=\"16. JavaScript 中内存泄漏的几种情况\"></a>16. JavaScript 中内存泄漏的几种情况</h1><p><code>内存泄漏</code>一般是指系统进程不再用到的内存，没有及时释放，造成内存资源浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。</p>\n<p>造成内存泄漏的原因有：</p>\n<ol>\n<li><code>全局变量。</code>在局部作用域中，函数执行完毕后，变量就没有存在的必要了，垃圾回收机制很快的做出判断并回收；但是对于全局变量，很难判断什么时候不用这些变量，无法正常回收。<br> 解决办法：<br> ① 尽量少使用全局变量；<br> ② 使用严格模式，在 js 文件头部或者函数的顶部加上<code>use strict</code>。</li>\n<li><code>闭包引起的内存泄露。</code>闭包可以读取函数内部的变量，然后让这些变量始终保存在内存中，如果在使用结束后没有将局部变量清除，就可能导致内存泄露。<br> 解决办法：将事件处理函数定义在外部，解除闭包。</li>\n<li><code>被遗忘的定时器。</code>定时器<code>setInterval</code>或者<code>setTimeout</code>不再需要使用时，且没有被清除，导致定时器的回调函数及其内部依赖的变量都不能被回收，就会造成内存泄漏。<br> 解决办法：当不需要定时器的时候，调用<code>clearInterval</code>或者<code>clearTimeout</code>手动清除。</li>\n<li><code>事件监听。</code>垃圾回收机制不好判断事件是否需要被解除，导致<code>callback</code>不能被释放，此时需要手动解除绑定。<br> 解决办法：及时使用<code>removeEventListener</code>移除事件监听。</li>\n<li><code>元素引用没有清理。</code><br> 解决办法：移除元素后，手动设置元素的引用为<code>null</code>。</li>\n<li><code>console</code>。传递给<code>console.log</code>的对象是不能被垃圾回收，可能会存在内存泄漏。<br> 解决办法：清除不必要的<code>console</code>。</li>\n</ol>\n<h1 id=\"17-防抖和节流的区别，以及手写实现\"><a href=\"#17-防抖和节流的区别，以及手写实现\" class=\"headerlink\" title=\"17. 防抖和节流的区别，以及手写实现\"></a>17. 防抖和节流的区别，以及手写实现</h1><p><code>防抖</code>：多次触发事件，事件处理函数只执行一次，并且是在触发操作结束时执行。也就是说，当一个事件被触发，准备执行事件函数前，会等待一定的时间，在这个等待时间内，如果没有再次被触发，那么就执行，如果又触发了，那就本次作废，重置等待时间，直到最终能执行。<br> 主要应用场景：搜索框搜索输入，用户最后一次输入完，再发送请求；手机号、邮箱验证输入检测</p>\n<p><code>节流</code>：事件触发后，规定时间内，事件处理函数不能再次被调用。也就是说在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。<br> 主要应用场景：高频点击、表单重复提交等。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">/*** 防抖函数 n 秒后再执行该事件，若在 n 秒内被重复触发，则重新计时</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> func 要被防抖的函数</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> wait 规定的时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func, wait</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span>; <span class=\"comment\">// 保存this指向</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = <span class=\"variable language_\">arguments</span>; <span class=\"comment\">// 拿到event对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      func.<span class=\"title function_\">apply</span>(context, args)</span><br><span class=\"line\">    &#125;, wait)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*** 节流函数 n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> fn 要被节流的函数</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> wait 规定的时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttled</span>(<span class=\"params\">fn, wait</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!timer) &#123;</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(<span class=\"variable language_\">this</span>, args);</span><br><span class=\"line\">        timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      &#125;, wait);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-EventLoop-事件循环\"><a href=\"#18-EventLoop-事件循环\" class=\"headerlink\" title=\"18. EventLoop 事件循环\"></a>18. EventLoop 事件循环</h1><p>js 是单线程运行的，当遇到一个异步事件后并不会一直等待其返回结果，而是会将这个事件挂起，继续执行执行栈中的其他任务。当一个异步事件返回结果后，js会将这个事件加入与当前执行栈不同的另一个队列–<code>事件队列（Task Queue）</code>。被放入事件队列不会立刻执行其回调，而是等待当前执行栈中的所有任务都执行完毕， 主线程处于闲置状态时，主线程会去查找事件队列是否有任务。如果有，那么主线程会从中取出排在第一位的事件，并把这个事件对应的回调放入执行栈中，然后执行其中的同步代码…，如此反复，这样就形成了一个无限的循环，这个过程被称为<code>事件循环（Event Loop）</code>。</p>\n<p>实际上,异步任务之间并不相同，它们的执行优先级也有区别。异步任务分两类：<code>微任务（micro task</code>）和<code>宏任务（macro task）</code>。</p>\n<p>微任务包括： <code>promise 的回调</code>、node 中的 <code>process.nextTick</code> 、对 Dom 变化监听的 <code>MutationObserver</code>。</p>\n<p>宏任务包括： script 脚本的执行，<code>setTimeout</code> 、<code>setInterval</code> 和<code>setImmediate</code> 一类的定时事件，还有如 I/O 操作，UI 渲染等。</p>\n<p>在一个事件循环中，异步事件返回结果后会被放到一个事件队列中。然而，根据这个异步事件的类型，这个事件实际上会被对应的<code>宏任务队列</code>或者<code>微任务队列</code>中去。并且在当前执行栈为空的时候，主线程会查看微任务队列是否有事件存在。如果不存在，那么再去宏任务队列中取出一个事件并把对应的回调加入当前执行栈；如果存在，则会依次执行队列中事件对应的回调，直到微任务队列为空，然后去宏任务队列中取出最前面的一个事件，把对应的回调加入当前执行栈…如此反复，进入循环。</p>\n<p><strong>在当前执行栈执行完毕时会立刻先处理所有微任务队列中的事件，然后再去宏任务队列中取出一个事件。同一次事件循环中，微任务永远在宏任务之前执行</strong>。</p>\n<h1 id=\"19-Promise\"><a href=\"#19-Promise\" class=\"headerlink\" title=\"19. Promise\"></a>19. Promise</h1><p><code>Promise</code>异步编程的一种解决方案。<code>Promise</code>是一个构造函数，接收一个函数作为参数，返回一个 Promise 实例。一个 Promise 实例有三种状态，分别是<code>pending</code>、<code>fulfilled</code>和<code>rejected</code>，分别代表了进行中、已成功和已失败。实例的状态只能由 pending 转变 fulfilled 或者 rejected 状态，并且状态一经改变，就无法再改变了。状态的改变是通过<code>resolve()</code>和<code>reject()</code>函数来实现的，可以在异步操作结束后调用这两个函数改变 Promise 实例的状态。Promise 的原型上定义了一个 <code>then</code>方法，使用这个 then 方法可以为两个状态的改变注册回调函数。这个回调函数属于微任务，会在本轮事件循环的末尾执行。</p>"},{"title":"new_article","keywords":"hexo,butterfly,主題,doc,教程,文檔","description":"描述 Butterfly安裝文檔-快速開始","top_img":"设置false不显示顶部图片","sticky":"数值越大越靠前","cover":"首页封面","comments":1,"abbrlink":"d9795d88","date":"2023-05-25T11:04:29.000Z","updated":"2023-05-25T11:04:29.000Z","_content":"\n\n\n摘要\n\n<!-- more -->\n","source":"_posts/c/new-article.md","raw":"---\ntitle: new_article\ntags:\n  - 教程\n  - Hexo\n  - 主題\n  - butterfly\ncategories: 类别\nkeywords: 'hexo,butterfly,主題,doc,教程,文檔'\ndescription: 描述 Butterfly安裝文檔-快速開始\ntop_img: 设置false不显示顶部图片\nsticky: 数值越大越靠前\ncover: 首页封面\ncomments: false评论\nabbrlink: d9795d88\ndate: 2023-05-25 19:04:29\nupdated: 2023-05-25 19:04:29\n---\n\n\n\n摘要\n\n<!-- more -->\n","slug":"c/new-article","published":1,"layout":"post","photos":[],"link":"","_id":"cli311z7p00007zjn05ye68s7","content":"<p>摘要</p>\n<span id=\"more\"></span>\n","site":{"data":{"creativity":[{"class_name":"开启创造力","creativity_list":[{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#ffffff","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#d57979","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"},{"name":"AfterEffect","color":"#989bf8","icon":"https://img.zhheo.com/i/2022/08/22/6302f0748a83b.png"},{"name":"Sketch","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63030a85d6458.png"},{"name":"Docker","color":"#57b6e6","icon":"https://img.zhheo.com/i/2022/08/22/6303102c049d1.png"},{"name":"Photoshop","color":"#4082c3","icon":"https://img.zhheo.com/i/2022/08/22/63030fe730a69.png"},{"name":"FinalCutPro","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/630310dea00f5.png"},{"name":"Python","color":"#54cdda","icon":"https://img.zhheo.com/i/2022/08/22/63031127e8e2b.png"},{"name":"Swift","color":"#eb6840","icon":"https://img.zhheo.com/i/2022/08/22/630311760ca04.png"},{"name":"Principle","color":"#8f55ba","icon":"https://img.zhheo.com/i/2022/08/22/630311cf9dded.png"},{"name":"illustrator","color":"#f29e39","icon":"https://img.zhheo.com/i/2022/08/22/6303121db0410.png"},{"name":"CSS3","color":"#2c51db","icon":"https://img.zhheo.com/i/2022/08/22/630312c06cdc5.png"},{"name":"JS","color":"#f7cb4f","icon":"https://img.zhheo.com/i/2022/08/22/630312f898a1c.png"},{"name":"HTML","color":"#e9572b","icon":"https://img.zhheo.com/i/2022/08/22/6303132113bbb.png"},{"name":"Git","color":"#df5b40","icon":"https://img.zhheo.com/i/2022/09/23/632d2d33b1e1b.webp"},{"name":"Apifox","color":"#e65164","icon":"https://img.zhheo.com/i/2022/09/23/632d2e083fc9b.webp"}]}],"indexwz":[{"date":"精品","msg":"魔改目录","color":"color: #e04f4f;","url":"/posts/c6050a1d.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（一）","color":"color: #3d82ff;","url":"/posts/b48f40bd.html"},{"date":"css","msg":"主题butterfly4.5.1css美化教程（二）","color":"color: #3d82ff;","url":"/posts/eb769414.html"},{"date":"bat","msg":"hexo博客系统快速命令工具（CMD快速辅助工具）","color":null,"url":"/posts/db0a31c8.html"},{"date":"教程","msg":"5分钟搭一个hexo博客","color":null,"url":"/posts/b9dc5266.html"},{"date":"J  S","msg":"主题butterfly顶部复制提示弹窗","color":null,"url":"/posts/3296cbc9.html"},{"date":"教程","msg":"主题butterfly拥有星空背景和流星特效","color":null,"url":"/posts/9ee2cd59.html"},{"date":"教程","msg":"Butterfly 安裝文檔(一) 快速開始","color":null,"url":"/posts/21cfbf15.html"},{"date":"J  S","msg":"友情链接快速添加js代码按钮填写内容","color":null,"url":"/posts/80adb334.html"}],"link":[{"class_name":"<i class=\"fas fa-check-double\" style=\"color: #FF6666;padding-right: 0.4rem\"></i>網站<div class=\"addBtn\"><button onclick=\"toRandomFlink()\"><i class=\"fas fa-shuffle\"></i>随机打开一个链接</button></div>","class_desc":"<span style=\"font-style: italic;\">小窝的装修参考了以下博客</span>","link_list":[{"name":"Akilarの糖果屋","link":"https://akilar.top/","siteshot":"https://npm.elemecdn.com/akilar-friends@latest/siteshot/akilar.top.jpg","avatar":"https://npm.elemecdn.com/akilar-friends@latest/avatar/akilar.top.jpg","descr":"欢迎光临糖果屋"},{"name":"张洪Heo","link":"https://blog.zhheo.com/","avatar":"https://img.zhheo.com/i/2022/08/19/62ff32fa28da1.png","descr":"是一名 设计师、产品经理、独立开发者、博主"},{"name":"安知鱼`Blog","link":"https://anzhiy.cn/","avatar":"https://image.anzhiy.cn/adminuploads/1/2022/09/15/63232b7d91d22.jpg","descr":"生活明朗，万物可爱"}]},{"class_name":"<i class=\"fas fa-fan\" style=\"color:#00cccc;padding-right: 0.4rem\"></i>我的好朋友们","class_desc":"<span style=\"font-style: italic;\">最可愛的朋友在這裏</span>","link_list":[{"name":"轻笑Chuckle","link":"https://www.chuckle.top/","avatar":"https://www.chuckle.top/img/head.webp","descr":"宁静致远，倾城轻笑"},{"name":"ichikaの小窝","link":"https://ichika.cc/","avatar":"https://ichika.cc/img/Page/HeadIcon.jpg","descr":"Hello,gamer!"},{"name":"Leonus","link":"https://blog.leonus.cn/","avatar":"https://q1.qlogo.cn/g?b=qq&nk=553344777&s=5","descr":"进一寸有进一寸的欢喜。"},{"name":"Sianx's Blog","link":"https://sianx.com","avatar":"https://cdn.bilicdn.tk/npm/picture-sianx@1.0.0/Blog/logo.png","descr":"总之岁月漫长, 然而值得等待。"},{"name":"Fomalhaut🥝","link":"https://www.fomal.cc/","avatar":"https://www.fomal.cc/assets/head.jpg","descr":"Future is now 🍭🍭🍭"},{"name":"小城故事","link":"https://www.webxc.ml","avatar":"https://npm.elemecdn.com/webxc/logo/logo.jpg","descr":"欢迎光临小城故事"},{"name":"呆鱼","link":"https://daiyu-233.top/","avatar":"https://daiyu-233.top/img/avatar.png","descr":"命运之所以称为命运，正是因为它无可改变。"},{"name":"Ethan.Tzy","link":"https://tzy1997.com/","avatar":"https://bu.dusays.com/2022/05/02/626f92e193879.jpg","descr":"古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志"},{"name":"青衣","link":"https://www.qingyi1220.cn/","avatar":"https://www.qingyi1220.cn/img/Tsingyi.jpg","descr":"世界既不黑也不白，而是一道精致的灰"},{"name":"子辰辰","link":"https://www.xiaozhuzi.xyz/","avatar":"https://ghost.xiaozhuzi.xyz/cc3/99.jpg","descr":"一个渗透测试在学的小菜鸡"},{"name":"小华同学927のBlog","link":"https://blog.xiaohua927.top/","avatar":"https://i.imgtg.com/2022/12/01/DM501.jpg","descr":"行而不辍，未来可期！"},{"name":"无影博客","link":"https://wyblog1.eu.org","avatar":"https://gcore.jsdelivr.net/gh/612901/661111@main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202022-12-21%20102358.png","descr":"无影博客"},{"name":"Echocbx","link":"https://ezgx.tk/","avatar":"https://wlopck.gitee.io/img/avatar.png","descr":"分享科技与狠活~"},{"name":"wsbのblog","link":"https://wsbblog.cn","avatar":"https://wsbblog.cn/img/wsb.webp","descr":"己所不欲，勿施于人"},{"name":"LyShark - 孤风洗剑","link":"https://www.lyshark.com","avatar":"https://www.lyshark.com/images/baidu_logo.png","descr":"道，可道，非常道；名，可名，非常名。—— 老子《道德经》"}]}],"notice":{"index1":[{"date":"biubiu"},{"date":"吐泡泡"}],"index2":[{"date":"一个"},{"date":"两个"}],"index3":[{"date":"一串"},{"date":"两串"}]},"reward":[{"class_name":"赞赏","reward_list":[{"name":"鹿啵包","amount":10,"datatime":"2022-11-08T00:00:00.000Z"},{"name":"疾速k","amount":50,"datatime":"2022-09-20T00:00:00.000Z"}]}],"shuanbian":[{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/45663c9f2ce54eb2ae8628efb0c43390.jpg","link":"/","title":"大学课程 - 计算机网络","xiao":"梅花","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/fe86174cbe99485e85f43b37c16622da.jpg","link":"/","title":"大学课程 - 计算机组成原理","xiao":"落叶"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/v2-8e40cc0dbad304617ad773d0f256d339_r.jpg","link":"/","title":"大学课程 - 操作系统","xiao":"球手","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cdn.bywind.xyz/img/cover/image-20221208194011653.png","link":"/","title":"基于Butterfly的外挂标签引入 - 独特的风格让你的博客别具一格","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/background/63233ec9893f4.webp","link":"/","title":"Fiddler抓包 - 功能非常强大的web调试利器","xiao":"精品","riqi":"2022.01.01"},{"cover":"https://cloud-image-host.oss-cn-beijing.aliyuncs.com/page/cover/2022112902.png","link":"/","title":"博客美化日记 - 囊括本博客Butterfly主题的基本美化升级","xiao":"精品","riqi":"2022.01.01"}],"video":[{"cover":"https://npm.elemecdn.com/justlovesmile-img/33f7ad7c55b5df1e5bdb6a6ea3eb35b.jpg","time":"2022/03/10","link":"//player.bilibili.com/player.html?aid=937145035&bvid=BV18T4y1D7wj&cid=545915013&page=1","title":"雷神池，璃月雷神前来报道","description":"【原神】20220310"}],"widget":{"bottom":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"card-widget heo-right-widget\" id=\"card-wechat\"><div id=\"flip-wrapper\"><div id=\"flip-content\"><div class=\"face\"></div><div class=\"back face\"></div></div></div></div>"}],"top":[{"class_name":null,"id_name":"newYear","name":null,"icon":null,"order":1,"html":"<div class=\"about-statistic author-content-item2\"><div class=\"card-content\"><div class=\"lightning\"><div class=\"lightning1\"><img src=\"https://drfs.ctcontents.com/file/14237530/755647870/e44191/img/index/swordsmen.webp\"></div><div class=\"lightning2\"><img src=\"https://www.jiangweishan.com/demo/lightning2.png\"></div></div><span class=\"author-content-item-title\">文章归档  </span><div class=\"banner-button-group\"><a class=\"banner-button\" onclick=\"pjax.loadUrl(&quot;/archives/&quot;)\" data-pjax-state=\"data-pjax-state\"><span class=\"banner-button-text\">文章隧道</span></a></div></div></div>"}]}}},"excerpt":"<p>摘要</p>","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cli311udt00036ojne7jlebzc","category_id":"cli311udy000a6ojn3wpxh7i0","_id":"cli311ue2000j6ojn7ki6be4c"},{"post_id":"cli311udw00076ojn2j82djqf","category_id":"cli311ue0000f6ojnc3q8959a","_id":"cli311ue3000n6ojnbsl0a17d"},{"post_id":"cli311ue900166ojn8jsb45pn","category_id":"cli311uea00186ojn52yz6vk1","_id":"cli311ueb001e6ojn20y65ce0"},{"post_id":"cli311ue900176ojn6dghfpna","category_id":"cli311uea001a6ojn0lu63mi7","_id":"cli311ueb001h6ojn8m7lagon"},{"post_id":"cli311z7p00007zjn05ye68s7","category_id":"cli311udv00046ojn3wk5hwq8","_id":"cli311z7t00037zjndy482kjn"}],"PostTag":[{"post_id":"cli311udt00036ojne7jlebzc","tag_id":"cli311ue3000o6ojn3she9rkm","_id":"cli311ue700106ojngaqa44uz"},{"post_id":"cli311udt00036ojne7jlebzc","tag_id":"cli311ue6000u6ojn1ywqagic","_id":"cli311ue800116ojn1811eg1q"},{"post_id":"cli311udw00076ojn2j82djqf","tag_id":"cli311ue7000z6ojn3ik717nx","_id":"cli311ue800136ojn0p799em0"},{"post_id":"cli311udw00076ojn2j82djqf","tag_id":"cli311ue800126ojnd9lz39dp","_id":"cli311ue800146ojnd4yy5kpp"},{"post_id":"cli311ue900166ojn8jsb45pn","tag_id":"cli311ue3000o6ojn3she9rkm","_id":"cli311ueb001c6ojn6yu9harp"},{"post_id":"cli311ue900166ojn8jsb45pn","tag_id":"cli311uea00196ojn7k02alqh","_id":"cli311ueb001d6ojnbf8n5qux"},{"post_id":"cli311ue900176ojn6dghfpna","tag_id":"cli311ue3000o6ojn3she9rkm","_id":"cli311ueb001f6ojnctbm8egv"},{"post_id":"cli311ue900176ojn6dghfpna","tag_id":"cli311uea001b6ojnau22dnqe","_id":"cli311ueb001g6ojnhjjhgm24"},{"post_id":"cli311z7p00007zjn05ye68s7","tag_id":"cli311udw00056ojn9vvkc78o","_id":"cli311z7t00017zjn59gjaaov"},{"post_id":"cli311z7p00007zjn05ye68s7","tag_id":"cli311udy000b6ojn1sg2f27e","_id":"cli311z7t00027zjnfx0z23ro"},{"post_id":"cli311z7p00007zjn05ye68s7","tag_id":"cli311ue0000g6ojn1pkp183k","_id":"cli311z7t00047zjn3ggsg8j3"},{"post_id":"cli311z7p00007zjn05ye68s7","tag_id":"cli311ue2000k6ojnb2ztejor","_id":"cli311z7t00057zjnel4ug0l3"}],"Tag":[{"name":"教程","_id":"cli311udw00056ojn9vvkc78o"},{"name":"Hexo","_id":"cli311udy000b6ojn1sg2f27e"},{"name":"主題","_id":"cli311ue0000g6ojn1pkp183k"},{"name":"butterfly","_id":"cli311ue2000k6ojnb2ztejor"},{"name":"前端","_id":"cli311ue3000o6ojn3she9rkm"},{"name":"C","_id":"cli311ue6000u6ojn1ywqagic"},{"name":"quickjs","_id":"cli311ue7000z6ojn3ik717nx"},{"name":"devtools","_id":"cli311ue800126ojnd9lz39dp"},{"name":"HTML","_id":"cli311uea00196ojn7k02alqh"},{"name":"JS","_id":"cli311uea001b6ojnau22dnqe"}]}}